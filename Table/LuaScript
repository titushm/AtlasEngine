getMainForm().Splitter1.Visible = state
  getMainForm().Panel4.Visible    = state
  getMainForm().Panel5.Visible    = state

function cycleFullCompact()
  local state = not(compactmenuitem.Caption == 'Compact View Mode')
  compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'
  getMainForm().Splitter1.Visible = state
  getMainForm().Panel4.Visible    = state
  getMainForm().Panel5.Visible    = state
end

function addCompactMenu()
  if compactmenualreadyexists then return end
  local parent = getMainForm().Menu.Items
  compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem)
  compactmenuitem.Caption = 'Compact View Mode'
  compactmenuitem.OnClick = cycleFullCompact
  compactmenualreadyexists = 'yes'
end

addCompactMenu()

function BGRToHex(blue, green, red)
GetAddressList().Control[0].BackgroundColor= (col)
 if(red < 0 or red > 255 or green < 0 or green > 255 or blue < 0 or blue > 255) then

 return nil
 end
 return string.format("0x%.2X%.2X%.2X", blue,green,red)
end

--======================================================--

--======================================================--
function colorMenuClick()
 fc = createForm()
 fc.Width = 300
 fc.Height = 300
 fc.Position = 'poScreenCenter'
 fc.Caption = 'Theme Picker'
 fc.Color = '0x00FFFFFF'

 p = createPanel(fc)
 p.top = 20
 p.height = 100
 p.width = 200
 p.left = math.floor((fc.width - p.width) / 2)
 p.color = '0x00000000'

 t1 = createTrackBar(fc)
 t1.left = 15
 t1.top = p.height + p.top + 20
 t1.width = fc.width - t1.left - 80
 t1.height = 30
 t1.Max = 255
 t1.Min = 0
 t1.position = 0
 t1.SelStart = 0
 t1.SelEnd = 0

 t2 = createTrackBar(fc)
 t2.left = 15
 t2.top = t1.height + t1.top + 10
 t2.width = fc.width - t2.left - 80
 t2.height = 30
 t2.Max = 255
 t2.Min = 0
 t2.position = 0
 t2.SelStart = 0
 t2.SelEnd = 0

 t3 = createTrackBar(fc)
 t3.left = 15
 t3.top = t2.height + t2.top + 10
 t3.width = fc.width - t3.left - 80
 t3.height = 30
 t3.Max = 255
 t3.Min = 0
 t3.position = 0
 t3.SelStart = 0
 t3.SelEnd = 0

 BLabel = createLabel(fc)
 BLabel.top = t1.top
 BLabel.left = t1.left + t1.width + 12
 BLabel.caption = 'B : 0'
 BLabel.font.color = '0x00FF2020'
 BLabel.font.style = 'fsBold'

 GLabel = createLabel(fc)
 GLabel.top = t2.top
 GLabel.left = t2.left + t2.width + 12
 GLabel.caption = 'G : 0'
 GLabel.font.color = '0x00009300'
 GLabel.font.style = 'fsBold'

 RLabel = createLabel(fc)
 RLabel.top = t3.top
 RLabel.left = t3.left + t3.width + 12
 RLabel.caption = 'R : 0'
 RLabel.font.color = '0x001717FF'
 RLabel.font.style = 'fsBold'


 HxLabel = createLabel(fc)
 HxLabel.top = t3.top + t3.height + 15
 HxLabel.left = t3.left


 Hx1Label = createLabel(fc)
 Hx1Label.top = t3.top + t3.height + 7
 Hx1Label.left = HxLabel.left + HxLabel.width
 Hx1Label.font.size = 14
 Hx1Label.font.style = 'fsBold'
 Hx1Label.caption = ' '

 ExamLabel = createLabel(fc)
 ExamLabel.top = HxLabel.top + HxLabel.height + 5
 ExamLabel.left = HxLabel.left
 ExamLabel.font.size = 8


 bgrLabel = createLabel(fc)
 bgrLabel.top = ExamLabel.top + ExamLabel.height + 3
 bgrLabel.left = ExamLabel.left
 bgrLabel.font.size = 8

 smpLabel = createLabel(fc)
 smpLabel.top = bgrLabel.top + bgrLabel.height + 13
 smpLabel.left = bgrLabel.left
 smpLabel.font.size = 8

 smp1Label = createLabel(fc)
 smp1Label.top = smpLabel.top + smpLabel.height + 13
 smp1Label.left = smpLabel.left
 smp1Label.font.size = 8



 fc.show()

 B = 0
 G = 0
 R = 0
 col = nil





 function btbChange(sender)

  B = t1.position
  G = t2.position
  R = t3.position
  BLabel.Caption = 'B :  '..tostring(t1.position)
  col = BGRToHex(B,G,R)
  p.color = col

 end




 function gtbChange(sender)

  B = t1.position
  G = t2.position
  R = t3.position
  GLabel.Caption = 'G :  '..tostring(t2.position)
 col = BGRToHex(B,G,R)
  p.color = col

 end

 function rtbChange(sender)

  B = t1.position
  G = t2.position
  R = t3.position
  RLabel.Caption = 'R :  '..tostring(t3.position)
  col = BGRToHex(B,G,R)
  p.color = col

 end

 t1.onChange = btbChange
 t2.onChange = gtbChange
 t3.onChange = rtbChange



end





local int = getInternet()
local ICO = int.getURL("https://cdn.discordapp.com/attachments/721278292019118102/867141796085628958/AtlasClientIcon64.png")
local IM = createStringStream(ICO)
int.Destroy()
local Pic = createPicture()
Pic.loadFromStream(IM)
local Bit = Pic.getBitmap()
getApplication().Icon = Bit

lastSpeed=1;

function checkKeys(timer)
  if (isKeyPressed(VK_R)) then
    if lastspeed ~= 3 then
      speedhack_setSpeed(3)
      lastSpeed=3
    end
  else
    if lastspeed ~= 1 then
      speedhack_setSpeed(1)
      lastSpeed=1
    end
  end

end

t=createTimer(nil)
timer_setInterval(t, 100)
timer_onTimer(t, checkKeys)
timer_setEnabled(t, true)




PROCESS_NAME = 'minecraft.windows.exe'

openProcess(PROCESS_NAME)

if getProcessIDFromProcessName(PROCESS_NAME) ~= nil then
showMessage("Automatically Connected To Game")

else

showMessage("Couldnt Automatically Connect To Game.\rConnect Manually")

end


function Dev()
 shellExecute('https://discord.com/users/430427104786644993/')
end

function UICredits()
showMessage("Thanks to fligger and His Project Genesis Table For the UI \rAnd Thanks to Corroder For his Lua Colour Picker")
end





function AttachProcess()
   openProcess(process_name)
if getProcessIDFromProcessName(PROCESS_NAME) ~= nil then
      openProcess(PROCESS_NAME)
	  Attach.ShowHint = true
	  Attach.Enabled = true
      Attach.Caption = 'Re-Attach!'
      Loaded.Visible = true
   else
      showMessage("Cant find Minecraft process.\rMake sure Minecraft is running!")
   end
end

function ArraylistToggle()
if ArraylistOnOff.Checked then
GetAddressList().Control[0].BackgroundColor=0000000


else
GetAddressList().Control[0].BackgroundColor=16777215

end
end
function GrayToggle()
if GrayOnOff.Checked then
GetAddressList().Control[0].BackgroundColor=5592405

else
GetAddressList().Control[0].BackgroundColor=16777215


end
end

PROCESS_NAME = 'minecraft.windows.exe'
:: here ::
Arraylist.setLayeredAttributes(0xFF00FF, 240, 1)
Arraylist.visible = false
--------------------
--
---- getMainForm()
--------------------
--function cycleFullCompact(sender,force) local state = not(compactmenuitem.Caption == 'Compact View Mode'); if force~=nil then state = not force end; compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'; getMainForm().Splitter1.Visible = state; getMainForm().Panel4.Visible    = state; getMainForm().Panel5.Visible    = state; end; function addCompactMenu() if compactmenualreadyexists then return end; local parent = getMainForm().Menu.Items; compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem); compactmenuitem.Caption = 'Compact View Mode'; compactmenuitem.OnClick = cycleFullCompact; compactmenualreadyexists = 'yes'; end; addCompactMenu(); cycleFullCompact(nil,true)
getMainForm().caption = "AtlasClient by TitusHM#0016"


--------------------
--
---- Panel
--------------------
TheSplitter = createSplitter(getMainForm())
TheSplitter.Align = alRight


--------------------
--
---- Panel
--------------------
CEPanel1 = createPanel(getMainForm())
CEPanel1.Width = 180
CEPanel1.Align = alRight
CEPanel1.Caption = ''
--------------------
--
---- Download
--------------------
Download = createButton(CEPanel1)
Download.Left = 10
Download.Top = 170
Download.Width = 160
Download.Height = 25
Download.Caption = 'AtlasClient Dev'
Download.onClick = Dev

--------------------
Credits = createButton(CEPanel1)
Credits.Left = 10
Credits.Top = 200
Credits.Width = 160
Credits.Height = 25
Credits.Caption = 'Credits'
Credits.onClick = UICredits
--------------------
------

--------------------
Attach = createButton(CEPanel1)
Attach.Left = 15
Attach.Height = 80
Attach.Hint = 'Restart Cheat Engine\nto attach'
Attach.Top = 10
Attach.Width = 150
Attach.ShowHint = false
Attach.onClick = AttachProcess
Attach.Caption = 'Re-Attach!'



-------------
--------------------
--
---- Loaded
--------------------
Loaded = createLabel(CEPanel1)
Loaded.Left = 18
Loaded.Top = 95
Loaded.Visible = false
Loaded.Caption = ''
Loaded.Font.Color=0x008000
Loaded.Font.Size=10
--------------------
------------------------------
---- END FORM: getMainForm()
----

--------------------

---- Arraylist
--------------------

ArraylistOnOff = createCheckBox(CEPanel1)
ArraylistOnOff.Left = 15
ArraylistOnOff.Top = 100
ArraylistOnOff.Caption = 'Dark Theme'
ArraylistOnOff.Font.Size=10
ArraylistOnOff.Onchange=ArraylistToggle

--------------------
--------------------

GrayOnOff = createCheckBox(CEPanel1)
GrayOnOff.Left = 15
GrayOnOff.Top = 120
GrayOnOff.Caption = 'Dark Gray Theme'
GrayOnOff.Font.Size=10
GrayOnOff.Onchange=GrayToggle
------------------------------
---- END FORM: getMainForm()
----
--

local int = getInternet()
local ICO = int.getURL("https://cdn.discordapp.com/attachments/721278292019118102/867141796085628958/AtlasClientIcon64.png")
local IM = createStringStream(ICO)
int.Destroy()
local Pic = createPicture()
Pic.loadFromStream(IM)
local Bit = Pic.getBitmap()
getApplication().Icon = Bit


local mainForm = getMainForm()
local colorMenu = createMenuItem(mainForm)
colorMenu.Caption = Theme

colorMenu.onClick = colorMenuClick
mainForm.PopupMenu2.Items.insert(15,colorMenu)

local mainMenu = mainForm.Menu.Items
local miColor
--Find "Color" item in main menu. Create one if not found.
for i=0,mainMenu.Count-1 do
   if mainMenu[i].Name == 'miColor' then miExtra = mainMenu[i] end
end
if miColor == nil then
   miColor = createMenuItem(mainForm)
   miColor.Name = 'miColor'
   miColor.Caption = 'Theme'
   mainMenu.insert(mainMenu.Count-2,miColor)
end

--==============================================--
--Add "Check BGR Color" item to "Color" submenu
--==============================================--
local miCheckBGRcolor = createMenuItem(miColor)
miCheckBGRcolor.Caption = 'Custom Theme'
miCheckBGRcolor.onClick = colorMenuClick
miColor.add(miCheckBGRcolor)
----

<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="34">
  <Forms>
    <Arraylist Class="TCEForm" Encoding="Ascii85">@JQRQ2nldAU:MM2b.}cx/#a46O03MuEG{X3NlhzZzRt,zk)!yFQNsLzfjK0/fLV%;H9Rw:B!k)3k:.45pd;Rtj{4*TfdK#</Arraylist>
    <UDF1 Class="TCEForm" Encoding="Ascii85">b7o++2nldAU:MM2b.}cxWeIh0Gi32eO*Fu)(dBDGnwg$a!u*{OIV8V.S(ET0JTs+vgV{,R-8r$KBr]vc4XmDl0RR</UDF1>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>2464</ID>
      <Description>"-----&gt;Press "R" ) for Speed Bypass &lt;-----"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>FF0000</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Combat"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <ShowAsSigned>0</ShowAsSigned>
      <Color>0000FF</Color>
      <GroupHeader>1</GroupHeader>
      <Address>v1</Address>
      <CheatEntries>
        <CheatEntry>
          <ID>2497</ID>
          <Description>"Hitbox (1.17)"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}
[ENABLE]
aobscanmodule(Hitbox,Minecraft.Windows.exe,CC F3 0F 10 81 EC 04 00 00 C3)
alloc(newmem,$1000,Hitbox)

label(code)
label(return)

alloc(HitboxVal,1)
registersymbol(HitboxVal)

HitboxVal:
  dd (float)0.6

newmem:
movss xmm0,[rcx+000004EC]
code:
  push eax
  mov eax [HitboxVal]
  mov [rcx+000004EC],eax
  pop eax
  jmp return

Hitbox+01:
  jmp newmem
  nop 3
return:
registersymbol(Hitbox)

[DISABLE]
Hitbox+01:
  db F3 0F 10 81 EC 04 00 00

unregistersymbol(Hitbox)
dealloc(newmem)
dealloc(HitboxVal)
unregistersymbol(HitboxVal)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2498</ID>
              <Description>"Hitbox Value"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>HitboxVal</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>197</ID>
          <Description>"Reach (1.17)"</Description>
          <Color>0000FF</Color>
          <VariableType>Float</VariableType>
          <Address>Minecraft.Windows.exe+3500E98</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>265</ID>
          <Description>"Reach (1.17.02)"</Description>
          <Color>0000FF</Color>
          <VariableType>Float</VariableType>
          <Address>Minecraft.Windows.exe+3500ED0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>352</ID>
          <Description>"Reach (1.17.10)"</Description>
          <Color>0000FF</Color>
          <VariableType>Float</VariableType>
          <Address>Minecraft.Windows.exe+35CDB78</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>70</ID>
          <Description>"RapidHit (1.17)"</Description>
          <LastState/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-08
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(RapidHit,Minecraft.Windows.exe,80 7B 50 00 74 73) // should be unique
alloc(newmem,$1000,RapidHit)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [rbx+50],01
  je Minecraft.Windows.exe+1433CF4
  jmp return

RapidHit:
  jmp newmem
  nop
return:
registersymbol(RapidHit)

[DISABLE]

RapidHit:
  db 80 7B 50 00 74 73

unregistersymbol(RapidHit)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1433C7B

Minecraft.Windows.exe+1433C56: 48 8B 01              - mov rax,[rcx]
Minecraft.Windows.exe+1433C59: 48 8D 55 D8           - lea rdx,[rbp-28]
Minecraft.Windows.exe+1433C5D: FF 50 48              - call qword ptr [rax+48]
Minecraft.Windows.exe+1433C60: 85 C0                 - test eax,eax
Minecraft.Windows.exe+1433C62: 0F 88 0C 05 00 00     - js Minecraft.Windows.exe+1434174
Minecraft.Windows.exe+1433C68: 44 39 7D D8           - cmp [rbp-28],r15d
Minecraft.Windows.exe+1433C6C: 74 06                 - je Minecraft.Windows.exe+1433C74
Minecraft.Windows.exe+1433C6E: 41 8B FE              - mov edi,r14d
Minecraft.Windows.exe+1433C71: 45 8B F4              - mov r14d,r12d
Minecraft.Windows.exe+1433C74: 48 8D 35 E5 F3 84 02  - lea rsi,[Minecraft.Windows.exe+3C83060]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1433C7B: 80 7B 50 00           - cmp byte ptr [rbx+50],00
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1433C7F: 74 73                 - je Minecraft.Windows.exe+1433CF4
Minecraft.Windows.exe+1433C81: 85 FF                 - test edi,edi
Minecraft.Windows.exe+1433C83: 0F 85 D9 00 00 00     - jne Minecraft.Windows.exe+1433D62
Minecraft.Windows.exe+1433C89: 40 88 7B 50           - mov [rbx+50],dil
Minecraft.Windows.exe+1433C8D: 48 8B 7B 20           - mov rdi,[rbx+20]
Minecraft.Windows.exe+1433C91: E8 6A 02 26 FF        - call Minecraft.Windows.exe+693F00
Minecraft.Windows.exe+1433C96: 48 8B 08              - mov rcx,[rax]
Minecraft.Windows.exe+1433C99: 4C 8B 41 08           - mov r8,[rcx+08]
Minecraft.Windows.exe+1433C9D: BA 20 00 00 00        - mov edx,00000020
Minecraft.Windows.exe+1433CA2: 48 8B C8              - mov rcx,rax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>415</ID>
          <Description>"RapidHit (1.17.10)"</Description>
          <LastState/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-17
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(RapidHit,Minecraft.Windows.exe,80 7B 50 00 74 73) // should be unique
alloc(newmem,$1000,RapidHit)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [rbx+50],01
  je Minecraft.Windows.exe+14CE944
  jmp return

RapidHit:
  jmp newmem
  nop
return:
registersymbol(RapidHit)

[DISABLE]

RapidHit:
  db 80 7B 50 00 74 73

unregistersymbol(RapidHit)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+14CE8CB

Minecraft.Windows.exe+14CE8A6: 48 8B 01              - mov rax,[rcx]
Minecraft.Windows.exe+14CE8A9: 48 8D 55 D8           - lea rdx,[rbp-28]
Minecraft.Windows.exe+14CE8AD: FF 50 48              - call qword ptr [rax+48]
Minecraft.Windows.exe+14CE8B0: 85 C0                 - test eax,eax
Minecraft.Windows.exe+14CE8B2: 0F 88 0C 05 00 00     - js Minecraft.Windows.exe+14CEDC4
Minecraft.Windows.exe+14CE8B8: 44 39 7D D8           - cmp [rbp-28],r15d
Minecraft.Windows.exe+14CE8BC: 74 06                 - je Minecraft.Windows.exe+14CE8C4
Minecraft.Windows.exe+14CE8BE: 41 8B FE              - mov edi,r14d
Minecraft.Windows.exe+14CE8C1: 45 8B F4              - mov r14d,r12d
Minecraft.Windows.exe+14CE8C4: 48 8D 35 FD 69 8C 02  - lea rsi,[Minecraft.Windows.exe+3D952C8]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+14CE8CB: 80 7B 50 00           - cmp byte ptr [rbx+50],00
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+14CE8CF: 74 73                 - je Minecraft.Windows.exe+14CE944
Minecraft.Windows.exe+14CE8D1: 85 FF                 - test edi,edi
Minecraft.Windows.exe+14CE8D3: 0F 85 D9 00 00 00     - jne Minecraft.Windows.exe+14CE9B2
Minecraft.Windows.exe+14CE8D9: 40 88 7B 50           - mov [rbx+50],dil
Minecraft.Windows.exe+14CE8DD: 48 8B 7B 20           - mov rdi,[rbx+20]
Minecraft.Windows.exe+14CE8E1: E8 8A 37 23 FF        - call Minecraft.Windows.exe+702070
Minecraft.Windows.exe+14CE8E6: 48 8B 08              - mov rcx,[rax]
Minecraft.Windows.exe+14CE8E9: 4C 8B 41 08           - mov r8,[rcx+08]
Minecraft.Windows.exe+14CE8ED: BA 20 00 00 00        - mov edx,00000020
Minecraft.Windows.exe+14CE8F2: 48 8B C8              - mov rcx,rax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2603</ID>
          <Description>"Critical Hits"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
[DISABLE]

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2602</ID>
              <Description>"FallDistance"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-29
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(FallDistance,Minecraft.Windows.exe,C7 83 DC 01 00 00 00 00 00 00 48 8B 4C) // should be unique
alloc(newmem,$1000,FallDistance)

label(code)
label(return)


newmem:



code:
  mov [rbx+000001DC],(byte)1
  jmp return

FallDistance:
  jmp newmem
  nop 5
return:
registersymbol(FallDistance)

[DISABLE]

FallDistance:
  db C7 83 DC 01 00 00 00 00 00 00

unregistersymbol(FallDistance)
dealloc(newmem)



{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1CEA90F

Minecraft.Windows.exe+1CEA8E8: 0F 2F 83 DC 01 00 00           - comiss xmm0,[rbx+000001DC]
Minecraft.Windows.exe+1CEA8EF: 73 1E                          - jae Minecraft.Windows.exe+1CEA90F
Minecraft.Windows.exe+1CEA8F1: 48 8B 8B 78 03 00 00           - mov rcx,[rbx+00000378]
Minecraft.Windows.exe+1CEA8F8: 48 8B 01                       - mov rax,[rcx]
Minecraft.Windows.exe+1CEA8FB: FF 90 00 09 00 00              - call qword ptr [rax+00000900]
Minecraft.Windows.exe+1CEA901: 84 C0                          - test al,al
Minecraft.Windows.exe+1CEA903: 74 31                          - je Minecraft.Windows.exe+1CEA936
Minecraft.Windows.exe+1CEA905: 33 D2                          - xor edx,edx
Minecraft.Windows.exe+1CEA907: 48 8B CB                       - mov rcx,rbx
Minecraft.Windows.exe+1CEA90A: E8 11 35 00 00                 - call Minecraft.Windows.exe+1CEDE20
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1CEA90F: C7 83 DC 01 00 00 00 00 00 00  - mov [rbx+000001DC],00000000
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1CEA919: 48 8B 4C 24 48                 - mov rcx,[rsp+48]
Minecraft.Windows.exe+1CEA91E: 48 33 CC                       - xor rcx,rsp
Minecraft.Windows.exe+1CEA921: E8 1A 73 0D 01                 - call Minecraft.Windows.exe+2DC1C40
Minecraft.Windows.exe+1CEA926: 48 8B 5C 24 78                 - mov rbx,[rsp+78]
Minecraft.Windows.exe+1CEA92B: 0F 28 74 24 50                 - movaps xmm6,[rsp+50]
Minecraft.Windows.exe+1CEA930: 48 83 C4 60                    - add rsp,60
Minecraft.Windows.exe+1CEA934: 5F                             - pop rdi
Minecraft.Windows.exe+1CEA935: C3                             - ret 
Minecraft.Windows.exe+1CEA936: 48 8B 8B 78 03 00 00           - mov rcx,[rbx+00000378]
Minecraft.Windows.exe+1CEA93D: 45 33 C9                       - xor r9d,r9d
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2601</ID>
              <Description>"OnGround"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-29
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(OnGround,Minecraft.Windows.exe,88 90 E0 01 00 00 C3) // should be unique
alloc(newmem,$1000,OnGround)

label(code)
label(return)


newmem:



code:
  mov [rax+000001E0],0
  jmp return

OnGround:
  jmp newmem
  nop

return:

registersymbol(OnGround)


[DISABLE]

OnGround:
  db 88 90 E0 01 00 00


unregistersymbol(OnGround)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1135384

Minecraft.Windows.exe+113536E: CC                    - int 3 
Minecraft.Windows.exe+113536F: CC                    - int 3 
Minecraft.Windows.exe+1135370: 48 8B 41 10           - mov rax,[rcx+10]
Minecraft.Windows.exe+1135374: 0F B6 80 E1 01 00 00  - movzx eax,byte ptr [rax+000001E1]
Minecraft.Windows.exe+113537B: C3                    - ret 
Minecraft.Windows.exe+113537C: CC                    - int 3 
Minecraft.Windows.exe+113537D: CC                    - int 3 
Minecraft.Windows.exe+113537E: CC                    - int 3 
Minecraft.Windows.exe+113537F: CC                    - int 3 
Minecraft.Windows.exe+1135380: 48 8B 41 10           - mov rax,[rcx+10]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1135384: 88 90 E0 01 00 00     - mov [rax+000001E0],dl
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+113538A: C3                    - ret 
Minecraft.Windows.exe+113538B: CC                    - int 3 
Minecraft.Windows.exe+113538C: CC                    - int 3 
Minecraft.Windows.exe+113538D: CC                    - int 3 
Minecraft.Windows.exe+113538E: CC                    - int 3 
Minecraft.Windows.exe+113538F: CC                    - int 3 
Minecraft.Windows.exe+1135390: 48 8B 41 10           - mov rax,[rcx+10]
Minecraft.Windows.exe+1135394: 0F B6 80 E0 01 00 00  - movzx eax,byte ptr [rax+000001E0]
Minecraft.Windows.exe+113539B: C3                    - ret 
Minecraft.Windows.exe+113539C: CC                    - int 3 
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"Movement"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <ShowAsSigned>0</ShowAsSigned>
      <Color>FF8000</Color>
      <GroupHeader>1</GroupHeader>
      <Address>v1</Address>
      <CheatEntries>
        <CheatEntry>
          <ID>2600</ID>
          <Description>"NoFallV2"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-29
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(NoFall,Minecraft.Windows.exe,88 90 E0 01 00 00 C3) // should be unique
alloc(newmem,$1000,NoFall)

label(code)
label(return)

newmem:

code:
  mov [rax+000001E0],0
  jmp return

NoFall:
  jmp newmem
  nop
return:
registersymbol(NoFall)

[DISABLE]

NoFall:
  db 88 90 E0 01 00 00

unregistersymbol(NoFall)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1135384

Minecraft.Windows.exe+113536E: CC                    - int 3 
Minecraft.Windows.exe+113536F: CC                    - int 3 
Minecraft.Windows.exe+1135370: 48 8B 41 10           - mov rax,[rcx+10]
Minecraft.Windows.exe+1135374: 0F B6 80 E1 01 00 00  - movzx eax,byte ptr [rax+000001E1]
Minecraft.Windows.exe+113537B: C3                    - ret 
Minecraft.Windows.exe+113537C: CC                    - int 3 
Minecraft.Windows.exe+113537D: CC                    - int 3 
Minecraft.Windows.exe+113537E: CC                    - int 3 
Minecraft.Windows.exe+113537F: CC                    - int 3 
Minecraft.Windows.exe+1135380: 48 8B 41 10           - mov rax,[rcx+10]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1135384: 88 90 E0 01 00 00     - mov [rax+000001E0],dl
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+113538A: C3                    - ret 
Minecraft.Windows.exe+113538B: CC                    - int 3 
Minecraft.Windows.exe+113538C: CC                    - int 3 
Minecraft.Windows.exe+113538D: CC                    - int 3 
Minecraft.Windows.exe+113538E: CC                    - int 3 
Minecraft.Windows.exe+113538F: CC                    - int 3 
Minecraft.Windows.exe+1135390: 48 8B 41 10           - mov rax,[rcx+10]
Minecraft.Windows.exe+1135394: 0F B6 80 E0 01 00 00  - movzx eax,byte ptr [rax+000001E0]
Minecraft.Windows.exe+113539B: C3                    - ret 
Minecraft.Windows.exe+113539C: CC                    - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2607</ID>
          <Description>"ElytraTravel"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version:
  Date   : 2021-07-29
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ElytraTravel,Minecraft.Windows.exe,88 90 E0 01 00 00 C3) // should be unique
alloc(newmem,$1000,ElytraTravel)

label(code)
label(return)

newmem:

code:
  mov [rax+000001E0],0
  jmp return

ElytraTravel:
  jmp newmem
  nop
return:
registersymbol(ElytraTravel)

[DISABLE]

ElytraTravel:
  db 88 90 E0 01 00 00

unregistersymbol(ElytraTravel)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1135384

Minecraft.Windows.exe+113536E: CC                    - int 3
Minecraft.Windows.exe+113536F: CC                    - int 3
Minecraft.Windows.exe+1135370: 48 8B 41 10           - mov rax,[rcx+10]
Minecraft.Windows.exe+1135374: 0F B6 80 E1 01 00 00  - movzx eax,byte ptr [rax+000001E1]
Minecraft.Windows.exe+113537B: C3                    - ret
Minecraft.Windows.exe+113537C: CC                    - int 3
Minecraft.Windows.exe+113537D: CC                    - int 3
Minecraft.Windows.exe+113537E: CC                    - int 3
Minecraft.Windows.exe+113537F: CC                    - int 3
Minecraft.Windows.exe+1135380: 48 8B 41 10           - mov rax,[rcx+10]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1135384: 88 90 E0 01 00 00     - mov [rax+000001E0],dl
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+113538A: C3                    - ret
Minecraft.Windows.exe+113538B: CC                    - int 3
Minecraft.Windows.exe+113538C: CC                    - int 3
Minecraft.Windows.exe+113538D: CC                    - int 3
Minecraft.Windows.exe+113538E: CC                    - int 3
Minecraft.Windows.exe+113538F: CC                    - int 3
Minecraft.Windows.exe+1135390: 48 8B 41 10           - mov rax,[rcx+10]
Minecraft.Windows.exe+1135394: 0F B6 80 E0 01 00 00  - movzx eax,byte ptr [rax+000001E0]
Minecraft.Windows.exe+113539B: C3                    - ret
Minecraft.Windows.exe+113539C: CC                    - int 3
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2593</ID>
          <Description>"ElytraBoost"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
local al = getAddressList()
local lpvx = al.getMemoryRecordByDescription("LPVelX")
local lpvy = al.getMemoryRecordByDescription("LPVelY")
local lpvz = al.getMemoryRecordByDescription("LPVelZ")
local mp = 1.3
[ENABLE]
lpvx.Value = lpvx.Value * mp
lpvy.Value = lpvy.Value * mp
lpvz.Value = lpvz.Value * mp

[DISABLE]

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>70</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>70</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>2621</ID>
              <Description>"LPVelX"</Description>
              <Color>FF8000</Color>
              <VariableType>Float</VariableType>
              <Address>"Minecraft.Windows.exe"+040A4B88</Address>
              <Offsets>
                <Offset>50C</Offset>
                <Offset>0</Offset>
                <Offset>5D0</Offset>
                <Offset>138</Offset>
                <Offset>0</Offset>
                <Offset>128</Offset>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>2625</ID>
              <Description>"LPVelY"</Description>
              <Color>FF8000</Color>
              <VariableType>Float</VariableType>
              <Address>"Minecraft.Windows.exe"+040A4978</Address>
              <Offsets>
                <Offset>510</Offset>
                <Offset>138</Offset>
                <Offset>0</Offset>
                <Offset>1F0</Offset>
                <Offset>18</Offset>
                <Offset>10</Offset>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>2629</ID>
              <Description>"LPVelZ"</Description>
              <Color>FF8000</Color>
              <VariableType>Float</VariableType>
              <Address>"Minecraft.Windows.exe"+040A4B88</Address>
              <Offsets>
                <Offset>514</Offset>
                <Offset>100</Offset>
                <Offset>670</Offset>
                <Offset>130</Offset>
                <Offset>0</Offset>
                <Offset>128</Offset>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2567</ID>
          <Description>"Boost"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
[disable]
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2563</ID>
              <Description>"+X Boost"</Description>
              <LastState/>
              <Color>FF8000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version:
  Date   : 2021-07-26
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(XBoost,Minecraft.Windows.exe,F3 0F 11 89 0C 05 00 00 F3) // should be unique
alloc(newmem,$1000,XBoost)

label(code)
label(return)

newmem:

code:
  mov [rcx+0000050C],(float)0.5
  jmp return

XBoost:
  jmp newmem
  nop 3
return:
registersymbol(XBoost)

[DISABLE]

XBoost:
  db F3 0F 11 89 0C 05 00 00

unregistersymbol(XBoost)
dealloc(newmem)

{
// ORIGINAL CODE - XBoostION POINT: Minecraft.Windows.exe+1DE8665

Minecraft.Windows.exe+1DE8643: 0F 57 D2                 - xorps xmm2,xmm2
Minecraft.Windows.exe+1DE8646: F3 0F 10 2D 72 46 7E 01  - movss xmm5,[Minecraft.Windows.exe+35CCCC0]
Minecraft.Windows.exe+1DE864E: 0F 28 C1                 - movaps xmm0,xmm1
Minecraft.Windows.exe+1DE8651: 0F 54 C4                 - andps xmm0,xmm4
Minecraft.Windows.exe+1DE8654: 0F 2F C5                 - comiss xmm0,xmm5
Minecraft.Windows.exe+1DE8657: 77 05                    - ja Minecraft.Windows.exe+1DE865E
Minecraft.Windows.exe+1DE8659: 0F 57 C0                 - xorps xmm0,xmm0
Minecraft.Windows.exe+1DE865C: EB 03                    - jmp Minecraft.Windows.exe+1DE8661
Minecraft.Windows.exe+1DE865E: 0F 28 C3                 - movaps xmm0,xmm3
Minecraft.Windows.exe+1DE8661: F3 0F 59 C8              - mulss xmm1,xmm0
// ---------- XBoostING HERE ----------
Minecraft.Windows.exe+1DE8665: F3 0F 11 89 0C 05 00 00  - movss [rcx+0000050C],xmm1
// ---------- DONE XBoostING  ----------
Minecraft.Windows.exe+1DE866D: F3 0F 10 89 14 05 00 00  - movss xmm1,[rcx+00000514]
Minecraft.Windows.exe+1DE8675: 0F 28 C1                 - movaps xmm0,xmm1
Minecraft.Windows.exe+1DE8678: 0F 54 C4                 - andps xmm0,xmm4
Minecraft.Windows.exe+1DE867B: 0F 2F C5                 - comiss xmm0,xmm5
Minecraft.Windows.exe+1DE867E: 76 03                    - jna Minecraft.Windows.exe+1DE8683
Minecraft.Windows.exe+1DE8680: 0F 28 D3                 - movaps xmm2,xmm3
Minecraft.Windows.exe+1DE8683: F3 0F 59 CA              - mulss xmm1,xmm2
Minecraft.Windows.exe+1DE8687: F3 0F 11 89 14 05 00 00  - movss [rcx+00000514],xmm1
Minecraft.Windows.exe+1DE868F: C3                       - ret
Minecraft.Windows.exe+1DE8690: 40 53                    - push rbx
}

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2564</ID>
              <Description>"-X Boost"</Description>
              <LastState/>
              <Color>FF8000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version:
  Date   : 2021-07-26
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(XBoost,Minecraft.Windows.exe,F3 0F 11 89 0C 05 00 00 F3) // should be unique
alloc(newmem,$1000,XBoost)

label(code)
label(return)

newmem:

code:
  mov [rcx+0000050C],(float)-0.5

  jmp return

XBoost:
  jmp newmem
  nop 3
return:
registersymbol(XBoost)

[DISABLE]

XBoost:
  db F3 0F 11 89 0C 05 00 00

unregistersymbol(XBoost)
dealloc(newmem)

{
// ORIGINAL CODE - XBoostION POINT: Minecraft.Windows.exe+1DE8665

Minecraft.Windows.exe+1DE8643: 0F 57 D2                 - xorps xmm2,xmm2
Minecraft.Windows.exe+1DE8646: F3 0F 10 2D 72 46 7E 01  - movss xmm5,[Minecraft.Windows.exe+35CCCC0]
Minecraft.Windows.exe+1DE864E: 0F 28 C1                 - movaps xmm0,xmm1
Minecraft.Windows.exe+1DE8651: 0F 54 C4                 - andps xmm0,xmm4
Minecraft.Windows.exe+1DE8654: 0F 2F C5                 - comiss xmm0,xmm5
Minecraft.Windows.exe+1DE8657: 77 05                    - ja Minecraft.Windows.exe+1DE865E
Minecraft.Windows.exe+1DE8659: 0F 57 C0                 - xorps xmm0,xmm0
Minecraft.Windows.exe+1DE865C: EB 03                    - jmp Minecraft.Windows.exe+1DE8661
Minecraft.Windows.exe+1DE865E: 0F 28 C3                 - movaps xmm0,xmm3
Minecraft.Windows.exe+1DE8661: F3 0F 59 C8              - mulss xmm1,xmm0
// ---------- XBoostING HERE ----------
Minecraft.Windows.exe+1DE8665: F3 0F 11 89 0C 05 00 00  - movss [rcx+0000050C],xmm1
// ---------- DONE XBoostING  ----------
Minecraft.Windows.exe+1DE866D: F3 0F 10 89 14 05 00 00  - movss xmm1,[rcx+00000514]
Minecraft.Windows.exe+1DE8675: 0F 28 C1                 - movaps xmm0,xmm1
Minecraft.Windows.exe+1DE8678: 0F 54 C4                 - andps xmm0,xmm4
Minecraft.Windows.exe+1DE867B: 0F 2F C5                 - comiss xmm0,xmm5
Minecraft.Windows.exe+1DE867E: 76 03                    - jna Minecraft.Windows.exe+1DE8683
Minecraft.Windows.exe+1DE8680: 0F 28 D3                 - movaps xmm2,xmm3
Minecraft.Windows.exe+1DE8683: F3 0F 59 CA              - mulss xmm1,xmm2
Minecraft.Windows.exe+1DE8687: F3 0F 11 89 14 05 00 00  - movss [rcx+00000514],xmm1
Minecraft.Windows.exe+1DE868F: C3                       - ret
Minecraft.Windows.exe+1DE8690: 40 53                    - push rbx
}

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2565</ID>
              <Description>"+ZBoost"</Description>
              <LastState/>
              <Color>FF8000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-26
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ZBoost,Minecraft.Windows.exe,F3 0F 11 89 14 05 00 00 C3 40) // should be unique
alloc(newmem,$1000,ZBoost)

label(code)
label(return)

newmem:

code:
  mov [rcx+00000514],(float)0.5
  jmp return

ZBoost:
  jmp newmem
  nop 3
return:
registersymbol(ZBoost)

[DISABLE]

ZBoost:
  db F3 0F 11 89 14 05 00 00

unregistersymbol(ZBoost)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1DE8687

Minecraft.Windows.exe+1DE865E: 0F 28 C3                 - movaps xmm0,xmm3
Minecraft.Windows.exe+1DE8661: F3 0F 59 C8              - mulss xmm1,xmm0
Minecraft.Windows.exe+1DE8665: F3 0F 11 89 0C 05 00 00  - movss [rcx+0000050C],xmm1
Minecraft.Windows.exe+1DE866D: F3 0F 10 89 14 05 00 00  - movss xmm1,[rcx+00000514]
Minecraft.Windows.exe+1DE8675: 0F 28 C1                 - movaps xmm0,xmm1
Minecraft.Windows.exe+1DE8678: 0F 54 C4                 - andps xmm0,xmm4
Minecraft.Windows.exe+1DE867B: 0F 2F C5                 - comiss xmm0,xmm5
Minecraft.Windows.exe+1DE867E: 76 03                    - jna Minecraft.Windows.exe+1DE8683
Minecraft.Windows.exe+1DE8680: 0F 28 D3                 - movaps xmm2,xmm3
Minecraft.Windows.exe+1DE8683: F3 0F 59 CA              - mulss xmm1,xmm2
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1DE8687: F3 0F 11 89 14 05 00 00  - movss [rcx+00000514],xmm1
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1DE868F: C3                       - ret 
Minecraft.Windows.exe+1DE8690: 40 53                    - push rbx
Minecraft.Windows.exe+1DE8692: 48 83 EC 50              - sub rsp,50
Minecraft.Windows.exe+1DE8696: 8B 81 50 03 00 00        - mov eax,[rcx+00000350]
Minecraft.Windows.exe+1DE869C: 48 8B D9                 - mov rbx,rcx
Minecraft.Windows.exe+1DE869F: 89 81 4C 03 00 00        - mov [rcx+0000034C],eax
Minecraft.Windows.exe+1DE86A5: 48 8B 91 20 03 00 00     - mov rdx,[rcx+00000320]
Minecraft.Windows.exe+1DE86AC: 48 83 FA FF              - cmp rdx,-01
Minecraft.Windows.exe+1DE86B0: 74 27                    - je Minecraft.Windows.exe+1DE86D9
Minecraft.Windows.exe+1DE86B2: 48 8B 89 78 03 00 00     - mov rcx,[rcx+00000378]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2566</ID>
              <Description>"-ZBoost"</Description>
              <LastState/>
              <Color>FF8000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-26
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ZBoost,Minecraft.Windows.exe,F3 0F 11 89 14 05 00 00 C3 40) // should be unique
alloc(newmem,$1000,ZBoost)

label(code)
label(return)

newmem:

code:
  mov [rcx+00000514],(float)-0.5

  jmp return

ZBoost:
  jmp newmem
  nop 3
return:
registersymbol(ZBoost)

[DISABLE]

ZBoost:
  db F3 0F 11 89 14 05 00 00

unregistersymbol(ZBoost)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1DE8687

Minecraft.Windows.exe+1DE865E: 0F 28 C3                 - movaps xmm0,xmm3
Minecraft.Windows.exe+1DE8661: F3 0F 59 C8              - mulss xmm1,xmm0
Minecraft.Windows.exe+1DE8665: F3 0F 11 89 0C 05 00 00  - movss [rcx+0000050C],xmm1
Minecraft.Windows.exe+1DE866D: F3 0F 10 89 14 05 00 00  - movss xmm1,[rcx+00000514]
Minecraft.Windows.exe+1DE8675: 0F 28 C1                 - movaps xmm0,xmm1
Minecraft.Windows.exe+1DE8678: 0F 54 C4                 - andps xmm0,xmm4
Minecraft.Windows.exe+1DE867B: 0F 2F C5                 - comiss xmm0,xmm5
Minecraft.Windows.exe+1DE867E: 76 03                    - jna Minecraft.Windows.exe+1DE8683
Minecraft.Windows.exe+1DE8680: 0F 28 D3                 - movaps xmm2,xmm3
Minecraft.Windows.exe+1DE8683: F3 0F 59 CA              - mulss xmm1,xmm2
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1DE8687: F3 0F 11 89 14 05 00 00  - movss [rcx+00000514],xmm1
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1DE868F: C3                       - ret 
Minecraft.Windows.exe+1DE8690: 40 53                    - push rbx
Minecraft.Windows.exe+1DE8692: 48 83 EC 50              - sub rsp,50
Minecraft.Windows.exe+1DE8696: 8B 81 50 03 00 00        - mov eax,[rcx+00000350]
Minecraft.Windows.exe+1DE869C: 48 8B D9                 - mov rbx,rcx
Minecraft.Windows.exe+1DE869F: 89 81 4C 03 00 00        - mov [rcx+0000034C],eax
Minecraft.Windows.exe+1DE86A5: 48 8B 91 20 03 00 00     - mov rdx,[rcx+00000320]
Minecraft.Windows.exe+1DE86AC: 48 83 FA FF              - cmp rdx,-01
Minecraft.Windows.exe+1DE86B0: 74 27                    - je Minecraft.Windows.exe+1DE86D9
Minecraft.Windows.exe+1DE86B2: 48 8B 89 78 03 00 00     - mov rcx,[rcx+00000378]
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2550</ID>
          <Description>"Velocity Fly"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}
[ENABLE]
aobscanmodule(VelocityFly,Minecraft.Windows.exe,F3 0F 10 82 10 05 00 00)
alloc(newmem,$1000,VelocityFly)

label(code)
label(return)

alloc(VelocityFlyVal,1)
registersymbol(VelocityFlyVal)

VelocityFlyVal:
  dd (float)0.3



newmem:
//movss xmm0,[rcx+000004EC]
code:
  push ecx
  mov ecx [VelocityFlyVal]
  mov [rdx+00000510],ecx
  pop ecx
  jmp return

VelocityFly:
  jmp newmem
  nop 3
return:
registersymbol(VelocityFly)

[DISABLE]
VelocityFly:
  db F3 0F 10 82 10 05 00 00

unregistersymbol(VelocityFly)
dealloc(newmem)
dealloc(VelocityFlyVal)
unregistersymbol(VelocityFlyVal)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2557</ID>
              <Description>"Fly Force"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8000</Color>
              <VariableType>Float</VariableType>
              <Address>VelocityFlyVal</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2555</ID>
          <Description>"Speed Disabler"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}
[ENABLE]
aobscanmodule(SpeedDisabler,Minecraft.Windows.exe,C7 40 1C 00 00 00 00 48 83 C4 28)
alloc(newmem,$1000,SpeedDisabler)

label(code)
label(return)

alloc(SpeedDisablerVal,1)
registersymbol(SpeedDisablerVal)

SpeedDisablerVal:
  dd (float)0.1

newmem:
//movss xmm0,[rcx+000004EC]
code:
  push ecx
  mov ecx [SpeedDisablerVal]
  mov [rax+1C],ecx
  pop ecx
  jmp return

SpeedDisabler:
  jmp newmem
  nop 2
return:
registersymbol(SpeedDisabler)

[DISABLE]
SpeedDisabler:
  db C7 40 1C 00 00 00 00

unregistersymbol(SpeedDisabler)
dealloc(newmem)
dealloc(SpeedDisablerVal)
unregistersymbol(SpeedDisablerVal)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2548</ID>
          <Description>"Friction Glide"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-26
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(FrictionGlide,Minecraft.Windows.exe,F3 41 0F 11 47 04 49 8B 06 49 8B CE FF 90 30) // should be unique
alloc(newmem,$1000,FrictionGlide)

label(code)
label(return)

newmem:

code:
  mov [r15+04],1
  jmp return

FrictionGlide:
  jmp newmem
  nop
return:
registersymbol(FrictionGlide)

[DISABLE]

FrictionGlide:
  db F3 41 0F 11 47 04

unregistersymbol(FrictionGlide)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1DE855F

Minecraft.Windows.exe+1DE852B: F3 41 0F 10 47 04        - movss xmm0,[r15+04]
Minecraft.Windows.exe+1DE8531: F3 0F 5C 05 2F 49 7E 01  - subss xmm0,[Minecraft.Windows.exe+35CCE68]
Minecraft.Windows.exe+1DE8539: F3 41 0F 11 47 04        - movss [r15+04],xmm0
Minecraft.Windows.exe+1DE853F: 49 8B 06                 - mov rax,[r14]
Minecraft.Windows.exe+1DE8542: 41 0F 28 C9              - movaps xmm1,xmm9
Minecraft.Windows.exe+1DE8546: 49 8B CE                 - mov rcx,r14
Minecraft.Windows.exe+1DE8549: FF 90 58 02 00 00        - call qword ptr [rax+00000258]
Minecraft.Windows.exe+1DE854F: EB 14                    - jmp Minecraft.Windows.exe+1DE8565
Minecraft.Windows.exe+1DE8551: F3 41 0F 10 47 04        - movss xmm0,[r15+04]
Minecraft.Windows.exe+1DE8557: F3 0F 5C 05 A9 4A 7E 01  - subss xmm0,[Minecraft.Windows.exe+35CD008]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1DE855F: F3 41 0F 11 47 04        - movss [r15+04],xmm0
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1DE8565: 49 8B 06                 - mov rax,[r14]
Minecraft.Windows.exe+1DE8568: 49 8B CE                 - mov rcx,r14
Minecraft.Windows.exe+1DE856B: FF 90 30 04 00 00        - call qword ptr [rax+00000430]
Minecraft.Windows.exe+1DE8571: 84 C0                    - test al,al
Minecraft.Windows.exe+1DE8573: 75 4D                    - jne Minecraft.Windows.exe+1DE85C2
Minecraft.Windows.exe+1DE8575: 84 DB                    - test bl,bl
Minecraft.Windows.exe+1DE8577: 75 29                    - jne Minecraft.Windows.exe+1DE85A2
Minecraft.Windows.exe+1DE8579: 49 8B 06                 - mov rax,[r14]
Minecraft.Windows.exe+1DE857C: BA 30 00 00 00           - mov edx,00000030
Minecraft.Windows.exe+1DE8581: 49 8B CE                 - mov rcx,r14
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2521</ID>
          <Description>"NoJump"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-24
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(NoJump,Minecraft.Windows.exe,80 B8 E0 01 00 00 00 75 0F) // should be unique
alloc(newmem,$1000,NoJump)

label(code)
label(return)

newmem:

code:
  mov [rax+000001E0],0
  jmp return

NoJump:
  jmp newmem
  nop 2
return:
registersymbol(NoJump)

[DISABLE]

NoJump:
  db 80 B8 E0 01 00 00 00

unregistersymbol(NoJump)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+13717BD

Minecraft.Windows.exe+1371794: 48 85 C0              - test rax,rax
Minecraft.Windows.exe+1371797: 74 3C                 - je Minecraft.Windows.exe+13717D5
Minecraft.Windows.exe+1371799: 80 B8 BC 09 00 00 01  - cmp byte ptr [rax+000009BC],01
Minecraft.Windows.exe+13717A0: 74 09                 - je Minecraft.Windows.exe+13717AB
Minecraft.Windows.exe+13717A2: 80 B8 C0 09 00 00 00  - cmp byte ptr [rax+000009C0],00
Minecraft.Windows.exe+13717A9: 75 2A                 - jne Minecraft.Windows.exe+13717D5
Minecraft.Windows.exe+13717AB: 80 B8 1C 0A 00 00 01  - cmp byte ptr [rax+00000A1C],01
Minecraft.Windows.exe+13717B2: 74 09                 - je Minecraft.Windows.exe+13717BD
Minecraft.Windows.exe+13717B4: 80 B8 20 0A 00 00 00  - cmp byte ptr [rax+00000A20],00
Minecraft.Windows.exe+13717BB: 75 18                 - jne Minecraft.Windows.exe+13717D5
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+13717BD: 80 B8 E0 01 00 00 00  - cmp byte ptr [rax+000001E0],00
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+13717C4: 75 0F                 - jne Minecraft.Windows.exe+13717D5
Minecraft.Windows.exe+13717C6: 48 8B C8              - mov rcx,rax
Minecraft.Windows.exe+13717C9: E8 A2 56 98 00        - call Minecraft.Windows.exe+1CF6E70
Minecraft.Windows.exe+13717CE: 84 C0                 - test al,al
Minecraft.Windows.exe+13717D0: 75 03                 - jne Minecraft.Windows.exe+13717D5
Minecraft.Windows.exe+13717D2: 88 43 11              - mov [rbx+11],al
Minecraft.Windows.exe+13717D5: 45 0F B6 77 60        - movzx r14d,byte ptr [r15+60]
Minecraft.Windows.exe+13717DA: 44 3A B3 90 07 00 00  - cmp r14l,[rbx+00000790]
Minecraft.Windows.exe+13717E1: 0F 84 84 00 00 00     - je Minecraft.Windows.exe+137186B
Minecraft.Windows.exe+13717E7: 48 8B 8B B8 01 00 00  - mov rcx,[rbx+000001B8]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2520</ID>
          <Description>"AirJump"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-24
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AirJump,Minecraft.Windows.exe,80 B8 E0 01 00 00 00 75 0F) // should be unique
alloc(newmem,$1000,AirJump)

label(code)
label(return)

newmem:

code:
  mov [rax+000001E0],16777473
  jmp return

AirJump:
  jmp newmem
  nop 2
return:
registersymbol(AirJump)

[DISABLE]

AirJump:
  db 80 B8 E0 01 00 00 00

unregistersymbol(AirJump)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+13717BD

Minecraft.Windows.exe+1371794: 48 85 C0              - test rax,rax
Minecraft.Windows.exe+1371797: 74 3C                 - je Minecraft.Windows.exe+13717D5
Minecraft.Windows.exe+1371799: 80 B8 BC 09 00 00 01  - cmp byte ptr [rax+000009BC],01
Minecraft.Windows.exe+13717A0: 74 09                 - je Minecraft.Windows.exe+13717AB
Minecraft.Windows.exe+13717A2: 80 B8 C0 09 00 00 00  - cmp byte ptr [rax+000009C0],00
Minecraft.Windows.exe+13717A9: 75 2A                 - jne Minecraft.Windows.exe+13717D5
Minecraft.Windows.exe+13717AB: 80 B8 1C 0A 00 00 01  - cmp byte ptr [rax+00000A1C],01
Minecraft.Windows.exe+13717B2: 74 09                 - je Minecraft.Windows.exe+13717BD
Minecraft.Windows.exe+13717B4: 80 B8 20 0A 00 00 00  - cmp byte ptr [rax+00000A20],00
Minecraft.Windows.exe+13717BB: 75 18                 - jne Minecraft.Windows.exe+13717D5
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+13717BD: 80 B8 E0 01 00 00 00  - cmp byte ptr [rax+000001E0],00
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+13717C4: 75 0F                 - jne Minecraft.Windows.exe+13717D5
Minecraft.Windows.exe+13717C6: 48 8B C8              - mov rcx,rax
Minecraft.Windows.exe+13717C9: E8 A2 56 98 00        - call Minecraft.Windows.exe+1CF6E70
Minecraft.Windows.exe+13717CE: 84 C0                 - test al,al
Minecraft.Windows.exe+13717D0: 75 03                 - jne Minecraft.Windows.exe+13717D5
Minecraft.Windows.exe+13717D2: 88 43 11              - mov [rbx+11],al
Minecraft.Windows.exe+13717D5: 45 0F B6 77 60        - movzx r14d,byte ptr [r15+60]
Minecraft.Windows.exe+13717DA: 44 3A B3 90 07 00 00  - cmp r14l,[rbx+00000790]
Minecraft.Windows.exe+13717E1: 0F 84 84 00 00 00     - je Minecraft.Windows.exe+137186B
Minecraft.Windows.exe+13717E7: 48 8B 8B B8 01 00 00  - mov rcx,[rbx+000001B8]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2458</ID>
          <Description>"Air Swim"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}
[ENABLE]
Aobscanmodule(AirSwim,Minecraft.Windows.exe,0f b6 81 ? ? ? ? c3 cc cc cc cc cc cc cc cc 0f b6 81 ? ? ? ? c3 cc cc cc cc cc cc cc cc 48 89 5c 24 ? 48 89 6c 24)
Registersymbol(AirSwim)

Alloc(Bytes,10)
  Registersymbol(Bytes)

Bytes:
  ReadMem(AirSwim,10)

AirSwim:
  db 90 90 90 90 90 90 90

[DISABLE]
AirSwim:
  ReadMem(Bytes,7)

Unregistersymbol(AirSwim)
Dealloc(Bytes)
Unregistersymbol(Bytes)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>214</ID>
          <Description>"Always Fly (1.17)"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-20
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Fly,Minecraft.Windows.exe,40 38 A8 C0 09 00 00) // should be unique
alloc(newmem,$1000,Fly)

label(code)
label(return)

newmem:

code:
  mov [rax+000009C0],1
  jmp return

Fly:
  jmp newmem
  nop 2
return:
registersymbol(Fly)

[DISABLE]

Fly:
  db 40 38 A8 C0 09 00 00

unregistersymbol(Fly)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+B0C77C

Minecraft.Windows.exe+B0C74D: FF 90 C8 00 00 00        - call qword ptr [rax+000000C8]
Minecraft.Windows.exe+B0C753: F3 0F 10 35 ED 47 9F 02  - movss xmm6,[Minecraft.Windows.exe+3500F48]
Minecraft.Windows.exe+B0C75B: 40 32 ED                 - xor bpl,bpl
Minecraft.Windows.exe+B0C75E: 48 8B F8                 - mov rdi,rax
Minecraft.Windows.exe+B0C761: 48 85 C0                 - test rax,rax
Minecraft.Windows.exe+B0C764: 0F 84 EC 01 00 00        - je Minecraft.Windows.exe+B0C956
Minecraft.Windows.exe+B0C76A: F6 80 7C 01 00 00 01     - test byte ptr [rax+0000017C],01
Minecraft.Windows.exe+B0C771: 74 3A                    - je Minecraft.Windows.exe+B0C7AD
Minecraft.Windows.exe+B0C773: 80 B8 BC 09 00 00 01     - cmp byte ptr [rax+000009BC],01
Minecraft.Windows.exe+B0C77A: 74 09                    - je Minecraft.Windows.exe+B0C785
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+B0C77C: 40 38 A8 C0 09 00 00     - cmp [rax+000009C0],bpl
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+B0C783: 75 12                    - jne Minecraft.Windows.exe+B0C797
Minecraft.Windows.exe+B0C785: 80 B8 1C 0A 00 00 01     - cmp byte ptr [rax+00000A1C],01
Minecraft.Windows.exe+B0C78C: 74 0C                    - je Minecraft.Windows.exe+B0C79A
Minecraft.Windows.exe+B0C78E: 40 38 A8 20 0A 00 00     - cmp [rax+00000A20],bpl
Minecraft.Windows.exe+B0C795: 74 03                    - je Minecraft.Windows.exe+B0C79A
Minecraft.Windows.exe+B0C797: 40 B5 01                 - mov bpl,01
Minecraft.Windows.exe+B0C79A: 48 8B CF                 - mov rcx,rdi
Minecraft.Windows.exe+B0C79D: E8 4E 71 24 01           - call Minecraft.Windows.exe+1D538F0
Minecraft.Windows.exe+B0C7A2: 0F 28 F0                 - movaps xmm6,xmm0
Minecraft.Windows.exe+B0C7A5: F3 0F 59 35 6B 48 9F 02  - mulss xmm6,[Minecraft.Windows.exe+3501018]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Always Fly Stop"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AlwaysFly,Minecraft.Windows.exe,80 B8 28 09 00 00 00 75 2A) // should be unique
alloc(newmem,$1000,AlwaysFly)

label(code)
label(return)

newmem:

code:
  mov [rax+00000928],0
  jmp return

AlwaysFly:
  jmp newmem
  nop 2
return:
registersymbol(AlwaysFly)

[DISABLE]

AlwaysFly:
  db 80 B8 28 09 00 00 00

unregistersymbol(AlwaysFly)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+11501AA

Minecraft.Windows.exe+115017B: 0F 8F 4A 08 00 00     - jg Minecraft.Windows.exe+11509CB
Minecraft.Windows.exe+1150181: C6 43 11 01           - mov byte ptr [rbx+11],01
Minecraft.Windows.exe+1150185: 48 8B 83 10 03 00 00  - mov rax,[rbx+00000310]
Minecraft.Windows.exe+115018C: 48 8B 88 48 03 00 00  - mov rcx,[rax+00000348]
Minecraft.Windows.exe+1150193: 48 8B 01              - mov rax,[rcx]
Minecraft.Windows.exe+1150196: FF 90 C0 00 00 00     - call qword ptr [rax+000000C0]
Minecraft.Windows.exe+115019C: 48 85 C0              - test rax,rax
Minecraft.Windows.exe+115019F: 74 3C                 - je Minecraft.Windows.exe+11501DD
Minecraft.Windows.exe+11501A1: 80 B8 24 09 00 00 01  - cmp byte ptr [rax+00000924],01
Minecraft.Windows.exe+11501A8: 74 09                 - je Minecraft.Windows.exe+11501B3
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+11501AA: 80 B8 28 09 00 00 00  - cmp byte ptr [rax+00000928],00
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+11501B1: 75 2A                 - jne Minecraft.Windows.exe+11501DD
Minecraft.Windows.exe+11501B3: 80 B8 84 09 00 00 01  - cmp byte ptr [rax+00000984],01
Minecraft.Windows.exe+11501BA: 74 09                 - je Minecraft.Windows.exe+11501C5
Minecraft.Windows.exe+11501BC: 80 B8 88 09 00 00 00  - cmp byte ptr [rax+00000988],00
Minecraft.Windows.exe+11501C3: 75 18                 - jne Minecraft.Windows.exe+11501DD
Minecraft.Windows.exe+11501C5: 80 B8 C0 01 00 00 00  - cmp byte ptr [rax+000001C0],00
Minecraft.Windows.exe+11501CC: 75 0F                 - jne Minecraft.Windows.exe+11501DD
Minecraft.Windows.exe+11501CE: 48 8B C8              - mov rcx,rax
Minecraft.Windows.exe+11501D1: E8 1A 92 7F 00        - call Minecraft.Windows.exe+19493F0
Minecraft.Windows.exe+11501D6: 84 C0                 - test al,al
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2492</ID>
          <Description>"Always Sneak"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}
[ENABLE]
aobscanmodule(AlwaysSneak,Minecraft.Windows.exe,88 43 48 0F 2E 43 68)
alloc(newmem,$1000,AlwaysSneak)

label(code)
label(return)

newmem:

code:
  mov [rbx+48],1
  ucomiss xmm0,[rbx+68]
  jmp return

AlwaysSneak:
  jmp newmem
  nop 2
return:
registersymbol(AlwaysSneak)

[DISABLE]

AlwaysSneak:
  db 88 43 48 0F 2E 43 68

unregistersymbol(AlwaysSneak)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>77</ID>
          <Description>"AlwaysFlyJetpack (1.17)"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe (paused)
  Version: 
  Date   : 2021-06-11
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AlwaysFly,Minecraft.Windows.exe,80 B8 C0 09 00 00 00 75 12 80 B8 1C 0A 00 00 01 74 0C) // should be unique
alloc(newmem,$1000,AlwaysFly)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [rax+000009C0],01
  jmp return

AlwaysFly:
  jmp newmem
  nop 2
return:
registersymbol(AlwaysFly)

[DISABLE]

AlwaysFly:
  db 80 B8 C0 09 00 00 00

unregistersymbol(AlwaysFly)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1050ADD

Minecraft.Windows.exe+1050AC9: CC                    - int 3 
Minecraft.Windows.exe+1050ACA: CC                    - int 3 
Minecraft.Windows.exe+1050ACB: CC                    - int 3 
Minecraft.Windows.exe+1050ACC: CC                    - int 3 
Minecraft.Windows.exe+1050ACD: CC                    - int 3 
Minecraft.Windows.exe+1050ACE: CC                    - int 3 
Minecraft.Windows.exe+1050ACF: CC                    - int 3 
Minecraft.Windows.exe+1050AD0: 48 8B 41 10           - mov rax,[rcx+10]
Minecraft.Windows.exe+1050AD4: 80 B8 BC 09 00 00 01  - cmp byte ptr [rax+000009BC],01
Minecraft.Windows.exe+1050ADB: 74 09                 - je Minecraft.Windows.exe+1050AE6
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1050ADD: 80 B8 C0 09 00 00 00  - cmp byte ptr [rax+000009C0],00
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1050AE4: 75 12                 - jne Minecraft.Windows.exe+1050AF8
Minecraft.Windows.exe+1050AE6: 80 B8 1C 0A 00 00 01  - cmp byte ptr [rax+00000A1C],01
Minecraft.Windows.exe+1050AED: 74 0C                 - je Minecraft.Windows.exe+1050AFB
Minecraft.Windows.exe+1050AEF: 80 B8 20 0A 00 00 00  - cmp byte ptr [rax+00000A20],00
Minecraft.Windows.exe+1050AF6: 74 03                 - je Minecraft.Windows.exe+1050AFB
Minecraft.Windows.exe+1050AF8: B0 01                 - mov al,01
Minecraft.Windows.exe+1050AFA: C3                    - ret 
Minecraft.Windows.exe+1050AFB: 32 C0                 - xor al,al
Minecraft.Windows.exe+1050AFD: C3                    - ret 
Minecraft.Windows.exe+1050AFE: CC                    - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2552</ID>
          <Description>"Anti Knockback"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
[disable]
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2546</ID>
              <Description>"YVelo"</Description>
              <LastState/>
              <Color>FF8000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-26
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(YVelo,Minecraft.Windows.exe,04 89 81 10 05 00 00) // should be unique
alloc(newmem,$1000,YVelo)

label(code)
label(return)

newmem:

code:
  mov [rcx+00000510],(float)0
  jmp return

YVelo+01:
  jmp newmem
  nop
return:
registersymbol(YVelo)

[DISABLE]

YVelo+01:
  db 89 81 10 05 00 00

unregistersymbol(YVelo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1CEECEB

Minecraft.Windows.exe+1CEECD5: C3                 - ret 
Minecraft.Windows.exe+1CEECD6: E8 E5 BB A6 FE     - call Minecraft.Windows.exe+75A8C0
Minecraft.Windows.exe+1CEECDB: 90                 - nop 
Minecraft.Windows.exe+1CEECDC: CC                 - int 3 
Minecraft.Windows.exe+1CEECDD: CC                 - int 3 
Minecraft.Windows.exe+1CEECDE: CC                 - int 3 
Minecraft.Windows.exe+1CEECDF: CC                 - int 3 
Minecraft.Windows.exe+1CEECE0: 8B 02              - mov eax,[rdx]
Minecraft.Windows.exe+1CEECE2: 89 81 0C 05 00 00  - mov [rcx+0000050C],eax
Minecraft.Windows.exe+1CEECE8: 8B 42 04           - mov eax,[rdx+04]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1CEECEB: 89 81 10 05 00 00  - mov [rcx+00000510],eax
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1CEECF1: 8B 42 08           - mov eax,[rdx+08]
Minecraft.Windows.exe+1CEECF4: 89 81 14 05 00 00  - mov [rcx+00000514],eax
Minecraft.Windows.exe+1CEECFA: C3                 - ret 
Minecraft.Windows.exe+1CEECFB: CC                 - int 3 
Minecraft.Windows.exe+1CEECFC: CC                 - int 3 
Minecraft.Windows.exe+1CEECFD: CC                 - int 3 
Minecraft.Windows.exe+1CEECFE: CC                 - int 3 
Minecraft.Windows.exe+1CEECFF: CC                 - int 3 
Minecraft.Windows.exe+1CEED00: 48 89 5C 24 18     - mov [rsp+18],rbx
Minecraft.Windows.exe+1CEED05: 55                 - push rbp
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2551</ID>
              <Description>"XVelo"</Description>
              <LastState/>
              <Color>FF8000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-26
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(XVelo,Minecraft.Windows.exe,89 81 0C 05 00 00 8B 42) // should be unique
alloc(newmem,$1000,XVelo)

label(code)
label(return)

newmem:

code:
  mov [rcx+0000050C],(float)0
  jmp return

XVelo:
  jmp newmem
  nop
return:
registersymbol(XVelo)

[DISABLE]

XVelo:
  db 89 81 0C 05 00 00

unregistersymbol(XVelo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1CEECE2

Minecraft.Windows.exe+1CEECD3: 5E                 - pop rsi
Minecraft.Windows.exe+1CEECD4: 5D                 - pop rbp
Minecraft.Windows.exe+1CEECD5: C3                 - ret 
Minecraft.Windows.exe+1CEECD6: E8 E5 BB A6 FE     - call Minecraft.Windows.exe+75A8C0
Minecraft.Windows.exe+1CEECDB: 90                 - nop 
Minecraft.Windows.exe+1CEECDC: CC                 - int 3 
Minecraft.Windows.exe+1CEECDD: CC                 - int 3 
Minecraft.Windows.exe+1CEECDE: CC                 - int 3 
Minecraft.Windows.exe+1CEECDF: CC                 - int 3 
Minecraft.Windows.exe+1CEECE0: 8B 02              - mov eax,[rdx]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1CEECE2: 89 81 0C 05 00 00  - mov [rcx+0000050C],eax
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1CEECE8: 8B 42 04           - mov eax,[rdx+04]
Minecraft.Windows.exe+1CEECEB: 89 81 10 05 00 00  - mov [rcx+00000510],eax
Minecraft.Windows.exe+1CEECF1: 8B 42 08           - mov eax,[rdx+08]
Minecraft.Windows.exe+1CEECF4: 89 81 14 05 00 00  - mov [rcx+00000514],eax
Minecraft.Windows.exe+1CEECFA: C3                 - ret 
Minecraft.Windows.exe+1CEECFB: CC                 - int 3 
Minecraft.Windows.exe+1CEECFC: CC                 - int 3 
Minecraft.Windows.exe+1CEECFD: CC                 - int 3 
Minecraft.Windows.exe+1CEECFE: CC                 - int 3 
Minecraft.Windows.exe+1CEECFF: CC                 - int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2547</ID>
              <Description>"ZVelo"</Description>
              <LastState/>
              <Color>FF8000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-26
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ZVelo,Minecraft.Windows.exe,89 81 14 05 00 00 C3) // should be unique
alloc(newmem,$1000,ZVelo)

label(code)
label(return)

newmem:

code:
  mov [rcx+00000514],(float)0
  jmp return

ZVelo:
  jmp newmem
  nop
return:
registersymbol(ZVelo)

[DISABLE]

ZVelo:
  db 89 81 14 05 00 00

unregistersymbol(ZVelo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1CEECF4

Minecraft.Windows.exe+1CEECDB: 90                 - nop 
Minecraft.Windows.exe+1CEECDC: CC                 - int 3 
Minecraft.Windows.exe+1CEECDD: CC                 - int 3 
Minecraft.Windows.exe+1CEECDE: CC                 - int 3 
Minecraft.Windows.exe+1CEECDF: CC                 - int 3 
Minecraft.Windows.exe+1CEECE0: 8B 02              - mov eax,[rdx]
Minecraft.Windows.exe+1CEECE2: 89 81 0C 05 00 00  - mov [rcx+0000050C],eax
Minecraft.Windows.exe+1CEECE8: 8B 42 04           - mov eax,[rdx+04]
Minecraft.Windows.exe+1CEECEB: 89 81 10 05 00 00  - mov [rcx+00000510],eax
Minecraft.Windows.exe+1CEECF1: 8B 42 08           - mov eax,[rdx+08]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1CEECF4: 89 81 14 05 00 00  - mov [rcx+00000514],eax
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1CEECFA: C3                 - ret 
Minecraft.Windows.exe+1CEECFB: CC                 - int 3 
Minecraft.Windows.exe+1CEECFC: CC                 - int 3 
Minecraft.Windows.exe+1CEECFD: CC                 - int 3 
Minecraft.Windows.exe+1CEECFE: CC                 - int 3 
Minecraft.Windows.exe+1CEECFF: CC                 - int 3 
Minecraft.Windows.exe+1CEED00: 48 89 5C 24 18     - mov [rsp+18],rbx
Minecraft.Windows.exe+1CEED05: 55                 - push rbp
Minecraft.Windows.exe+1CEED06: 56                 - push rsi
Minecraft.Windows.exe+1CEED07: 57                 - push rdi
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>213</ID>
          <Description>"Creative Fly Spoof (1.17)"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-20
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,Minecraft.Windows.exe,0F B6 40 04 C3 CC CC CC CC CC CC CC CC CC 4C) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov [rax+04],1
  ret 
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 0F B6 40 04 C3

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1050DC2

Minecraft.Windows.exe+1050DA1: 48 0F BF C2           - movsx rax,dx
Minecraft.Windows.exe+1050DA5: 48 8D 04 40           - lea rax,[rax+rax*2]
Minecraft.Windows.exe+1050DA9: 48 8D 40 02           - lea rax,[rax+02]
Minecraft.Windows.exe+1050DAD: 49 8D 04 80           - lea rax,[r8+rax*4]
Minecraft.Windows.exe+1050DB1: EB 07                 - jmp Minecraft.Windows.exe+1050DBA
Minecraft.Windows.exe+1050DB3: 49 8D 80 40 01 00 00  - lea rax,[r8+00000140]
Minecraft.Windows.exe+1050DBA: 80 38 01              - cmp byte ptr [rax],01
Minecraft.Windows.exe+1050DBD: 75 03                 - jne Minecraft.Windows.exe+1050DC2
Minecraft.Windows.exe+1050DBF: 32 C0                 - xor al,al
Minecraft.Windows.exe+1050DC1: C3                    - ret 
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1050DC2: 0F B6 40 04           - movzx eax,byte ptr [rax+04]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1050DC6: C3                    - ret 
Minecraft.Windows.exe+1050DC7: CC                    - int 3 
Minecraft.Windows.exe+1050DC8: CC                    - int 3 
Minecraft.Windows.exe+1050DC9: CC                    - int 3 
Minecraft.Windows.exe+1050DCA: CC                    - int 3 
Minecraft.Windows.exe+1050DCB: CC                    - int 3 
Minecraft.Windows.exe+1050DCC: CC                    - int 3 
Minecraft.Windows.exe+1050DCD: CC                    - int 3 
Minecraft.Windows.exe+1050DCE: CC                    - int 3 
Minecraft.Windows.exe+1050DCF: CC                    - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>185</ID>
          <Description>"Glide"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Glide,Minecraft.Windows.exe,F3 41 0F 11 47 04 49 8B 06 49 8B CE FF 90 30) // should be unique
alloc(newmem,$1000,Glide)

label(code)
label(return)

newmem:

  cmp [r15+04],(float)0
  jl Glidefall

code:
  movss [r15+04],xmm0
  jmp return

Glidefall:
  mov [r15+04],(float)-0.1
  jmp return

Glide:
  jmp newmem
  nop
return:
registersymbol(Glide)

[DISABLE]

Glide:
  db F3 41 0F 11 47 04

unregistersymbol(Glide)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1D50CFF

Minecraft.Windows.exe+1D50CCB: F3 41 0F 10 47 04        - movss xmm0,[r15+04]
Minecraft.Windows.exe+1D50CD1: F3 0F 5C 05 CF F4 7A 01  - subss xmm0,[Minecraft.Windows.exe+35001A8]
Minecraft.Windows.exe+1D50CD9: F3 41 0F 11 47 04        - movss [r15+04],xmm0
Minecraft.Windows.exe+1D50CDF: 49 8B 06                 - mov rax,[r14]
Minecraft.Windows.exe+1D50CE2: 41 0F 28 C9              - movaps xmm1,xmm9
Minecraft.Windows.exe+1D50CE6: 49 8B CE                 - mov rcx,r14
Minecraft.Windows.exe+1D50CE9: FF 90 58 02 00 00        - call qword ptr [rax+00000258]
Minecraft.Windows.exe+1D50CEF: EB 14                    - jmp Minecraft.Windows.exe+1D50D05
Minecraft.Windows.exe+1D50CF1: F3 41 0F 10 47 04        - movss xmm0,[r15+04]
Minecraft.Windows.exe+1D50CF7: F3 0F 5C 05 55 F6 7A 01  - subss xmm0,[Minecraft.Windows.exe+3500354]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1D50CFF: F3 41 0F 11 47 04        - movss [r15+04],xmm0
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1D50D05: 49 8B 06                 - mov rax,[r14]
Minecraft.Windows.exe+1D50D08: 49 8B CE                 - mov rcx,r14
Minecraft.Windows.exe+1D50D0B: FF 90 30 04 00 00        - call qword ptr [rax+00000430]
Minecraft.Windows.exe+1D50D11: 84 C0                    - test al,al
Minecraft.Windows.exe+1D50D13: 75 4D                    - jne Minecraft.Windows.exe+1D50D62
Minecraft.Windows.exe+1D50D15: 84 DB                    - test bl,bl
Minecraft.Windows.exe+1D50D17: 75 29                    - jne Minecraft.Windows.exe+1D50D42
Minecraft.Windows.exe+1D50D19: 49 8B 06                 - mov rax,[r14]
Minecraft.Windows.exe+1D50D1C: BA 30 00 00 00           - mov edx,00000030
Minecraft.Windows.exe+1D50D21: 49 8B CE                 - mov rcx,r14
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2484</ID>
          <Description>"High Jump"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}
[ENABLE]
aobscanmodule(High_Jump,Minecraft.Windows.exe,F3 0F 11 43 1C FF)
alloc(newmem,$1000,High_Jump)

label(code)
label(return)

alloc(Value_Jump,7)
registersymbol(Value_Jump)

Value_Jump:
  dd (float)0.5


newmem:
  movss [rbx+1C],xmm0
  jmp code

code:
  push eax
  mov eax,[Value_Jump]
  mov [rbx+1C],eax
  pop eax
  jmp return

High_Jump:
  jmp newmem
return:
registersymbol(High_Jump)

[DISABLE]
High_Jump:
  db F3 0F 11 43 1C

unregistersymbol(High_Jump)
dealloc(newmem)

dealloc(Value_Jump)
unregistersymbol(Value_Jump)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2485</ID>
              <Description>"Jump Height"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8000</Color>
              <VariableType>Float</VariableType>
              <Address>Value_Jump</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2549</ID>
          <Description>"Bhop"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}
[ENABLE]
aobscanmodule(Bhop,Minecraft.Windows.exe,C7 40 1C 00 00 00 00 48 83 C4 28)
alloc(newmem,$1000,Bhop)

label(code)
label(return)

alloc(BhopVal,1)
registersymbol(BhopVal)

BhopVal:
  dd (float)0.5


newmem:
//movss xmm0,[rcx+000004EC]
code:
  push ecx
  mov ecx [BhopVal]
  mov [rax+1C],ecx
  pop ecx
  jmp return

Bhop:
  jmp newmem
  nop 2
return:
registersymbol(Bhop)

[DISABLE]
Bhop:
  db C7 40 1C 00 00 00 00

unregistersymbol(Bhop)
dealloc(newmem)
dealloc(BhopVal)
unregistersymbol(BhopVal)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2553</ID>
              <Description>"Height"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8000</Color>
              <VariableType>Float</VariableType>
              <Address>BhopVal</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Gravity"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-24
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Gravity,Minecraft.Windows.exe,F3 41 0F 11 47 04 49 8B 06 49 8B CE FF 90 20) // should be unique
alloc(newmem,$1000,Gravity)

label(code)
label(return)

newmem:

code:
  mov [r15+04],(float)-0.1
  jmp return

Gravity:
  jmp newmem
  nop
return:
registersymbol(Gravity)

[DISABLE]

Gravity:
  db F3 41 0F 11 47 04

unregistersymbol(Gravity)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1A2B590

Minecraft.Windows.exe+1A2B55C: F3 41 0F 10 47 04        - movss xmm0,[r15+04]
Minecraft.Windows.exe+1A2B562: F3 0F 5C 05 C2 0E 5C 01  - subss xmm0,[Minecraft.Windows.exe+2FEC42C]
Minecraft.Windows.exe+1A2B56A: F3 41 0F 11 47 04        - movss [r15+04],xmm0
Minecraft.Windows.exe+1A2B570: 49 8B 06                 - mov rax,[r14]
Minecraft.Windows.exe+1A2B573: 41 0F 28 C9              - movaps xmm1,xmm9
Minecraft.Windows.exe+1A2B577: 49 8B CE                 - mov rcx,r14
Minecraft.Windows.exe+1A2B57A: FF 90 48 02 00 00        - call qword ptr [rax+00000248]
Minecraft.Windows.exe+1A2B580: EB 14                    - jmp Minecraft.Windows.exe+1A2B596
Minecraft.Windows.exe+1A2B582: F3 41 0F 10 47 04        - movss xmm0,[r15+04]
Minecraft.Windows.exe+1A2B588: F3 0F 5C 05 40 10 5C 01  - subss xmm0,[Minecraft.Windows.exe+2FEC5D0]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1A2B590: F3 41 0F 11 47 04        - movss [r15+04],xmm0
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1A2B596: 49 8B 06                 - mov rax,[r14]
Minecraft.Windows.exe+1A2B599: 49 8B CE                 - mov rcx,r14
Minecraft.Windows.exe+1A2B59C: FF 90 20 04 00 00        - call qword ptr [rax+00000420]
Minecraft.Windows.exe+1A2B5A2: 84 C0                    - test al,al
Minecraft.Windows.exe+1A2B5A4: 75 4D                    - jne Minecraft.Windows.exe+1A2B5F3
Minecraft.Windows.exe+1A2B5A6: 84 DB                    - test bl,bl
Minecraft.Windows.exe+1A2B5A8: 75 29                    - jne Minecraft.Windows.exe+1A2B5D3
Minecraft.Windows.exe+1A2B5AA: 49 8B 06                 - mov rax,[r14]
Minecraft.Windows.exe+1A2B5AD: BA 30 00 00 00           - mov edx,00000030
Minecraft.Windows.exe+1A2B5B2: 49 8B CE                 - mov rcx,r14
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Anti Gravity Fly"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-24
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AntiGravityFly,Minecraft.Windows.exe,F3 41 0F 11 47 04 49 8B 06 49 8B CE FF 90 20) // should be unique
alloc(newmem,$1000,AntiGravityFly)

label(code)
label(return)

newmem:

code:
  mov [r15+04],(float)0.2
  jmp return

AntiGravityFly:
  jmp newmem
  nop
return:
registersymbol(AntiGravityFly)

[DISABLE]

AntiGravityFly:
  db F3 41 0F 11 47 04

unregistersymbol(AntiGravityFly)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1A2B590

Minecraft.Windows.exe+1A2B55C: F3 41 0F 10 47 04        - movss xmm0,[r15+04]
Minecraft.Windows.exe+1A2B562: F3 0F 5C 05 C2 0E 5C 01  - subss xmm0,[Minecraft.Windows.exe+2FEC42C]
Minecraft.Windows.exe+1A2B56A: F3 41 0F 11 47 04        - movss [r15+04],xmm0
Minecraft.Windows.exe+1A2B570: 49 8B 06                 - mov rax,[r14]
Minecraft.Windows.exe+1A2B573: 41 0F 28 C9              - movaps xmm1,xmm9
Minecraft.Windows.exe+1A2B577: 49 8B CE                 - mov rcx,r14
Minecraft.Windows.exe+1A2B57A: FF 90 48 02 00 00        - call qword ptr [rax+00000248]
Minecraft.Windows.exe+1A2B580: EB 14                    - jmp Minecraft.Windows.exe+1A2B596
Minecraft.Windows.exe+1A2B582: F3 41 0F 10 47 04        - movss xmm0,[r15+04]
Minecraft.Windows.exe+1A2B588: F3 0F 5C 05 40 10 5C 01  - subss xmm0,[Minecraft.Windows.exe+2FEC5D0]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1A2B590: F3 41 0F 11 47 04        - movss [r15+04],xmm0
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1A2B596: 49 8B 06                 - mov rax,[r14]
Minecraft.Windows.exe+1A2B599: 49 8B CE                 - mov rcx,r14
Minecraft.Windows.exe+1A2B59C: FF 90 20 04 00 00        - call qword ptr [rax+00000420]
Minecraft.Windows.exe+1A2B5A2: 84 C0                    - test al,al
Minecraft.Windows.exe+1A2B5A4: 75 4D                    - jne Minecraft.Windows.exe+1A2B5F3
Minecraft.Windows.exe+1A2B5A6: 84 DB                    - test bl,bl
Minecraft.Windows.exe+1A2B5A8: 75 29                    - jne Minecraft.Windows.exe+1A2B5D3
Minecraft.Windows.exe+1A2B5AA: 49 8B 06                 - mov rax,[r14]
Minecraft.Windows.exe+1A2B5AD: BA 30 00 00 00           - mov edx,00000030
Minecraft.Windows.exe+1A2B5B2: 49 8B CE                 - mov rcx,r14
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2509</ID>
          <Description>"Gravity (1.17)"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}
[ENABLE]
aobscanmodule(Gravity,Minecraft.Windows.exe,F3 0F 10 82 10 05 00 00)
alloc(newmem,$1000,Gravity)

label(code)
label(return)

alloc(GravityVal,1)
registersymbol(GravityVal)

GravityVal:
  dd (float)0

newmem:
//movss xmm0,[rcx+000004EC]
code:
  push ecx
  mov ecx [GravityVal]
  mov [rdx+00000510],ecx
  pop ecx
  jmp return

Gravity:
  jmp newmem
  nop 3
return:
registersymbol(Gravity)

[DISABLE]
Gravity:
  db F3 0F 10 82 10 05 00 00

unregistersymbol(Gravity)
dealloc(newmem)
dealloc(GravityVal)
unregistersymbol(GravityVal)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2510</ID>
              <Description>"Gravity Value"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8000</Color>
              <VariableType>Float</VariableType>
              <Address>GravityVal</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>167</ID>
          <Description>"Anti Gravity Fly (1.17)"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}
[ENABLE]
aobscanmodule(AntiGravityFly,Minecraft.Windows.exe,F3 0F 10 82 10 05 00 00)
alloc(newmem,$1000,AntiGravityFly)

label(code)
label(return)

alloc(AntiGravityFlyVal,1)
registersymbol(AntiGravityFlyVal)

AntiGravityFlyVal:
  dd (float)0.1

newmem:
//movss xmm0,[rcx+000004EC]
code:
  push ecx
  mov ecx [AntiGravityFlyVal]
  mov [rdx+00000510],ecx
  pop ecx
  jmp return

AntiGravityFly:
  jmp newmem
  nop 3
return:
registersymbol(AntiGravityFly)

[DISABLE]
AntiGravityFly:
  db F3 0F 10 82 10 05 00 00

unregistersymbol(AntiGravityFly)
dealloc(newmem)
dealloc(AntiGravityFlyVal)
unregistersymbol(AntiGravityFlyVal)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2511</ID>
              <Description>"AntiGravityFly Value"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8000</Color>
              <VariableType>Float</VariableType>
              <Address>AntiGravityFlyVal</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"NoFall(Umm)"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(NoFall,Minecraft.Windows.exe,00 00 40 40 DB 0F) // should be unique
alloc(newmem,$1000,NoFall)

label(code)
label(return)

newmem:

code:
  add [rax],al
  inc eax
  fisttp dword ptr [rdi]
  jmp return

NoFall:
  jmp newmem
  nop
return:
registersymbol(NoFall)

[DISABLE]

NoFall:
  db 00 00 40 40 DB 0F

unregistersymbol(NoFall)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+2FED0E8

Minecraft.Windows.exe+2FED0D7: 40 B3 58           - mov bl,58
Minecraft.Windows.exe+2FED0DA: 37                 - aaa 
Minecraft.Windows.exe+2FED0DB: 40 00 00           - add [rax],al
Minecraft.Windows.exe+2FED0DE: 00 00              - add [rax],al
Minecraft.Windows.exe+2FED0E0: 00 00              - add [rax],al
Minecraft.Windows.exe+2FED0E2: 00 00              - add [rax],al
Minecraft.Windows.exe+2FED0E4: 00 00              - add [rax],al
Minecraft.Windows.exe+2FED0E6: 3E 40              - db 3E 40 
Minecraft.Windows.exe+2FED0E8: 00 00              - add [rax],al
Minecraft.Windows.exe+2FED0EA: 40 40              - inc eax
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+2FED0EC: DB 0F              - fisttp dword ptr [rdi]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+2FED0EE: 49 40              - inc r8
Minecraft.Windows.exe+2FED0F0: 00 00              - add [rax],al
Minecraft.Windows.exe+2FED0F2: 00 00              - add [rax],al
Minecraft.Windows.exe+2FED0F4: 00 80 4A 40 26 CF  - add [rax-30D9BFB6],al
Minecraft.Windows.exe+2FED0FA: 03 0D DC A5 4C 40  - add ecx,[7FF7954276DC]
Minecraft.Windows.exe+2FED100: 66 66 66 66 66 A6  - cmpsb 
Minecraft.Windows.exe+2FED106: 4C 40              - inc rax
Minecraft.Windows.exe+2FED108: CD CC              - int -34
Minecraft.Windows.exe+2FED10A: 4C 40              - inc rax
Minecraft.Windows.exe+2FED10C: 00 00              - add [rax],al
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>264</ID>
          <Description>"NoBlockFall (1.17.02)"</Description>
          <Color>FF8000</Color>
          <VariableType>Float</VariableType>
          <Address>Minecraft.Windows.exe+3500ED0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>2576</ID>
          <Description>"Phase"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version:
  Date   : 2021-07-27
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Phase,Minecraft.Windows.exe,F3 0F 11 81 E0 04 00 00) // should be unique
alloc(newmem,$1000,Phase)

label(code)
label(return)

newmem:

code:
  mov eax [rcx+000004D4]
  mov [rcx+000004E0],eax
  jmp return

Phase:
  jmp newmem
  nop 3
return:
registersymbol(Phase)

[DISABLE]

Phase:
  db F3 0F 11 81 E0 04 00 00

unregistersymbol(Phase)
dealloc(newmem)

{
// ORIGINAL CODE - PhaseION POINT: Minecraft.Windows.exe+1CFECF2

Minecraft.Windows.exe+1CFECAC: F3 0F 58 81 D4 04 00 00        - addss xmm0,[rcx+000004D4]
Minecraft.Windows.exe+1CFECB4: F3 0F 11 81 D4 04 00 00        - movss [rcx+000004D4],xmm0
Minecraft.Windows.exe+1CFECBC: F3 0F 10 42 08                 - movss xmm0,[rdx+08]
Minecraft.Windows.exe+1CFECC1: F3 0F 58 81 D8 04 00 00        - addss xmm0,[rcx+000004D8]
Minecraft.Windows.exe+1CFECC9: F3 0F 11 81 D8 04 00 00        - movss [rcx+000004D8],xmm0
Minecraft.Windows.exe+1CFECD1: F3 0F 10 0A                    - movss xmm1,[rdx]
Minecraft.Windows.exe+1CFECD5: F3 0F 58 89 DC 04 00 00        - addss xmm1,[rcx+000004DC]
Minecraft.Windows.exe+1CFECDD: F3 0F 11 89 DC 04 00 00        - movss [rcx+000004DC],xmm1
Minecraft.Windows.exe+1CFECE5: F3 0F 10 42 04                 - movss xmm0,[rdx+04]
Minecraft.Windows.exe+1CFECEA: F3 0F 58 81 E0 04 00 00        - addss xmm0,[rcx+000004E0]
// ---------- PhaseING HERE ----------
Minecraft.Windows.exe+1CFECF2: F3 0F 11 81 E0 04 00 00        - movss [rcx+000004E0],xmm0
// ---------- DONE PhaseING  ----------
Minecraft.Windows.exe+1CFECFA: F3 0F 10 4A 08                 - movss xmm1,[rdx+08]
Minecraft.Windows.exe+1CFECFF: F3 0F 58 89 E4 04 00 00        - addss xmm1,[rcx+000004E4]
Minecraft.Windows.exe+1CFED07: F3 0F 11 89 E4 04 00 00        - movss [rcx+000004E4],xmm1
Minecraft.Windows.exe+1CFED0F: 4C 8B 89 20 02 00 00           - mov r9,[rcx+00000220]
Minecraft.Windows.exe+1CFED16: 48 8B 89 18 02 00 00           - mov rcx,[rcx+00000218]
Minecraft.Windows.exe+1CFED1D: 49 3B C9                       - cmp rcx,r9
Minecraft.Windows.exe+1CFED20: 74 6F                          - je Minecraft.Windows.exe+1CFED91
Minecraft.Windows.exe+1CFED22: 48 8D 41 14                    - lea rax,[rcx+14]
Minecraft.Windows.exe+1CFED26: 66 66 0F 1F 84 00 00 00 00 00  - nop word ptr [rax+rax+00000000]
Minecraft.Windows.exe+1CFED30: F3 0F 10 01                    - movss xmm0,[rcx]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2513</ID>
          <Description>"Speed"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}
[ENABLE]
aobscanmodule(Speed,Minecraft.Windows.exe,F3 0F 11 83 84 00 00 00 80 7A 01 00 74 40)
alloc(newmem,$1000,Speed)

label(code)
label(return)

alloc(SpeedVal,1)
registersymbol(SpeedVal)

SpeedVal:
  dd (float)0.2

newmem:
//movss xmm0,[rcx+000004EC]
code:
  push eax
  mov eax [SpeedVal]
  mov [rbx+00000084],eax
  pop eax
  jmp return

Speed:
  jmp newmem
  nop 3
return:
registersymbol(Speed)

[DISABLE]
Speed:
  db F3 0F 11 83 84 00 00 00

unregistersymbol(Speed)
dealloc(newmem)
dealloc(SpeedVal)
unregistersymbol(SpeedVal)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>107</Key>
              </Keys>
              <ID>0</ID>
              <ActivateSound TTS="EN">{MRDescription} Activated</ActivateSound>
              <DeactivateSound TTS="EN">{MRDescription} Deactivated</DeactivateSound>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>2514</ID>
              <Description>"Speed Value"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8000</Color>
              <VariableType>Float</VariableType>
              <Address>SpeedVal</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2430</ID>
          <Description>"Water Glide"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}
[ENABLE]
aobscanmodule(WaterGlide,Minecraft.Windows.exe,f3 41 0f 11 47 ? 49 8b 06 49 8b ce ff 90 ? ? ? ? 84 c0 0f 84 ? ? ? ? 49 8b 1e f3 41 0f 10 7f ? f3 41 0f 10 77 ? f3 0f 58 35 ? ? ? ? 49 8b ce ff 93 ? ? ? ? f3 0f 5c 70 ? f3 41 0f 58 f5)
alloc(newmem,$1000,WaterGlide)

label(code)
label(return)

alloc(WaterGlideVal,5)
registersymbol(WaterGlideVal)

WaterGlideVal:
  dd (float)0.001

newmem:
movss [r15+04],xmm0
code:
  push eax
  mov eax,[WaterGlideVal]
  mov [r15+04],eax
  pop eax
  jmp return

WaterGlide:
  jmp newmem
  nop
return:
registersymbol(WaterGlide)

[DISABLE]
WaterGlide:
  db F3 41 0F 11 47 04

unregistersymbol(WaterGlide)
dealloc(newmem)
dealloc(WaterGlideVal)
unregistersymbol(WaterGlideVal)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2517</ID>
              <Description>"Height Value"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8000</Color>
              <VariableType>Float</VariableType>
              <Address>WaterGlideVal</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2518</ID>
          <Description>"Water Bounce"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}
[ENABLE]
aobscanmodule(WaterBounce,Minecraft.Windows.exe,f3 41 0f 11 47 ? 49 8b 06 49 8b ce ff 90 ? ? ? ? 84 c0 0f 84 ? ? ? ? 49 8b 1e f3 41 0f 10 7f ? f3 41 0f 10 77 ? f3 0f 58 35 ? ? ? ? 49 8b ce ff 93 ? ? ? ? f3 0f 5c 70 ? f3 41 0f 58 f5)
alloc(newmem,$1000,WaterBounce)

label(code)
label(return)

alloc(WaterBounceVal,5)
registersymbol(WaterBounceVal)

WaterBounceVal:
  dd (float)0.3

newmem:
movss [r15+04],xmm0
code:
  push eax
  mov eax,[WaterBounceVal]
  mov [r15+04],eax
  pop eax
  jmp return

WaterBounce:
  jmp newmem
  nop
return:
registersymbol(WaterBounce)

[DISABLE]
WaterBounce:
  db F3 41 0F 11 47 04

unregistersymbol(WaterBounce)
dealloc(newmem)
dealloc(WaterBounceVal)
unregistersymbol(WaterBounceVal)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2519</ID>
              <Description>"Height Value"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8000</Color>
              <VariableType>Float</VariableType>
              <Address>WaterBounceVal</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2516</ID>
          <Description>"Water Walk"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-24
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(WaterWalk,Minecraft.Windows.exe,0F B6 80 E0 01 00 00) // should be unique
alloc(newmem,$1000,WaterWalk)

label(code)
label(return)

newmem:

code:
  mov [rax+000001E0],1677747
  jmp return

WaterWalk:
  jmp newmem
  nop 2
return:
registersymbol(WaterWalk)

[DISABLE]

WaterWalk:
  db 0F B6 80 E0 01 00 00

unregistersymbol(WaterWalk)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1135394

Minecraft.Windows.exe+113537F: CC                       - int 3 
Minecraft.Windows.exe+1135380: 48 8B 41 10              - mov rax,[rcx+10]
Minecraft.Windows.exe+1135384: 88 90 E0 01 00 00        - mov [rax+000001E0],dl
Minecraft.Windows.exe+113538A: C3                       - ret 
Minecraft.Windows.exe+113538B: CC                       - int 3 
Minecraft.Windows.exe+113538C: CC                       - int 3 
Minecraft.Windows.exe+113538D: CC                       - int 3 
Minecraft.Windows.exe+113538E: CC                       - int 3 
Minecraft.Windows.exe+113538F: CC                       - int 3 
Minecraft.Windows.exe+1135390: 48 8B 41 10              - mov rax,[rcx+10]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1135394: 0F B6 80 E0 01 00 00     - movzx eax,byte ptr [rax+000001E0]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+113539B: C3                       - ret 
Minecraft.Windows.exe+113539C: CC                       - int 3 
Minecraft.Windows.exe+113539D: CC                       - int 3 
Minecraft.Windows.exe+113539E: CC                       - int 3 
Minecraft.Windows.exe+113539F: CC                       - int 3 
Minecraft.Windows.exe+11353A0: 48 8B 41 10              - mov rax,[rcx+10]
Minecraft.Windows.exe+11353A4: F3 0F 11 88 4C 02 00 00  - movss [rax+0000024C],xmm1
Minecraft.Windows.exe+11353AC: C3                       - ret 
Minecraft.Windows.exe+11353AD: CC                       - int 3 
Minecraft.Windows.exe+11353AE: CC                       - int 3 
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"World"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <ShowAsSigned>0</ShowAsSigned>
      <Color>008000</Color>
      <GroupHeader>1</GroupHeader>
      <Address>v1</Address>
      <CheatEntries>
        <CheatEntry>
          <ID>2525</ID>
          <Description>"Height TP (Server)"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}
[ENABLE]
aobscanmodule(Y,Minecraft.Windows.exe,F3 0F 11 81 D4 04 00 00)
alloc(newmem,$1000,Y)

label(code)
label(return)

alloc(YVal,1)
registersymbol(YVal)

YVal:
  dd (float)10000

newmem:
//movss xmm0,[rcx+000004EC]
code:
  push eax
  mov eax [YVal]
  mov [rcx+000004D4],eax
  pop eax
  jmp return

Y:
  jmp newmem
  nop 3
return:
registersymbol(Y)

[DISABLE]
Y:
  db F3 0F 11 81 D4 04 00 00

unregistersymbol(Y)
dealloc(newmem)
dealloc(YVal)
unregistersymbol(YVal)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2526</ID>
              <Description>"Height Value"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>YVal</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2530</ID>
          <Description>"CreativeBreak"</Description>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-25
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(CreativeBreak,Minecraft.Windows.exe,8B 81 0C 1E 00 00 83 F8 02) // should be unique
alloc(newmem,$1000,CreativeBreak)

label(code)
label(return)

newmem:

code:
  mov [rcx+00001E0C],1
  jmp return

CreativeBreak:
  jmp newmem
  nop
return:
registersymbol(CreativeBreak)

[DISABLE]

CreativeBreak:
  db 8B 81 0C 1E 00 00

unregistersymbol(CreativeBreak)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1CAA734

Minecraft.Windows.exe+1CAA723: 5B                    - pop rbx
Minecraft.Windows.exe+1CAA724: C3                    - ret 
Minecraft.Windows.exe+1CAA725: B0 01                 - mov al,01
Minecraft.Windows.exe+1CAA727: 48 83 C4 20           - add rsp,20
Minecraft.Windows.exe+1CAA72B: 5B                    - pop rbx
Minecraft.Windows.exe+1CAA72C: C3                    - ret 
Minecraft.Windows.exe+1CAA72D: CC                    - int 3 
Minecraft.Windows.exe+1CAA72E: CC                    - int 3 
Minecraft.Windows.exe+1CAA72F: CC                    - int 3 
Minecraft.Windows.exe+1CAA730: 48 83 EC 28           - sub rsp,28
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1CAA734: 8B 81 0C 1E 00 00     - mov eax,[rcx+00001E0C]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1CAA73A: 83 F8 02              - cmp eax,02
Minecraft.Windows.exe+1CAA73D: 74 21                 - je Minecraft.Windows.exe+1CAA760
Minecraft.Windows.exe+1CAA73F: 83 F8 05              - cmp eax,05
Minecraft.Windows.exe+1CAA742: 75 15                 - jne Minecraft.Windows.exe+1CAA759
Minecraft.Windows.exe+1CAA744: 48 8B 89 78 03 00 00  - mov rcx,[rcx+00000378]
Minecraft.Windows.exe+1CAA74B: 48 8B 01              - mov rax,[rcx]
Minecraft.Windows.exe+1CAA74E: FF 90 98 03 00 00     - call qword ptr [rax+00000398]
Minecraft.Windows.exe+1CAA754: 83 F8 02              - cmp eax,02
Minecraft.Windows.exe+1CAA757: 74 07                 - je Minecraft.Windows.exe+1CAA760
Minecraft.Windows.exe+1CAA759: 32 C0                 - xor al,al
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"InstaBreak"</Description>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InstaBreak,Minecraft.Windows.exe,F3 0F 11 4B 24 33) // should be unique
alloc(newmem,$1000,InstaBreak)

label(code)
label(return)

newmem:
movss [rbx+24],xmm1
jmp code

code:
  mov [rbx+24],(float)1
  jmp return

InstaBreak:
  jmp newmem
return:
registersymbol(InstaBreak)

[DISABLE]

InstaBreak:
  db F3 0F 11 4B 24

unregistersymbol(InstaBreak)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+17F1ABA

Minecraft.Windows.exe+17F1A91: 0F 57 F6                          - xorps xmm6,xmm6
Minecraft.Windows.exe+17F1A94: F2 0F 5A F0                       - cvtsd2ss xmm6,xmm0
Minecraft.Windows.exe+17F1A98: F3 0F 59 35 24 B8 7F 01           - mulss xmm6,[Minecraft.Windows.exe+2FED2C4]
Minecraft.Windows.exe+17F1AA0: 49 8B D5                          - mov rdx,r13
Minecraft.Windows.exe+17F1AA3: 48 8B CB                          - mov rcx,rbx
Minecraft.Windows.exe+17F1AA6: E8 15 2A 00 00                    - call Minecraft.Windows.exe+17F44C0
Minecraft.Windows.exe+17F1AAB: 0F 28 F8                          - movaps xmm7,xmm0
Minecraft.Windows.exe+17F1AAE: 0F 28 C8                          - movaps xmm1,xmm0
Minecraft.Windows.exe+17F1AB1: F3 0F 59 CE                       - mulss xmm1,xmm6
Minecraft.Windows.exe+17F1AB5: F3 0F 58 4B 24                    - addss xmm1,[rbx+24]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+17F1ABA: F3 0F 11 4B 24                    - movss [rbx+24],xmm1
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+17F1ABF: 33 F6                             - xor esi,esi
Minecraft.Windows.exe+17F1AC1: 48 8B 45 10                       - mov rax,[rbp+10]
Minecraft.Windows.exe+17F1AC5: 48 39 43 68                       - cmp [rbx+68],rax
Minecraft.Windows.exe+17F1AC9: 0F 8D 05 01 00 00                 - jnl Minecraft.Windows.exe+17F1BD4
Minecraft.Windows.exe+17F1ACF: 48 69 8B 80 00 00 00 40 42 0F 00  - imul rcx,[rbx+00000080],000F4240
Minecraft.Windows.exe+17F1ADA: 48 03 C8                          - add rcx,rax
Minecraft.Windows.exe+17F1ADD: 48 89 4B 68                       - mov [rbx+68],rcx
Minecraft.Windows.exe+17F1AE1: 48 8B 53 08                       - mov rdx,[rbx+08]
Minecraft.Windows.exe+17F1AE5: 48 8B 8A 58 03 00 00              - mov rcx,[rdx+00000358]
Minecraft.Windows.exe+17F1AEC: 48 8B 01                          - mov rax,[rcx]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2532</ID>
          <Description>"Gamemode"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}
[ENABLE]
aobscanmodule(Gamemode,Minecraft.Windows.exe,8B 81 0C 1E 00 00 83 F8 02)
alloc(newmem,$1000,Gamemode)

label(code)
label(return)

alloc(GamemodeVal,1)
registersymbol(GamemodeVal)

GamemodeVal:
  dd (byte)0


newmem:
//movss xmm0,[rcx+000004EC]
code:
  push eax
  mov eax [GamemodeVal]
  mov [rcx+00001E0C],eax
  pop eax
  jmp return

Gamemode:
  jmp newmem
  nop
return:
registersymbol(Gamemode)

[DISABLE]
Gamemode:
  db 8B 81 0C 1E 00 00

unregistersymbol(Gamemode)
dealloc(GamemodeVal)
unregistersymbol(GamemodeVal)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2533</ID>
              <Description>"Gamemode"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>GamemodeVal</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>2568</ID>
              <Description>"Survival=0"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>2570</ID>
              <Description>"Creative=1"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>2569</ID>
              <Description>"Adventure=2"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>73</ID>
          <Description>"HungerSpoof, EntityHealth, Speed, WaterSpeed"</Description>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-11
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(XP,Minecraft.Windows.exe,F3 0F 10 B9 84 00 00 00) // should be unique
alloc(newmem,$1000,XP)

label(code)
label(return)

newmem:


code:
  mov [rcx+00000084],(float)1
  jmp return

XP:
  jmp newmem
  nop 3
return:
registersymbol(XP)

[DISABLE]

XP:
  db F3 0F 10 B9 84 00 00 00

unregistersymbol(XP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1EB9985

Minecraft.Windows.exe+1EB9958: 48 8B 41 38                    - mov rax,[rcx+38]
Minecraft.Windows.exe+1EB995C: 48 8B F9                       - mov rdi,rcx
Minecraft.Windows.exe+1EB995F: 49 89 5B 10                    - mov [r11+10],rbx
Minecraft.Windows.exe+1EB9963: 48 8B 59 30                    - mov rbx,[rcx+30]
Minecraft.Windows.exe+1EB9967: 48 2B C3                       - sub rax,rbx
Minecraft.Windows.exe+1EB996A: 49 89 6B 18                    - mov [r11+18],rbp
Minecraft.Windows.exe+1EB996E: 48 C1 F8 03                    - sar rax,03
Minecraft.Windows.exe+1EB9972: 48 BD C5 4E EC C4 4E EC C4 4E  - mov rbp,4EC4EC4EC4EC4EC5
Minecraft.Windows.exe+1EB997C: 48 0F AF C5                    - imul rax,rbp
Minecraft.Windows.exe+1EB9980: 0F 29 7C 24 40                 - movaps [rsp+40],xmm7
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1EB9985: F3 0F 10 B9 84 00 00 00        - movss xmm7,[rcx+00000084]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1EB998D: 48 85 C0                       - test rax,rax
Minecraft.Windows.exe+1EB9990: 0F 84 06 01 00 00              - je Minecraft.Windows.exe+1EB9A9C
Minecraft.Windows.exe+1EB9996: 48 3B 59 38                    - cmp rbx,[rcx+38]
Minecraft.Windows.exe+1EB999A: 0F 84 FC 00 00 00              - je Minecraft.Windows.exe+1EB9A9C
Minecraft.Windows.exe+1EB99A0: 49 89 73 20                    - mov [r11+20],rsi
Minecraft.Windows.exe+1EB99A4: 0F 29 74 24 50                 - movaps [rsp+50],xmm6
Minecraft.Windows.exe+1EB99A9: 0F 1F 80 00 00 00 00           - nop dword ptr [rax+00000000]
Minecraft.Windows.exe+1EB99B0: 48 8B 03                       - mov rax,[rbx]
Minecraft.Windows.exe+1EB99B3: 48 8B CB                       - mov rcx,rbx
Minecraft.Windows.exe+1EB99B6: FF 43 5C                       - inc [rbx+5C]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"AutoKill"</Description>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Speed,Minecraft.Windows.exe,F3 0F 10 B9 84 00 00 00) // should be unique
alloc(newmem,$1000,Speed)

label(code)
label(return)

newmem:

code:
  mov [rcx+00000084],(Float)0.100
  jmp return

Speed:
  jmp newmem
  nop 3
return:
registersymbol(Speed)

[DISABLE]

Speed:
  db F3 0F 10 B9 84 00 00 00

unregistersymbol(Speed)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1B760E5

Minecraft.Windows.exe+1B760B8: 48 8B 41 38                    - mov rax,[rcx+38]
Minecraft.Windows.exe+1B760BC: 48 8B F9                       - mov rdi,rcx
Minecraft.Windows.exe+1B760BF: 49 89 5B 10                    - mov [r11+10],rbx
Minecraft.Windows.exe+1B760C3: 48 8B 59 30                    - mov rbx,[rcx+30]
Minecraft.Windows.exe+1B760C7: 48 2B C3                       - sub rax,rbx
Minecraft.Windows.exe+1B760CA: 49 89 6B 18                    - mov [r11+18],rbp
Minecraft.Windows.exe+1B760CE: 48 C1 F8 03                    - sar rax,03
Minecraft.Windows.exe+1B760D2: 48 BD C5 4E EC C4 4E EC C4 4E  - mov rbp,4EC4EC4EC4EC4EC5
Minecraft.Windows.exe+1B760DC: 48 0F AF C5                    - imul rax,rbp
Minecraft.Windows.exe+1B760E0: 0F 29 7C 24 40                 - movaps [rsp+40],xmm7
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1B760E5: F3 0F 10 B9 84 00 00 00        - movss xmm7,[rcx+00000084]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1B760ED: 48 85 C0                       - test rax,rax
Minecraft.Windows.exe+1B760F0: 0F 84 06 01 00 00              - je Minecraft.Windows.exe+1B761FC
Minecraft.Windows.exe+1B760F6: 48 3B 59 38                    - cmp rbx,[rcx+38]
Minecraft.Windows.exe+1B760FA: 0F 84 FC 00 00 00              - je Minecraft.Windows.exe+1B761FC
Minecraft.Windows.exe+1B76100: 49 89 73 20                    - mov [r11+20],rsi
Minecraft.Windows.exe+1B76104: 0F 29 74 24 50                 - movaps [rsp+50],xmm6
Minecraft.Windows.exe+1B76109: 0F 1F 80 00 00 00 00           - nop dword ptr [rax+00000000]
Minecraft.Windows.exe+1B76110: 48 8B 03                       - mov rax,[rbx]
Minecraft.Windows.exe+1B76113: 48 8B CB                       - mov rcx,rbx
Minecraft.Windows.exe+1B76116: FF 43 5C                       - inc [rbx+5C]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>106</ID>
          <Description>"Creative Spoof (1.17)"</Description>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-11
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(CreativeSpoof,Minecraft.Windows.exe,8B 81 0C 1E 00 00 83 F8 01 74 26) // should be unique
alloc(newmem,$1000,CreativeSpoof)

label(code)
label(return)

newmem:
jmp code

code:
  mov [rcx+00001E0C],(byte)1
  jmp return

CreativeSpoof:
  jmp newmem
  nop
return:
registersymbol(CreativeSpoof)

[DISABLE]

CreativeSpoof:
  db 8B 81 0C 1E 00 00

unregistersymbol(CreativeSpoof)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1C0D7B4

Minecraft.Windows.exe+1C0D7A7: CC                    - int 3 
Minecraft.Windows.exe+1C0D7A8: CC                    - int 3 
Minecraft.Windows.exe+1C0D7A9: CC                    - int 3 
Minecraft.Windows.exe+1C0D7AA: CC                    - int 3 
Minecraft.Windows.exe+1C0D7AB: CC                    - int 3 
Minecraft.Windows.exe+1C0D7AC: CC                    - int 3 
Minecraft.Windows.exe+1C0D7AD: CC                    - int 3 
Minecraft.Windows.exe+1C0D7AE: CC                    - int 3 
Minecraft.Windows.exe+1C0D7AF: CC                    - int 3 
Minecraft.Windows.exe+1C0D7B0: 48 83 EC 28           - sub rsp,28
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1C0D7B4: 8B 81 0C 1E 00 00     - mov eax,[rcx+00001E0C]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1C0D7BA: 83 F8 01              - cmp eax,01
Minecraft.Windows.exe+1C0D7BD: 74 26                 - je Minecraft.Windows.exe+1C0D7E5
Minecraft.Windows.exe+1C0D7BF: 83 F8 04              - cmp eax,04
Minecraft.Windows.exe+1C0D7C2: 74 21                 - je Minecraft.Windows.exe+1C0D7E5
Minecraft.Windows.exe+1C0D7C4: 83 F8 05              - cmp eax,05
Minecraft.Windows.exe+1C0D7C7: 75 15                 - jne Minecraft.Windows.exe+1C0D7DE
Minecraft.Windows.exe+1C0D7C9: 48 8B 89 78 03 00 00  - mov rcx,[rcx+00000378]
Minecraft.Windows.exe+1C0D7D0: 48 8B 01              - mov rax,[rcx]
Minecraft.Windows.exe+1C0D7D3: FF 90 88 03 00 00     - call qword ptr [rax+00000388]
Minecraft.Windows.exe+1C0D7D9: 83 F8 01              - cmp eax,01
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2531</ID>
          <Description>"CreativeSpoof (1.17.10)"</Description>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version:
  Date   : 2021-07-25
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(CreativeSpoof,Minecraft.Windows.exe,8B 81 0C 1E 00 00 83 F8 02) // should be unique
alloc(newmem,$1000,CreativeSpoof)

label(code)
label(return)

newmem:

code:
  mov [rcx+00001E0C],1
  jmp return

CreativeSpoof:
  jmp newmem
  nop
return:
registersymbol(CreativeSpoof)

[DISABLE]

CreativeSpoof:
  db 8B 81 0C 1E 00 00

unregistersymbol(CreativeSpoof)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1CAA734

Minecraft.Windows.exe+1CAA723: 5B                    - pop rbx
Minecraft.Windows.exe+1CAA724: C3                    - ret
Minecraft.Windows.exe+1CAA725: B0 01                 - mov al,01
Minecraft.Windows.exe+1CAA727: 48 83 C4 20           - add rsp,20
Minecraft.Windows.exe+1CAA72B: 5B                    - pop rbx
Minecraft.Windows.exe+1CAA72C: C3                    - ret
Minecraft.Windows.exe+1CAA72D: CC                    - int 3
Minecraft.Windows.exe+1CAA72E: CC                    - int 3
Minecraft.Windows.exe+1CAA72F: CC                    - int 3
Minecraft.Windows.exe+1CAA730: 48 83 EC 28           - sub rsp,28
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1CAA734: 8B 81 0C 1E 00 00     - mov eax,[rcx+00001E0C]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1CAA73A: 83 F8 02              - cmp eax,02
Minecraft.Windows.exe+1CAA73D: 74 21                 - je Minecraft.Windows.exe+1CAA760
Minecraft.Windows.exe+1CAA73F: 83 F8 05              - cmp eax,05
Minecraft.Windows.exe+1CAA742: 75 15                 - jne Minecraft.Windows.exe+1CAA759
Minecraft.Windows.exe+1CAA744: 48 8B 89 78 03 00 00  - mov rcx,[rcx+00000378]
Minecraft.Windows.exe+1CAA74B: 48 8B 01              - mov rax,[rcx]
Minecraft.Windows.exe+1CAA74E: FF 90 98 03 00 00     - call qword ptr [rax+00000398]
Minecraft.Windows.exe+1CAA754: 83 F8 02              - cmp eax,02
Minecraft.Windows.exe+1CAA757: 74 07                 - je Minecraft.Windows.exe+1CAA760
Minecraft.Windows.exe+1CAA759: 32 C0                 - xor al,al
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2581</ID>
          <Description>"XP"</Description>
          <Color>008000</Color>
          <VariableType>Float</VariableType>
          <Address>"Minecraft.Windows.exe"+0402D138</Address>
          <Offsets>
            <Offset>9C</Offset>
            <Offset>200</Offset>
            <Offset>18</Offset>
            <Offset>4A0</Offset>
            <Offset>0</Offset>
            <Offset>0</Offset>
            <Offset>30</Offset>
            <Offset>E8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>2493</ID>
          <Description>"HealthSpoof (1.17)"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}
[ENABLE]
aobscanmodule(Health,Minecraft.Windows.exe,F3 0F 2C 88 84 00 00 00 85 C9 7E 07)
alloc(newmem,$1000,Health)

label(code)
label(return)

alloc(HealthVal,20)
registersymbol(HealthVal)

HealthVal:
  dd (float)20

newmem:
cvttss2si ecx,[rax+00000084]
code:
  push ecx
  mov ecx,[HealthVal]
  mov [rax+00000084],ecx
  pop ecx
  jmp return

Health:
  jmp newmem
  nop 3
return:
registersymbol(Health)

[DISABLE]
Health:
  db F3 0F 2C 88 84 00 00 00

unregistersymbol(Health)
dealloc(newmem)
dealloc(HealthVal)
unregistersymbol(HealthVal)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2494</ID>
              <Description>"Health Value"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>HealthVal</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2495</ID>
          <Description>"HungerSpoof (1.17)"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}
[ENABLE]
aobscanmodule(Hunger,Minecraft.Windows.exe,8B 88 84 00 00 00 89 4F)
alloc(newmem,$1000,Hunger)

label(code)
label(return)

alloc(HungerVal,20)
registersymbol(HungerVal)

HungerVal:
  dd (float)20

newmem:
//cvttss2si ecx,[rax+00000084]
code:
  push ecx
  mov ecx,[HungerVal]
  mov [rax+00000084],ecx
  pop ecx
  jmp return

Hunger:
  jmp newmem
  nop
return:
registersymbol(Hunger)

[DISABLE]
Hunger:
  db 8B 88 84 00 00 00

unregistersymbol(Hunger)
dealloc(newmem)
dealloc(HungerVal)
unregistersymbol(HungerVal)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2496</ID>
              <Description>"Hunger Value"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>HungerVal</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>198</ID>
          <Description>"Item Dupe"</Description>
          <Color>008000</Color>
          <VariableType>Byte</VariableType>
          <Address>2496CBACE82</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>268</ID>
          <Description>"No Fire Tick"</Description>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-27
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(NoFire,Minecraft.Windows.exe,89 87 C0 02 00 00 48 8B) // should be unique
alloc(newmem,$1000,NoFire)

label(code)
label(return)

newmem:

code:
  mov [rdi+000002C0],0
  jmp return

NoFire:
  jmp newmem
  nop
return:
registersymbol(NoFire)

[DISABLE]

NoFire:
  db 89 87 C0 02 00 00

unregistersymbol(NoFire)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1C49DBC

Minecraft.Windows.exe+1C49D95: 8D 0C 92                 - lea ecx,[rdx+rdx*4]
Minecraft.Windows.exe+1C49D98: C1 E1 02                 - shl ecx,02
Minecraft.Windows.exe+1C49D9B: 44 3B C1                 - cmp r8d,ecx
Minecraft.Windows.exe+1C49D9E: 75 18                    - jne Minecraft.Windows.exe+1C49DB8
Minecraft.Windows.exe+1C49DA0: 48 8B 07                 - mov rax,[rdi]
Minecraft.Windows.exe+1C49DA3: BA 01 00 00 00           - mov edx,00000001
Minecraft.Windows.exe+1C49DA8: 48 8B CF                 - mov rcx,rdi
Minecraft.Windows.exe+1C49DAB: FF 90 28 04 00 00        - call qword ptr [rax+00000428]
Minecraft.Windows.exe+1C49DB1: 44 8B 87 C0 02 00 00     - mov r8d,[rdi+000002C0]
Minecraft.Windows.exe+1C49DB8: 41 8D 40 FF              - lea eax,[r8-01]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1C49DBC: 89 87 C0 02 00 00        - mov [rdi+000002C0],eax
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1C49DC2: 48 8B 07                 - mov rax,[rdi]
Minecraft.Windows.exe+1C49DC5: 48 8B CF                 - mov rcx,rdi
Minecraft.Windows.exe+1C49DC8: FF 90 30 02 00 00        - call qword ptr [rax+00000230]
Minecraft.Windows.exe+1C49DCE: 84 C0                    - test al,al
Minecraft.Windows.exe+1C49DD0: 74 18                    - je Minecraft.Windows.exe+1C49DEA
Minecraft.Windows.exe+1C49DD2: F3 0F 10 87 DC 01 00 00  - movss xmm0,[rdi+000001DC]
Minecraft.Windows.exe+1C49DDA: F3 0F 59 05 96 68 8B 01  - mulss xmm0,[Minecraft.Windows.exe+3500678]
Minecraft.Windows.exe+1C49DE2: F3 0F 11 87 DC 01 00 00  - movss [rdi+000001DC],xmm0
Minecraft.Windows.exe+1C49DEA: 48 8B 87 68 03 00 00     - mov rax,[rdi+00000368]
Minecraft.Windows.exe+1C49DF1: 0F BF 48 2A              - movsx ecx,word ptr [rax+2A]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>311</ID>
          <Description>"Rain Spoof (1.17.02)"</Description>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-02
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(RainSpoof,Minecraft.Windows.exe,F3 0F 10 53 3C 48 8D 4B) // should be unique
alloc(newmem,$1000,RainSpoof)

label(code)
label(return)

newmem:

code:
  mov [rbx+3C],(float)1
  jmp return

RainSpoof:
  jmp newmem
return:
registersymbol(RainSpoof)

[DISABLE]

RainSpoof:
  db F3 0F 10 53 3C

unregistersymbol(RainSpoof)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+233A868

Minecraft.Windows.exe+233A843: 48 83 C1 48              - add rcx,48
Minecraft.Windows.exe+233A847: 0F 2F D0                 - comiss xmm2,xmm0
Minecraft.Windows.exe+233A84A: 76 09                    - jna Minecraft.Windows.exe+233A855
Minecraft.Windows.exe+233A84C: F3 0F 58 C3              - addss xmm0,xmm3
Minecraft.Windows.exe+233A850: 0F 2F D0                 - comiss xmm2,xmm0
Minecraft.Windows.exe+233A853: EB 07                    - jmp Minecraft.Windows.exe+233A85C
Minecraft.Windows.exe+233A855: F3 0F 5C C3              - subss xmm0,xmm3
Minecraft.Windows.exe+233A859: 0F 2F C2                 - comiss xmm0,xmm2
Minecraft.Windows.exe+233A85C: F3 0F 10 2D 7C 60 1C 01  - movss xmm5,[Minecraft.Windows.exe+35008E0]
Minecraft.Windows.exe+233A864: 48 0F 46 C1              - cmovbe rax,rcx
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+233A868: F3 0F 10 53 3C           - movss xmm2,[rbx+3C]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+233A86D: 48 8D 4B 3C              - lea rcx,[rbx+3C]
Minecraft.Windows.exe+233A871: 0F 2F D1                 - comiss xmm2,xmm1
Minecraft.Windows.exe+233A874: F3 0F 11 44 24 30        - movss [rsp+30],xmm0
Minecraft.Windows.exe+233A87A: 0F 57 E4                 - xorps xmm4,xmm4
Minecraft.Windows.exe+233A87D: F3 0F 10 00              - movss xmm0,[rax]
Minecraft.Windows.exe+233A881: 48 8D 44 24 38           - lea rax,[rsp+38]
Minecraft.Windows.exe+233A886: F3 0F 5F C4              - maxss xmm0,xmm4
Minecraft.Windows.exe+233A88A: F3 0F 5D C5              - minss xmm0,xmm5
Minecraft.Windows.exe+233A88E: F3 0F 11 43 44           - movss [rbx+44],xmm0
Minecraft.Windows.exe+233A893: 76 09                    - jna Minecraft.Windows.exe+233A89E
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>312</ID>
          <Description>"Riptide Spoof (1.17.02)"</Description>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-02
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(RiptideSpoof,Minecraft.Windows.exe,F3 0F 10 53 3C 48 8D 4B) // should be unique
alloc(newmem,$1000,RiptideSpoof)

label(code)
label(return)

newmem:

code:
  mov [rbx+3C],(float)1
  jmp return

RiptideSpoof:
  jmp newmem
return:
registersymbol(RiptideSpoof)

[DISABLE]

RiptideSpoof:
  db F3 0F 10 53 3C

unregistersymbol(RiptideSpoof)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+233A868

Minecraft.Windows.exe+233A843: 48 83 C1 48              - add rcx,48
Minecraft.Windows.exe+233A847: 0F 2F D0                 - comiss xmm2,xmm0
Minecraft.Windows.exe+233A84A: 76 09                    - jna Minecraft.Windows.exe+233A855
Minecraft.Windows.exe+233A84C: F3 0F 58 C3              - addss xmm0,xmm3
Minecraft.Windows.exe+233A850: 0F 2F D0                 - comiss xmm2,xmm0
Minecraft.Windows.exe+233A853: EB 07                    - jmp Minecraft.Windows.exe+233A85C
Minecraft.Windows.exe+233A855: F3 0F 5C C3              - subss xmm0,xmm3
Minecraft.Windows.exe+233A859: 0F 2F C2                 - comiss xmm0,xmm2
Minecraft.Windows.exe+233A85C: F3 0F 10 2D 7C 60 1C 01  - movss xmm5,[Minecraft.Windows.exe+35008E0]
Minecraft.Windows.exe+233A864: 48 0F 46 C1              - cmovbe rax,rcx
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+233A868: F3 0F 10 53 3C           - movss xmm2,[rbx+3C]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+233A86D: 48 8D 4B 3C              - lea rcx,[rbx+3C]
Minecraft.Windows.exe+233A871: 0F 2F D1                 - comiss xmm2,xmm1
Minecraft.Windows.exe+233A874: F3 0F 11 44 24 30        - movss [rsp+30],xmm0
Minecraft.Windows.exe+233A87A: 0F 57 E4                 - xorps xmm4,xmm4
Minecraft.Windows.exe+233A87D: F3 0F 10 00              - movss xmm0,[rax]
Minecraft.Windows.exe+233A881: 48 8D 44 24 38           - lea rax,[rsp+38]
Minecraft.Windows.exe+233A886: F3 0F 5F C4              - maxss xmm0,xmm4
Minecraft.Windows.exe+233A88A: F3 0F 5D C5              - minss xmm0,xmm5
Minecraft.Windows.exe+233A88E: F3 0F 11 43 44           - movss [rbx+44],xmm0
Minecraft.Windows.exe+233A893: 76 09                    - jna Minecraft.Windows.exe+233A89E
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>484</ID>
          <Description>"RainSpoof (1.17.10)"</Description>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-17
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(RainSpoof,Minecraft.Windows.exe,F3 0F 10 51 3C 48) // should be unique
alloc(newmem,$1000,RainSpoof)

label(code)
label(return)

newmem:

code:
  mov [rcx+3C],(float)1
  jmp return

RainSpoof:
  jmp newmem
return:
registersymbol(RainSpoof)

[DISABLE]

RainSpoof:
  db F3 0F 10 51 3C

unregistersymbol(RainSpoof)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+241473A

Minecraft.Windows.exe+2414712: F3 0F 11 49 34           - movss [rcx+34],xmm1
Minecraft.Windows.exe+2414717: F3 0F 11 41 40           - movss [rcx+40],xmm0
Minecraft.Windows.exe+241471C: 76 09                    - jna Minecraft.Windows.exe+2414727
Minecraft.Windows.exe+241471E: F3 0F 58 C3              - addss xmm0,xmm3
Minecraft.Windows.exe+2414722: 0F 2F D0                 - comiss xmm2,xmm0
Minecraft.Windows.exe+2414725: EB 07                    - jmp Minecraft.Windows.exe+241472E
Minecraft.Windows.exe+2414727: F3 0F 5C C3              - subss xmm0,xmm3
Minecraft.Windows.exe+241472B: 0F 2F C2                 - comiss xmm0,xmm2
Minecraft.Windows.exe+241472E: F3 0F 10 2D 5A 8E 1B 01  - movss xmm5,[Minecraft.Windows.exe+35CD590]
Minecraft.Windows.exe+2414736: 48 0F 46 C2              - cmovbe rax,rdx
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+241473A: F3 0F 10 51 3C           - movss xmm2,[rcx+3C]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+241473F: 48 8D 51 3C              - lea rdx,[rcx+3C]
Minecraft.Windows.exe+2414743: 0F 2F D1                 - comiss xmm2,xmm1
Minecraft.Windows.exe+2414746: F3 0F 11 44 24 08        - movss [rsp+08],xmm0
Minecraft.Windows.exe+241474C: 0F 57 E4                 - xorps xmm4,xmm4
Minecraft.Windows.exe+241474F: F3 0F 10 00              - movss xmm0,[rax]
Minecraft.Windows.exe+2414753: 48 8D 44 24 10           - lea rax,[rsp+10]
Minecraft.Windows.exe+2414758: F3 0F 5F C4              - maxss xmm0,xmm4
Minecraft.Windows.exe+241475C: F3 0F 5D C5              - minss xmm0,xmm5
Minecraft.Windows.exe+2414760: F3 0F 11 41 44           - movss [rcx+44],xmm0
Minecraft.Windows.exe+2414765: 76 09                    - jna Minecraft.Windows.exe+2414770
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2630</ID>
          <Description>"ClearWeatherSpoof (1.17.10)"</Description>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-17
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(RainSpoof,Minecraft.Windows.exe,F3 0F 10 51 3C 48) // should be unique
alloc(newmem,$1000,RainSpoof)

label(code)
label(return)

newmem:

code:
  mov [rcx+3C],(float)0
  jmp return

RainSpoof:
  jmp newmem
return:
registersymbol(RainSpoof)

[DISABLE]

RainSpoof:
  db F3 0F 10 51 3C

unregistersymbol(RainSpoof)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+241473A

Minecraft.Windows.exe+2414712: F3 0F 11 49 34           - movss [rcx+34],xmm1
Minecraft.Windows.exe+2414717: F3 0F 11 41 40           - movss [rcx+40],xmm0
Minecraft.Windows.exe+241471C: 76 09                    - jna Minecraft.Windows.exe+2414727
Minecraft.Windows.exe+241471E: F3 0F 58 C3              - addss xmm0,xmm3
Minecraft.Windows.exe+2414722: 0F 2F D0                 - comiss xmm2,xmm0
Minecraft.Windows.exe+2414725: EB 07                    - jmp Minecraft.Windows.exe+241472E
Minecraft.Windows.exe+2414727: F3 0F 5C C3              - subss xmm0,xmm3
Minecraft.Windows.exe+241472B: 0F 2F C2                 - comiss xmm0,xmm2
Minecraft.Windows.exe+241472E: F3 0F 10 2D 5A 8E 1B 01  - movss xmm5,[Minecraft.Windows.exe+35CD590]
Minecraft.Windows.exe+2414736: 48 0F 46 C2              - cmovbe rax,rdx
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+241473A: F3 0F 10 51 3C           - movss xmm2,[rcx+3C]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+241473F: 48 8D 51 3C              - lea rdx,[rcx+3C]
Minecraft.Windows.exe+2414743: 0F 2F D1                 - comiss xmm2,xmm1
Minecraft.Windows.exe+2414746: F3 0F 11 44 24 08        - movss [rsp+08],xmm0
Minecraft.Windows.exe+241474C: 0F 57 E4                 - xorps xmm4,xmm4
Minecraft.Windows.exe+241474F: F3 0F 10 00              - movss xmm0,[rax]
Minecraft.Windows.exe+2414753: 48 8D 44 24 10           - lea rax,[rsp+10]
Minecraft.Windows.exe+2414758: F3 0F 5F C4              - maxss xmm0,xmm4
Minecraft.Windows.exe+241475C: F3 0F 5D C5              - minss xmm0,xmm5
Minecraft.Windows.exe+2414760: F3 0F 11 41 44           - movss [rcx+44],xmm0
Minecraft.Windows.exe+2414765: 76 09                    - jna Minecraft.Windows.exe+2414770
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>485</ID>
          <Description>"RiptideSpoof (1.17.10)"</Description>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-17
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(RiptideSpoof,Minecraft.Windows.exe,F3 0F 10 51 3C 48) // should be unique
alloc(newmem,$1000,RiptideSpoof)

label(code)
label(return)

newmem:

code:
  mov [rcx+3C],(float)1
  jmp return

RiptideSpoof:
  jmp newmem
return:
registersymbol(RiptideSpoof)

[DISABLE]

RiptideSpoof:
  db F3 0F 10 51 3C

unregistersymbol(RiptideSpoof)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+241473A

Minecraft.Windows.exe+2414712: F3 0F 11 49 34           - movss [rcx+34],xmm1
Minecraft.Windows.exe+2414717: F3 0F 11 41 40           - movss [rcx+40],xmm0
Minecraft.Windows.exe+241471C: 76 09                    - jna Minecraft.Windows.exe+2414727
Minecraft.Windows.exe+241471E: F3 0F 58 C3              - addss xmm0,xmm3
Minecraft.Windows.exe+2414722: 0F 2F D0                 - comiss xmm2,xmm0
Minecraft.Windows.exe+2414725: EB 07                    - jmp Minecraft.Windows.exe+241472E
Minecraft.Windows.exe+2414727: F3 0F 5C C3              - subss xmm0,xmm3
Minecraft.Windows.exe+241472B: 0F 2F C2                 - comiss xmm0,xmm2
Minecraft.Windows.exe+241472E: F3 0F 10 2D 5A 8E 1B 01  - movss xmm5,[Minecraft.Windows.exe+35CD590]
Minecraft.Windows.exe+2414736: 48 0F 46 C2              - cmovbe rax,rdx
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+241473A: F3 0F 10 51 3C           - movss xmm2,[rcx+3C]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+241473F: 48 8D 51 3C              - lea rdx,[rcx+3C]
Minecraft.Windows.exe+2414743: 0F 2F D1                 - comiss xmm2,xmm1
Minecraft.Windows.exe+2414746: F3 0F 11 44 24 08        - movss [rsp+08],xmm0
Minecraft.Windows.exe+241474C: 0F 57 E4                 - xorps xmm4,xmm4
Minecraft.Windows.exe+241474F: F3 0F 10 00              - movss xmm0,[rax]
Minecraft.Windows.exe+2414753: 48 8D 44 24 10           - lea rax,[rsp+10]
Minecraft.Windows.exe+2414758: F3 0F 5F C4              - maxss xmm0,xmm4
Minecraft.Windows.exe+241475C: F3 0F 5D C5              - minss xmm0,xmm5
Minecraft.Windows.exe+2414760: F3 0F 11 41 44           - movss [rcx+44],xmm0
Minecraft.Windows.exe+2414765: 76 09                    - jna Minecraft.Windows.exe+2414770
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>320</ID>
          <Description>"Item Dupe"</Description>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-04
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ItemDupe,Minecraft.Windows.exe,44 39 B1 88 00 00 00) // should be unique
alloc(newmem,$1000,ItemDupe)

label(code)
label(return)

newmem:

code:
  mov [rcx+00000088],(float)8.968310172E-44
  jmp return

ItemDupe:
  jmp newmem
  nop 2
return:
registersymbol(ItemDupe)

[DISABLE]

ItemDupe:
  db 44 39 B1 88 00 00 00

unregistersymbol(ItemDupe)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1ABBC1F

Minecraft.Windows.exe+1ABBBF2: 48 8D 6C 24 D0        - lea rbp,[rsp-30]
Minecraft.Windows.exe+1ABBBF7: 48 81 EC 30 01 00 00  - sub rsp,00000130
Minecraft.Windows.exe+1ABBBFE: 48 8B 05 FB E4 F1 01  - mov rax,[Minecraft.Windows.exe+39DA100]
Minecraft.Windows.exe+1ABBC05: 48 33 C4              - xor rax,rsp
Minecraft.Windows.exe+1ABBC08: 48 89 45 20           - mov [rbp+20],rax
Minecraft.Windows.exe+1ABBC0C: 48 8B FA              - mov rdi,rdx
Minecraft.Windows.exe+1ABBC0F: 48 8B D9              - mov rbx,rcx
Minecraft.Windows.exe+1ABBC12: 48 89 54 24 30        - mov [rsp+30],rdx
Minecraft.Windows.exe+1ABBC17: 45 33 F6              - xor r14d,r14d
Minecraft.Windows.exe+1ABBC1A: 44 89 74 24 20        - mov [rsp+20],r14d
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1ABBC1F: 44 39 B1 88 00 00 00  - cmp [rcx+00000088],r14d
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1ABBC26: 0F 8E 74 01 00 00     - jng Minecraft.Windows.exe+1ABBDA0
Minecraft.Windows.exe+1ABBC2C: 0F 57 C0              - xorps xmm0,xmm0
Minecraft.Windows.exe+1ABBC2F: 33 C0                 - xor eax,eax
Minecraft.Windows.exe+1ABBC31: 0F 11 45 90           - movups [rbp-70],xmm0
Minecraft.Windows.exe+1ABBC35: 0F 11 45 A0           - movups [rbp-60],xmm0
Minecraft.Windows.exe+1ABBC39: 0F 11 45 B0           - movups [rbp-50],xmm0
Minecraft.Windows.exe+1ABBC3D: 0F 11 45 C0           - movups [rbp-40],xmm0
Minecraft.Windows.exe+1ABBC41: 0F 11 45 D0           - movups [rbp-30],xmm0
Minecraft.Windows.exe+1ABBC45: 0F 11 45 E0           - movups [rbp-20],xmm0
Minecraft.Windows.exe+1ABBC49: 0F 11 45 F0           - movups [rbp-10],xmm0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2545</ID>
          <Description>"DamageDisconnect"</Description>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-26
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(XVelo,Minecraft.Windows.exe,89 81 0C 05 00 00 8B 42) // should be unique
alloc(newmem,$1000,XVelo)

label(code)
label(return)

aobscanmodule(YVelo,Minecraft.Windows.exe,04 89 81 10 05 00 00) // should be unique
alloc(newmem,$1000,YVelo)

label(codey)
label(returny)

aobscanmodule(ZVelo,Minecraft.Windows.exe,89 81 14 05 00 00 C3) // should be unique
alloc(newmem,$1000,ZVelo)

label(codez)
label(returnz)

newmem:

newmemy:

newmemz:

code:
  mov [rcx+0000050C],(float)0
  jmp return

XVelo:
  jmp newmem
  nop
return:
registersymbol(XVelo)

codey:
  mov [rcx+00000510],(float)0
  jmp return

YVelo+01:
  jmp newmemy
  nop
returny:
registersymbol(YVelo)

codez:
  mov [rcx+00000514],(float)0
  jmp returnz

ZVelo:
  jmp newmemy
  nop
returnz:
registersymbol(ZVelo)


[DISABLE]

XVelo:
  db 89 81 0C 05 00 00

unregistersymbol(XVelo)
dealloc(newmem)

YVelo+01:
  db 89 81 10 05 00 00

unregistersymbol(YVelo)
dealloc(newmemy)

ZVelo:
  db 89 81 14 05 00 00

unregistersymbol(ZVelo)
dealloc(newmemz)


{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1CEECE2

Minecraft.Windows.exe+1CEECD3: 5E                 - pop rsi
Minecraft.Windows.exe+1CEECD4: 5D                 - pop rbp
Minecraft.Windows.exe+1CEECD5: C3                 - ret 
Minecraft.Windows.exe+1CEECD6: E8 E5 BB A6 FE     - call Minecraft.Windows.exe+75A8C0
Minecraft.Windows.exe+1CEECDB: 90                 - nop 
Minecraft.Windows.exe+1CEECDC: CC                 - int 3 
Minecraft.Windows.exe+1CEECDD: CC                 - int 3 
Minecraft.Windows.exe+1CEECDE: CC                 - int 3 
Minecraft.Windows.exe+1CEECDF: CC                 - int 3 
Minecraft.Windows.exe+1CEECE0: 8B 02              - mov eax,[rdx]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1CEECE2: 89 81 0C 05 00 00  - mov [rcx+0000050C],eax
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1CEECE8: 8B 42 04           - mov eax,[rdx+04]
Minecraft.Windows.exe+1CEECEB: 89 81 10 05 00 00  - mov [rcx+00000510],eax
Minecraft.Windows.exe+1CEECF1: 8B 42 08           - mov eax,[rdx+08]
Minecraft.Windows.exe+1CEECF4: 89 81 14 05 00 00  - mov [rcx+00000514],eax
Minecraft.Windows.exe+1CEECFA: C3                 - ret 
Minecraft.Windows.exe+1CEECFB: CC                 - int 3 
Minecraft.Windows.exe+1CEECFC: CC                 - int 3 
Minecraft.Windows.exe+1CEECFD: CC                 - int 3 
Minecraft.Windows.exe+1CEECFE: CC                 - int 3 
Minecraft.Windows.exe+1CEECFF: CC                 - int 3 
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Visual"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <ShowAsSigned>0</ShowAsSigned>
      <Color>FF0080</Color>
      <GroupHeader>1</GroupHeader>
      <Address>v1</Address>
      <CheatEntries>
        <CheatEntry>
          <ID>2505</ID>
          <Description>"FOV"</Description>
          <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF0080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}
[ENABLE]
aobscanmodule(FOV,Minecraft.Windows.exe,F3 0F 10 48 18 F3 0F 10 78)
alloc(newmem,$1000,FOV)

label(code)
label(return)

alloc(FOVVal,80)
registersymbol(FOVVal)

FOVVal:
  dd (float)70

newmem:
movss xmm0,[rcx+000004EC]
code:
  push ecx
  mov ecx [FOVVal]
  mov [rax+18],ecx
  pop ecx
  jmp return

FOV:
  jmp newmem
return:
registersymbol(FOV)

[DISABLE]
FOV:
  db F3 0F 10 48 18

unregistersymbol(FOV)
dealloc(newmem)
dealloc(FOVVal)
unregistersymbol(FOVVal)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>119</ID>
          <Description>"Chunk Freewalk"</Description>
          <LastState/>
          <Color>FF0080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-11
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(SavedChunkFreelook,Minecraft.Windows.exe,80 B9 F8 26 00 00 01) // should be unique
alloc(newmem,$1000,SavedChunkFreelook)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [rcx+000026F8],00
  jmp return

SavedChunkFreelook:
  jmp newmem
  nop 2
return:
registersymbol(SavedChunkFreelook)

[DISABLE]

SavedChunkFreelook:
  db 80 B9 F8 26 00 00 01

unregistersymbol(SavedChunkFreelook)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+BFACFB

Minecraft.Windows.exe+BFACD5: 48 89 74 24 18        - mov [rsp+18],rsi
Minecraft.Windows.exe+BFACDA: 55                    - push rbp
Minecraft.Windows.exe+BFACDB: 57                    - push rdi
Minecraft.Windows.exe+BFACDC: 41 56                 - push r14
Minecraft.Windows.exe+BFACDE: 48 8D 6C 24 D0        - lea rbp,[rsp-30]
Minecraft.Windows.exe+BFACE3: 48 81 EC 30 01 00 00  - sub rsp,00000130
Minecraft.Windows.exe+BFACEA: 48 8B 05 0F E4 DD 02  - mov rax,[Minecraft.Windows.exe+39D9100]
Minecraft.Windows.exe+BFACF1: 48 33 C4              - xor rax,rsp
Minecraft.Windows.exe+BFACF4: 48 89 45 20           - mov [rbp+20],rax
Minecraft.Windows.exe+BFACF8: 48 8B D9              - mov rbx,rcx
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+BFACFB: 80 B9 F8 26 00 00 01  - cmp byte ptr [rcx+000026F8],01
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+BFAD02: 0F 85 C6 02 00 00     - jne Minecraft.Windows.exe+BFAFCE
Minecraft.Windows.exe+BFAD08: 80 79 18 00           - cmp byte ptr [rcx+18],00
Minecraft.Windows.exe+BFAD0C: 0F 84 E0 02 00 00     - je Minecraft.Windows.exe+BFAFF2
Minecraft.Windows.exe+BFAD12: 48 8B 41 08           - mov rax,[rcx+08]
Minecraft.Windows.exe+BFAD16: 48 8B 08              - mov rcx,[rax]
Minecraft.Windows.exe+BFAD19: 8B 43 10              - mov eax,[rbx+10]
Minecraft.Windows.exe+BFAD1C: 89 44 24 20           - mov [rsp+20],eax
Minecraft.Windows.exe+BFAD20: 48 8D 54 24 20        - lea rdx,[rsp+20]
Minecraft.Windows.exe+BFAD25: E8 A6 25 04 00        - call Minecraft.Windows.exe+C3D2D0
Minecraft.Windows.exe+BFAD2A: 48 8B F8              - mov rdi,rax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>269</ID>
          <Description>"Fire Spoof"</Description>
          <LastState/>
          <Color>FF0080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-27
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(NoFire,Minecraft.Windows.exe,89 87 C0 02 00 00 48 8B) // should be unique
alloc(newmem,$1000,NoFire)

label(code)
label(return)

newmem:

code:
  mov [rdi+000002C0],160
  jmp return

NoFire:
  jmp newmem
  nop
return:
registersymbol(NoFire)

[DISABLE]

NoFire:
  db 89 87 C0 02 00 00

unregistersymbol(NoFire)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1C49DBC

Minecraft.Windows.exe+1C49D95: 8D 0C 92                 - lea ecx,[rdx+rdx*4]
Minecraft.Windows.exe+1C49D98: C1 E1 02                 - shl ecx,02
Minecraft.Windows.exe+1C49D9B: 44 3B C1                 - cmp r8d,ecx
Minecraft.Windows.exe+1C49D9E: 75 18                    - jne Minecraft.Windows.exe+1C49DB8
Minecraft.Windows.exe+1C49DA0: 48 8B 07                 - mov rax,[rdi]
Minecraft.Windows.exe+1C49DA3: BA 01 00 00 00           - mov edx,00000001
Minecraft.Windows.exe+1C49DA8: 48 8B CF                 - mov rcx,rdi
Minecraft.Windows.exe+1C49DAB: FF 90 28 04 00 00        - call qword ptr [rax+00000428]
Minecraft.Windows.exe+1C49DB1: 44 8B 87 C0 02 00 00     - mov r8d,[rdi+000002C0]
Minecraft.Windows.exe+1C49DB8: 41 8D 40 FF              - lea eax,[r8-01]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1C49DBC: 89 87 C0 02 00 00        - mov [rdi+000002C0],eax
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1C49DC2: 48 8B 07                 - mov rax,[rdi]
Minecraft.Windows.exe+1C49DC5: 48 8B CF                 - mov rcx,rdi
Minecraft.Windows.exe+1C49DC8: FF 90 30 02 00 00        - call qword ptr [rax+00000230]
Minecraft.Windows.exe+1C49DCE: 84 C0                    - test al,al
Minecraft.Windows.exe+1C49DD0: 74 18                    - je Minecraft.Windows.exe+1C49DEA
Minecraft.Windows.exe+1C49DD2: F3 0F 10 87 DC 01 00 00  - movss xmm0,[rdi+000001DC]
Minecraft.Windows.exe+1C49DDA: F3 0F 59 05 96 68 8B 01  - mulss xmm0,[Minecraft.Windows.exe+3500678]
Minecraft.Windows.exe+1C49DE2: F3 0F 11 87 DC 01 00 00  - movss [rdi+000001DC],xmm0
Minecraft.Windows.exe+1C49DEA: 48 8B 87 68 03 00 00     - mov rax,[rdi+00000368]
Minecraft.Windows.exe+1C49DF1: 0F BF 48 2A              - movsx ecx,word ptr [rax+2A]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>270</ID>
          <Description>"Invisibility"</Description>
          <LastState/>
          <Color>FF0080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-23
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Invis,Minecraft.Windows.exe,0F 2F 99 E0 04 00 00) // should be unique
alloc(newmem,$1000,Invis)

label(code)
label(return)

newmem:

code:
  mov [rcx+000004E0],(float)100000
  jmp return

Invis:
  jmp newmem
  nop 2
return:
registersymbol(Invis)

[DISABLE]

Invis:
  db 0F 2F 99 E0 04 00 00

unregistersymbol(Invis)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1C5171A

Minecraft.Windows.exe+1C516EC: F3 0F 10 2A           - movss xmm5,[rdx]
Minecraft.Windows.exe+1C516F0: F3 0F 10 5A 04        - movss xmm3,[rdx+04]
Minecraft.Windows.exe+1C516F5: F3 0F 10 4A 08        - movss xmm1,[rdx+08]
Minecraft.Windows.exe+1C516FA: F3 41 0F 10 60 04     - movss xmm4,[r8+04]
Minecraft.Windows.exe+1C51700: F3 41 0F 10 50 08     - movss xmm2,[r8+08]
Minecraft.Windows.exe+1C51706: 73 30                 - jae Minecraft.Windows.exe+1C51738
Minecraft.Windows.exe+1C51708: 0F 2F A9 DC 04 00 00  - comiss xmm5,[rcx+000004DC]
Minecraft.Windows.exe+1C5170F: 73 27                 - jae Minecraft.Windows.exe+1C51738
Minecraft.Windows.exe+1C51711: 0F 2F A1 D4 04 00 00  - comiss xmm4,[rcx+000004D4]
Minecraft.Windows.exe+1C51718: 76 1E                 - jna Minecraft.Windows.exe+1C51738
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1C5171A: 0F 2F 99 E0 04 00 00  - comiss xmm3,[rcx+000004E0]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1C51721: 73 15                 - jae Minecraft.Windows.exe+1C51738
Minecraft.Windows.exe+1C51723: 0F 2F 91 D8 04 00 00  - comiss xmm2,[rcx+000004D8]
Minecraft.Windows.exe+1C5172A: 76 0C                 - jna Minecraft.Windows.exe+1C51738
Minecraft.Windows.exe+1C5172C: 0F 2F 89 E4 04 00 00  - comiss xmm1,[rcx+000004E4]
Minecraft.Windows.exe+1C51733: 73 03                 - jae Minecraft.Windows.exe+1C51738
Minecraft.Windows.exe+1C51735: B0 01                 - mov al,01
Minecraft.Windows.exe+1C51737: C3                    - ret 
Minecraft.Windows.exe+1C51738: 32 C0                 - xor al,al
Minecraft.Windows.exe+1C5173A: C3                    - ret 
Minecraft.Windows.exe+1C5173B: CC                    - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2507</ID>
          <Description>"Head Rotations"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>FF0080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}
[ENABLE]
aobscanmodule(Rotations,Minecraft.Windows.exe,F3 0F 11 83 28 07 00 00 89)
alloc(newmem,$1000,Rotations)

label(code)
label(return)

alloc(RotationsVal,1)
registersymbol(RotationsVal)

RotationsVal:
  dd (float)0

newmem:
//movss xmm0,[rcx+000004EC]
code:
  push ecx
  mov ecx [RotationsVal]
  mov [rbx+00000728],ecx
  pop ecx
  jmp return

Rotations:
  jmp newmem
  nop 3
return:
registersymbol(Rotations)

[DISABLE]
Rotations:
  db F3 0F 11 83 28 07 00 00

unregistersymbol(Rotations)
dealloc(newmem)
dealloc(RotationsVal)
unregistersymbol(RotationsVal)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2508</ID>
              <Description>"Rotation Value"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF0080</Color>
              <VariableType>Float</VariableType>
              <Address>RotationsVal</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>316</ID>
          <Description>"Full Bright (Turn Off And On)"</Description>
          <LastState/>
          <Color>FF0080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-03
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(FullBright,Minecraft.Windows.exe,F3 0F 10 42 18 48 83 C4 28 C3 41 B8 25) // should be unique
alloc(newmem,$1000,FullBright)

label(code)
label(return)

newmem:

code:
  mov [rdx+18],(float)100
  jmp return

FullBright:
  jmp newmem
return:
registersymbol(FullBright)

[DISABLE]

FullBright:
  db F3 0F 10 42 18

unregistersymbol(FullBright)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+B8EF40

Minecraft.Windows.exe+B8EF1E: 48 8B 10              - mov rdx,[rax]
Minecraft.Windows.exe+B8EF21: 48 85 D2              - test rdx,rdx
Minecraft.Windows.exe+B8EF24: 74 3B                 - je Minecraft.Windows.exe+B8EF61
Minecraft.Windows.exe+B8EF26: 48 8B 42 08           - mov rax,[rdx+08]
Minecraft.Windows.exe+B8EF2A: 48 8B 88 00 02 00 00  - mov rcx,[rax+00000200]
Minecraft.Windows.exe+B8EF31: 48 85 C9              - test rcx,rcx
Minecraft.Windows.exe+B8EF34: 74 0A                 - je Minecraft.Windows.exe+B8EF40
Minecraft.Windows.exe+B8EF36: E8 C5 01 9C 00        - call Minecraft.Windows.exe+154F100
Minecraft.Windows.exe+B8EF3B: 48 83 C4 28           - add rsp,28
Minecraft.Windows.exe+B8EF3F: C3                    - ret 
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+B8EF40: F3 0F 10 42 18        - movss xmm0,[rdx+18]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+B8EF45: 48 83 C4 28           - add rsp,28
Minecraft.Windows.exe+B8EF49: C3                    - ret 
Minecraft.Windows.exe+B8EF4A: 41 B8 25 00 00 00     - mov r8d,00000025
Minecraft.Windows.exe+B8EF50: FF 50 58              - call qword ptr [rax+58]
Minecraft.Windows.exe+B8EF53: 48 8B 10              - mov rdx,[rax]
Minecraft.Windows.exe+B8EF56: 48 85 D2              - test rdx,rdx
Minecraft.Windows.exe+B8EF59: 75 CB                 - jne Minecraft.Windows.exe+B8EF26
Minecraft.Windows.exe+B8EF5B: E8 50 50 B0 FF        - call Minecraft.Windows.exe+693FB0
Minecraft.Windows.exe+B8EF60: CC                    - int 3 
Minecraft.Windows.exe+B8EF61: E8 4A 50 B0 FF        - call Minecraft.Windows.exe+693FB0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>321</ID>
          <Description>"FreeCam (Beta)"</Description>
          <LastState/>
          <Color>FF0080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-11
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(SavedChunkFreelook,Minecraft.Windows.exe,80 B9 F8 26 00 00 01) // should be unique
alloc(newmem,$1000,SavedChunkFreelook)

label(code)
label(return)

aobscanmodule(FLY,Minecraft.Windows.exe,0F B6 40 04 C3 CC CC CC CC CC CC CC CC CC 4C) // should be unique
alloc(newmem1,$1000,FLY)

label(code1)
label(return1)

newmem:
newmen1:
code:
  cmp byte ptr [rcx+000026F8],00
  jmp return

code1:
  mov [rax+04],1
  ret
  jmp return



SavedChunkFreelook:
  jmp newmem
  nop 2

return:
registersymbol(SavedChunkFreelook)

return1:
registersymbol(FLY)

FLY:
  mov [rax+04],1
  ret
  jmp return

[DISABLE]

SavedChunkFreelook:
  db 80 B9 F8 26 00 00 01

unregistersymbol(FLY)
dealloc(newmem)

FLY:
  db 0F B6 40 04 C3

unregistersymbol(SavedChunkFreelook)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+BFACFB

Minecraft.Windows.exe+BFACD5: 48 89 74 24 18        - mov [rsp+18],rsi
Minecraft.Windows.exe+BFACDA: 55                    - push rbp
Minecraft.Windows.exe+BFACDB: 57                    - push rdi
Minecraft.Windows.exe+BFACDC: 41 56                 - push r14
Minecraft.Windows.exe+BFACDE: 48 8D 6C 24 D0        - lea rbp,[rsp-30]
Minecraft.Windows.exe+BFACE3: 48 81 EC 30 01 00 00  - sub rsp,00000130
Minecraft.Windows.exe+BFACEA: 48 8B 05 0F E4 DD 02  - mov rax,[Minecraft.Windows.exe+39D9100]
Minecraft.Windows.exe+BFACF1: 48 33 C4              - xor rax,rsp
Minecraft.Windows.exe+BFACF4: 48 89 45 20           - mov [rbp+20],rax
Minecraft.Windows.exe+BFACF8: 48 8B D9              - mov rbx,rcx
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+BFACFB: 80 B9 F8 26 00 00 01  - cmp byte ptr [rcx+000026F8],01
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+BFAD02: 0F 85 C6 02 00 00     - jne Minecraft.Windows.exe+BFAFCE
Minecraft.Windows.exe+BFAD08: 80 79 18 00           - cmp byte ptr [rcx+18],00
Minecraft.Windows.exe+BFAD0C: 0F 84 E0 02 00 00     - je Minecraft.Windows.exe+BFAFF2
Minecraft.Windows.exe+BFAD12: 48 8B 41 08           - mov rax,[rcx+08]
Minecraft.Windows.exe+BFAD16: 48 8B 08              - mov rcx,[rax]
Minecraft.Windows.exe+BFAD19: 8B 43 10              - mov eax,[rbx+10]
Minecraft.Windows.exe+BFAD1C: 89 44 24 20           - mov [rsp+20],eax
Minecraft.Windows.exe+BFAD20: 48 8D 54 24 20        - lea rdx,[rsp+20]
Minecraft.Windows.exe+BFAD25: E8 A6 25 04 00        - call Minecraft.Windows.exe+C3D2D0
Minecraft.Windows.exe+BFAD2A: 48 8B F8              - mov rdi,rax
}



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>322</ID>
          <Description>"FreeCam Disabler(Beta)"</Description>
          <LastState/>
          <Color>FF0080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-11
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(SavedChunkFreelook,Minecraft.Windows.exe,80 B9 F8 26 00 00 01) // should be unique
alloc(newmem,$1000,SavedChunkFreelook)

label(code)
label(return)

aobscanmodule(FLY,Minecraft.Windows.exe,0F B6 40 04 C3 CC CC CC CC CC CC CC CC CC 4C) // should be unique
alloc(newmem1,$1000,FLY)

label(code1)
label(return1)

newmem:
newmen1:
code:
  cmp byte ptr [rcx+000026F8],01
  jmp return

code1:
  mov [rax+04],0
  ret
  jmp return



SavedChunkFreelook:
  jmp newmem
  nop 2

return:
registersymbol(SavedChunkFreelook)

return1:
registersymbol(FLY)

FLY:
  mov [rax+04],0
  ret
  jmp return

[DISABLE]

SavedChunkFreelook:
  db 80 B9 F8 26 00 00 01

unregistersymbol(FLY)
dealloc(newmem)

FLY:
  db 0F B6 40 04 C3

unregistersymbol(SavedChunkFreelook)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+BFACFB

Minecraft.Windows.exe+BFACD5: 48 89 74 24 18        - mov [rsp+18],rsi
Minecraft.Windows.exe+BFACDA: 55                    - push rbp
Minecraft.Windows.exe+BFACDB: 57                    - push rdi
Minecraft.Windows.exe+BFACDC: 41 56                 - push r14
Minecraft.Windows.exe+BFACDE: 48 8D 6C 24 D0        - lea rbp,[rsp-30]
Minecraft.Windows.exe+BFACE3: 48 81 EC 30 01 00 00  - sub rsp,00000130
Minecraft.Windows.exe+BFACEA: 48 8B 05 0F E4 DD 02  - mov rax,[Minecraft.Windows.exe+39D9100]
Minecraft.Windows.exe+BFACF1: 48 33 C4              - xor rax,rsp
Minecraft.Windows.exe+BFACF4: 48 89 45 20           - mov [rbp+20],rax
Minecraft.Windows.exe+BFACF8: 48 8B D9              - mov rbx,rcx
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+BFACFB: 80 B9 F8 26 00 00 01  - cmp byte ptr [rcx+000026F8],01
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+BFAD02: 0F 85 C6 02 00 00     - jne Minecraft.Windows.exe+BFAFCE
Minecraft.Windows.exe+BFAD08: 80 79 18 00           - cmp byte ptr [rcx+18],00
Minecraft.Windows.exe+BFAD0C: 0F 84 E0 02 00 00     - je Minecraft.Windows.exe+BFAFF2
Minecraft.Windows.exe+BFAD12: 48 8B 41 08           - mov rax,[rcx+08]
Minecraft.Windows.exe+BFAD16: 48 8B 08              - mov rcx,[rax]
Minecraft.Windows.exe+BFAD19: 8B 43 10              - mov eax,[rbx+10]
Minecraft.Windows.exe+BFAD1C: 89 44 24 20           - mov [rsp+20],eax
Minecraft.Windows.exe+BFAD20: 48 8D 54 24 20        - lea rdx,[rsp+20]
Minecraft.Windows.exe+BFAD25: E8 A6 25 04 00        - call Minecraft.Windows.exe+C3D2D0
Minecraft.Windows.exe+BFAD2A: 48 8B F8              - mov rdi,rax
}



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>318</ID>
          <Description>"Force Show Coordinates (1.17.02)"</Description>
          <LastState/>
          <Color>FF0080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-03
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ForceShowCoords,Minecraft.Windows.exe,09 00 00 48 85 C0 74 0D 80 78 04 00 74 07) // should be unique
alloc(newmem,$1000,ForceShowCoords)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [rax+04],1
  je Minecraft.Windows.exe+B4DFD0
  jmp return

ForceShowCoords+08:
  jmp newmem
  nop
return:
registersymbol(ForceShowCoords)

[DISABLE]

ForceShowCoords+08:
  db 80 78 04 00 74 07

unregistersymbol(ForceShowCoords)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+B4DFC3

Minecraft.Windows.exe+B4DF99: 48 8B 48 08                    - mov rcx,[rax+08]
Minecraft.Windows.exe+B4DF9D: 48 B8 A3 8B 2E BA E8 A2 8B 2E  - mov rax,2E8BA2E8BA2E8BA3
Minecraft.Windows.exe+B4DFA7: 48 2B CA                       - sub rcx,rdx
Minecraft.Windows.exe+B4DFAA: 48 C1 F9 04                    - sar rcx,04
Minecraft.Windows.exe+B4DFAE: 48 0F AF C8                    - imul rcx,rax
Minecraft.Windows.exe+B4DFB2: 83 F9 0E                       - cmp ecx,0E
Minecraft.Windows.exe+B4DFB5: 7E 19                          - jle Minecraft.Windows.exe+B4DFD0
Minecraft.Windows.exe+B4DFB7: 48 8D 82 A0 09 00 00           - lea rax,[rdx+000009A0]
Minecraft.Windows.exe+B4DFBE: 48 85 C0                       - test rax,rax
Minecraft.Windows.exe+B4DFC1: 74 0D                          - je Minecraft.Windows.exe+B4DFD0
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+B4DFC3: 80 78 04 00                    - cmp byte ptr [rax+04],00
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+B4DFC7: 74 07                          - je Minecraft.Windows.exe+B4DFD0
Minecraft.Windows.exe+B4DFC9: B0 01                          - mov al,01
Minecraft.Windows.exe+B4DFCB: 48 83 C4 28                    - add rsp,28
Minecraft.Windows.exe+B4DFCF: C3                             - ret 
Minecraft.Windows.exe+B4DFD0: 32 C0                          - xor al,al
Minecraft.Windows.exe+B4DFD2: 48 83 C4 28                    - add rsp,28
Minecraft.Windows.exe+B4DFD6: C3                             - ret 
Minecraft.Windows.exe+B4DFD7: CC                             - int 3 
Minecraft.Windows.exe+B4DFD8: CC                             - int 3 
Minecraft.Windows.exe+B4DFD9: CC                             - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>489</ID>
          <Description>"Force Show Coordinates (1.17.10)"</Description>
          <LastState/>
          <Color>FF0080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-17
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ShowCoordinates,Minecraft.Windows.exe,09 00 00 48 85 C0 74 0D 80 78 04 00 74 07) // should be unique
alloc(newmem,$1000,ShowCoordinates)

label(code)
label(return)

newmem:

code:
  mov [rax+04],1
  je Minecraft.Windows.exe+BACCB0
  jmp return

ShowCoordinates+08:
  jmp newmem
  nop
return:
registersymbol(ShowCoordinates)

[DISABLE]

ShowCoordinates+08:
  db 80 78 04 00 74 07

unregistersymbol(ShowCoordinates)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+BACCA3

Minecraft.Windows.exe+BACC79: 48 8B 48 08                    - mov rcx,[rax+08]
Minecraft.Windows.exe+BACC7D: 48 B8 A3 8B 2E BA E8 A2 8B 2E  - mov rax,2E8BA2E8BA2E8BA3
Minecraft.Windows.exe+BACC87: 48 2B CA                       - sub rcx,rdx
Minecraft.Windows.exe+BACC8A: 48 C1 F9 04                    - sar rcx,04
Minecraft.Windows.exe+BACC8E: 48 0F AF C8                    - imul rcx,rax
Minecraft.Windows.exe+BACC92: 83 F9 0E                       - cmp ecx,0E
Minecraft.Windows.exe+BACC95: 7E 19                          - jle Minecraft.Windows.exe+BACCB0
Minecraft.Windows.exe+BACC97: 48 8D 82 A0 09 00 00           - lea rax,[rdx+000009A0]
Minecraft.Windows.exe+BACC9E: 48 85 C0                       - test rax,rax
Minecraft.Windows.exe+BACCA1: 74 0D                          - je Minecraft.Windows.exe+BACCB0
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+BACCA3: 80 78 04 00                    - cmp byte ptr [rax+04],00
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+BACCA7: 74 07                          - je Minecraft.Windows.exe+BACCB0
Minecraft.Windows.exe+BACCA9: B0 01                          - mov al,01
Minecraft.Windows.exe+BACCAB: 48 83 C4 28                    - add rsp,28
Minecraft.Windows.exe+BACCAF: C3                             - ret 
Minecraft.Windows.exe+BACCB0: 32 C0                          - xor al,al
Minecraft.Windows.exe+BACCB2: 48 83 C4 28                    - add rsp,28
Minecraft.Windows.exe+BACCB6: C3                             - ret 
Minecraft.Windows.exe+BACCB7: CC                             - int 3 
Minecraft.Windows.exe+BACCB8: CC                             - int 3 
Minecraft.Windows.exe+BACCB9: CC                             - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"InvisSee"</Description>
          <LastState/>
          <Color>FF0080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version:
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InvisSee,Minecraft.Windows.exe,0F B6 40 10 C0 E8 05 24 01 C3 32 C0 C3 CC CC CC CC CC) // should be unique
alloc(newmem,$1000,InvisSee)

label(code)
label(return)

newmem:

code:
  mov eax,0
  shr al,05
  jmp return

InvisSee:
  jmp newmem
  nop 2
return:
registersymbol(InvisSee)

[DISABLE]

InvisSee:
  db 0F B6 40 10 C0 E8 05

unregistersymbol(InvisSee)
dealloc(newmem)

{

Minecraft.Windows.exe+1C56FC0: 48 8B 91 80 01 00 00  - mov rdx,[rcx+00000180]
Minecraft.Windows.exe+1C56FC7: 48 8B 81 88 01 00 00  - mov rax,[rcx+00000188]
Minecraft.Windows.exe+1C56FCE: 33 C9                 - xor ecx,ecx
Minecraft.Windows.exe+1C56FD0: 48 2B C2              - sub rax,rdx
Minecraft.Windows.exe+1C56FD3: 48 C1 F8 03           - sar rax,03
Minecraft.Windows.exe+1C56FD7: 66 3B C8              - cmp cx,ax
Minecraft.Windows.exe+1C56FDA: 73 12                 - jae Minecraft.Windows.exe+1C56FEE
Minecraft.Windows.exe+1C56FDC: 48 8B 02              - mov rax,[rdx]
Minecraft.Windows.exe+1C56FDF: 48 85 C0              - test rax,rax
Minecraft.Windows.exe+1C56FE2: 74 0A                 - je Minecraft.Windows.exe+1C56FEE
// ---------- InvisSeeING HERE ----------
Minecraft.Windows.exe+1C56FE4: 0F B6 40 10           - movzx eax,byte ptr [rax+10]
// ---------- DONE InvisSeeING  ----------
Minecraft.Windows.exe+1C56FE8: C0 E8 05              - shr al,05
Minecraft.Windows.exe+1C56FEB: 24 01                 - and al,01
Minecraft.Windows.exe+1C56FED: C3                    - ret
Minecraft.Windows.exe+1C56FEE: 32 C0                 - xor al,al
Minecraft.Windows.exe+1C56FF0: C3                    - ret
Minecraft.Windows.exe+1C56FF1: CC                    - int 3
Minecraft.Windows.exe+1C56FF2: CC                    - int 3
Minecraft.Windows.exe+1C56FF3: CC                    - int 3
Minecraft.Windows.exe+1C56FF4: CC                    - int 3
Minecraft.Windows.exe+1C56FF5: CC                    - int 3
}
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>18</Key>
                <Key>98</Key>
              </Keys>
              <ID>0</ID>
              <ActivateSound TTS="EN">{MRDescription} Activated</ActivateSound>
              <DeactivateSound TTS="EN">{MRDescription} Deactivated</DeactivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>410</ID>
      <Description>"Old Versions"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <ShowAsSigned>0</ShowAsSigned>
      <GroupHeader>1</GroupHeader>
      <Address>v1</Address>
      <CheatEntries>
        <CheatEntry>
          <ID>353</ID>
          <Description>"Combat"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
          <Address>v1</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>354</ID>
              <Description>"Hitbox"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>0000FF</Color>
              <GroupHeader>1</GroupHeader>
              <Address>.220-.221</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>355</ID>
                  <Description>"Hitbox Width 2X"</Description>
                  <LastState/>
                  <Color>0000FF</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(HitboxWidth,Minecraft.Windows.exe,CC F3 0F 10 81 BC 04 00 00 C3) // should be unique
alloc(newmem,$1000,HitboxWidth)

label(code)
label(return)

newmem:
mov [rcx+000004BC],(float)2
jmp code
code:
  movss xmm0,[rcx+000004BC]
  jmp return

HitboxWidth+01:
  jmp newmem
  nop 3
return:
registersymbol(HitboxWidth)

[DISABLE]

HitboxWidth+01:
  db F3 0F 10 81 BC 04 00 00

unregistersymbol(HitboxWidth)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1941630

Minecraft.Windows.exe+1941626: CC                       - int 3 
Minecraft.Windows.exe+1941627: CC                       - int 3 
Minecraft.Windows.exe+1941628: CC                       - int 3 
Minecraft.Windows.exe+1941629: CC                       - int 3 
Minecraft.Windows.exe+194162A: CC                       - int 3 
Minecraft.Windows.exe+194162B: CC                       - int 3 
Minecraft.Windows.exe+194162C: CC                       - int 3 
Minecraft.Windows.exe+194162D: CC                       - int 3 
Minecraft.Windows.exe+194162E: CC                       - int 3 
Minecraft.Windows.exe+194162F: CC                       - int 3 
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1941630: F3 0F 10 81 BC 04 00 00  - movss xmm0,[rcx+000004BC]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1941638: C3                       - ret 
Minecraft.Windows.exe+1941639: CC                       - int 3 
Minecraft.Windows.exe+194163A: CC                       - int 3 
Minecraft.Windows.exe+194163B: CC                       - int 3 
Minecraft.Windows.exe+194163C: CC                       - int 3 
Minecraft.Windows.exe+194163D: CC                       - int 3 
Minecraft.Windows.exe+194163E: CC                       - int 3 
Minecraft.Windows.exe+194163F: CC                       - int 3 
Minecraft.Windows.exe+1941640: 48 89 5C 24 08           - mov [rsp+08],rbx
Minecraft.Windows.exe+1941645: 57                       - push rdi
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>356</ID>
                  <Description>"Hitbox Width Test"</Description>
                  <LastState/>
                  <Color>0000FF</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(HitboxWidth,Minecraft.Windows.exe,CC F3 0F 10 81 BC 04 00 00 C3) // should be unique
alloc(newmem,$1000,HitboxWidth)

label(code)
label(return)

newmem:
mov [rcx+000004BC],(float)4
jmp code
code:
  movss xmm0,[rcx+000004BC]
  jmp return

HitboxWidth+01:
  jmp newmem
  nop 3
return:
registersymbol(HitboxWidth)

[DISABLE]

HitboxWidth+01:
  db F3 0F 10 81 BC 04 00 00

unregistersymbol(HitboxWidth)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1941630

Minecraft.Windows.exe+1941626: CC                       - int 3 
Minecraft.Windows.exe+1941627: CC                       - int 3 
Minecraft.Windows.exe+1941628: CC                       - int 3 
Minecraft.Windows.exe+1941629: CC                       - int 3 
Minecraft.Windows.exe+194162A: CC                       - int 3 
Minecraft.Windows.exe+194162B: CC                       - int 3 
Minecraft.Windows.exe+194162C: CC                       - int 3 
Minecraft.Windows.exe+194162D: CC                       - int 3 
Minecraft.Windows.exe+194162E: CC                       - int 3 
Minecraft.Windows.exe+194162F: CC                       - int 3 
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1941630: F3 0F 10 81 BC 04 00 00  - movss xmm0,[rcx+000004BC]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1941638: C3                       - ret 
Minecraft.Windows.exe+1941639: CC                       - int 3 
Minecraft.Windows.exe+194163A: CC                       - int 3 
Minecraft.Windows.exe+194163B: CC                       - int 3 
Minecraft.Windows.exe+194163C: CC                       - int 3 
Minecraft.Windows.exe+194163D: CC                       - int 3 
Minecraft.Windows.exe+194163E: CC                       - int 3 
Minecraft.Windows.exe+194163F: CC                       - int 3 
Minecraft.Windows.exe+1941640: 48 89 5C 24 08           - mov [rsp+08],rbx
Minecraft.Windows.exe+1941645: 57                       - push rdi
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>357</ID>
                  <Description>"Player Hitbox Width 2X"</Description>
                  <LastState/>
                  <Color>0000FF</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(PlayerHitboxWidth,Minecraft.Windows.exe,CC F3 0F 10 81 BC 04 00 00 C3) // should be unique
alloc(newmem,$1000,PlayerHitboxWidth)

label(code)
label(return)

newmem:
movss xmm0,[rcx+000004BC]
jmp code

code:
  mov [rcx+000004BC],(float)2
  jmp return

PlayerHitboxWidth+01:
  jmp newmem
  nop 3
return:
registersymbol(PlayerHitboxWidth)

[DISABLE]

PlayerHitboxWidth+01:
  db F3 0F 10 81 BC 04 00 00

unregistersymbol(PlayerHitboxWidth)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1941630

Minecraft.Windows.exe+1941626: CC                       - int 3 
Minecraft.Windows.exe+1941627: CC                       - int 3 
Minecraft.Windows.exe+1941628: CC                       - int 3 
Minecraft.Windows.exe+1941629: CC                       - int 3 
Minecraft.Windows.exe+194162A: CC                       - int 3 
Minecraft.Windows.exe+194162B: CC                       - int 3 
Minecraft.Windows.exe+194162C: CC                       - int 3 
Minecraft.Windows.exe+194162D: CC                       - int 3 
Minecraft.Windows.exe+194162E: CC                       - int 3 
Minecraft.Windows.exe+194162F: CC                       - int 3 
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1941630: F3 0F 10 81 BC 04 00 00  - movss xmm0,[rcx+000004BC]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1941638: C3                       - ret 
Minecraft.Windows.exe+1941639: CC                       - int 3 
Minecraft.Windows.exe+194163A: CC                       - int 3 
Minecraft.Windows.exe+194163B: CC                       - int 3 
Minecraft.Windows.exe+194163C: CC                       - int 3 
Minecraft.Windows.exe+194163D: CC                       - int 3 
Minecraft.Windows.exe+194163E: CC                       - int 3 
Minecraft.Windows.exe+194163F: CC                       - int 3 
Minecraft.Windows.exe+1941640: 48 89 5C 24 08           - mov [rsp+08],rbx
Minecraft.Windows.exe+1941645: 57                       - push rdi
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>358</ID>
                  <Description>"Hitbox Width Reset"</Description>
                  <LastState/>
                  <Color>0000FF</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(HitboxWidth,Minecraft.Windows.exe,CC F3 0F 10 81 BC 04 00 00 C3) // should be unique
alloc(newmem,$1000,HitboxWidth)

label(code)
label(return)

newmem:
mov [rcx+000004BC],(float)0.6
jmp code
code:
  movss xmm0,[rcx+000004BC]
  jmp return

HitboxWidth+01:
  jmp newmem
  nop 3
return:
registersymbol(HitboxWidth)

[DISABLE]

HitboxWidth+01:
  db F3 0F 10 81 BC 04 00 00

unregistersymbol(HitboxWidth)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1941630

Minecraft.Windows.exe+1941626: CC                       - int 3 
Minecraft.Windows.exe+1941627: CC                       - int 3 
Minecraft.Windows.exe+1941628: CC                       - int 3 
Minecraft.Windows.exe+1941629: CC                       - int 3 
Minecraft.Windows.exe+194162A: CC                       - int 3 
Minecraft.Windows.exe+194162B: CC                       - int 3 
Minecraft.Windows.exe+194162C: CC                       - int 3 
Minecraft.Windows.exe+194162D: CC                       - int 3 
Minecraft.Windows.exe+194162E: CC                       - int 3 
Minecraft.Windows.exe+194162F: CC                       - int 3 
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1941630: F3 0F 10 81 BC 04 00 00  - movss xmm0,[rcx+000004BC]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1941638: C3                       - ret 
Minecraft.Windows.exe+1941639: CC                       - int 3 
Minecraft.Windows.exe+194163A: CC                       - int 3 
Minecraft.Windows.exe+194163B: CC                       - int 3 
Minecraft.Windows.exe+194163C: CC                       - int 3 
Minecraft.Windows.exe+194163D: CC                       - int 3 
Minecraft.Windows.exe+194163E: CC                       - int 3 
Minecraft.Windows.exe+194163F: CC                       - int 3 
Minecraft.Windows.exe+1941640: 48 89 5C 24 08           - mov [rsp+08],rbx
Minecraft.Windows.exe+1941645: 57                       - push rdi
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>359</ID>
                  <Description>"Hitbox 2X (1.17)"</Description>
                  <LastState/>
                  <Color>0000FF</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-08
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Hitbox,Minecraft.Windows.exe,CC F3 0F 10 81 EC 04 00 00 C3) // should be unique
alloc(newmem,$1000,Hitbox)

label(code)
label(return)

newmem:
movss xmm0,[rcx+000004EC]
jmp code

code:
  mov [rcx+000004EC],(float)2
  jmp return

Hitbox+01:
  jmp newmem
  nop 3
return:
registersymbol(Hitbox)

[DISABLE]

Hitbox+01:
  db F3 0F 10 81 EC 04 00 00

unregistersymbol(Hitbox)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1C51790

Minecraft.Windows.exe+1C51786: CC                       - int 3 
Minecraft.Windows.exe+1C51787: CC                       - int 3 
Minecraft.Windows.exe+1C51788: CC                       - int 3 
Minecraft.Windows.exe+1C51789: CC                       - int 3 
Minecraft.Windows.exe+1C5178A: CC                       - int 3 
Minecraft.Windows.exe+1C5178B: CC                       - int 3 
Minecraft.Windows.exe+1C5178C: CC                       - int 3 
Minecraft.Windows.exe+1C5178D: CC                       - int 3 
Minecraft.Windows.exe+1C5178E: CC                       - int 3 
WaterSpeed: CC                       - int 3 
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1C51790: F3 0F 10 81 EC 04 00 00  - movss xmm0,[rcx+000004EC]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1C51798: C3                       - ret 
Minecraft.Windows.exe+1C51799: CC                       - int 3 
Minecraft.Windows.exe+1C5179A: CC                       - int 3 
Minecraft.Windows.exe+1C5179B: CC                       - int 3 
Minecraft.Windows.exe+1C5179C: CC                       - int 3 
Minecraft.Windows.exe+1C5179D: CC                       - int 3 
Minecraft.Windows.exe+1C5179E: CC                       - int 3 
Minecraft.Windows.exe+1C5179F: CC                       - int 3 
Minecraft.Windows.exe+1C517A0: 48 89 5C 24 08           - mov [rsp+08],rbx
Minecraft.Windows.exe+1C517A5: 57                       - push rdi
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>360</ID>
              <Description>"Rapid Hit(.220)"</Description>
              <LastState/>
              <Color>0000FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-25
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(RapidHit,Minecraft.Windows.exe,80 7B 50 00 74 73) // should be unique
alloc(newmem,$1000,RapidHit)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [rbx+50],01
  je Minecraft.Windows.exe+128FA24
  jmp return

RapidHit:
  jmp newmem
  nop
return:
registersymbol(RapidHit)

[DISABLE]

RapidHit:
  db 80 7B 50 00 74 73

unregistersymbol(RapidHit)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+128F9AB

Minecraft.Windows.exe+128F986: 48 8B 01              - mov rax,[rcx]
Minecraft.Windows.exe+128F989: 48 8D 55 D8           - lea rdx,[rbp-28]
Minecraft.Windows.exe+128F98D: FF 50 48              - call qword ptr [rax+48]
Minecraft.Windows.exe+128F990: 85 C0                 - test eax,eax
Minecraft.Windows.exe+128F992: 0F 88 0C 05 00 00     - js Minecraft.Windows.exe+128FEA4
Minecraft.Windows.exe+128F998: 44 39 7D D8           - cmp [rbp-28],r15d
Minecraft.Windows.exe+128F99C: 74 06                 - je Minecraft.Windows.exe+128F9A4
Minecraft.Windows.exe+128F99E: 41 8B FE              - mov edi,r14d
Minecraft.Windows.exe+128F9A1: 45 8B F4              - mov r14d,r12d
Minecraft.Windows.exe+128F9A4: 48 8D 35 9D 90 40 02  - lea rsi,[Minecraft.Windows.exe+3698A48]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+128F9AB: 80 7B 50 00           - cmp byte ptr [rbx+50],00
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+128F9AF: 74 73                 - je Minecraft.Windows.exe+128FA24
Minecraft.Windows.exe+128F9B1: 85 FF                 - test edi,edi
Minecraft.Windows.exe+128F9B3: 0F 85 D9 00 00 00     - jne Minecraft.Windows.exe+128FA92
Minecraft.Windows.exe+128F9B9: 40 88 7B 50           - mov [rbx+50],dil
Minecraft.Windows.exe+128F9BD: 48 8B 7B 20           - mov rdi,[rbx+20]
Minecraft.Windows.exe+128F9C1: E8 CA 81 2B FF        - call Minecraft.Windows.exe+547B90
Minecraft.Windows.exe+128F9C6: 48 8B 08              - mov rcx,[rax]
Minecraft.Windows.exe+128F9C9: 4C 8B 41 08           - mov r8,[rcx+08]
Minecraft.Windows.exe+128F9CD: BA 20 00 00 00        - mov edx,00000020
Minecraft.Windows.exe+128F9D2: 48 8B C8              - mov rcx,rax
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>361</ID>
              <Description>"RapidHit(.221)"</Description>
              <LastState/>
              <Color>0000FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-27
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(RapidHit,Minecraft.Windows.exe,80 7B 50 00 74 73) // should be unique
alloc(newmem,$1000,RapidHit)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [rbx+50],01
  je Minecraft.Windows.exe+128FA34
  jmp return

RapidHit:
  jmp newmem
  nop
return:
registersymbol(RapidHit)

[DISABLE]

RapidHit:
  db 80 7B 50 00 74 73

unregistersymbol(RapidHit)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: RapidHit

Minecraft.Windows.exe+128F996: 48 8B 01              - mov rax,[rcx]
Minecraft.Windows.exe+128F999: 48 8D 55 D8           - lea rdx,[rbp-28]
Minecraft.Windows.exe+128F99D: FF 50 48              - call qword ptr [rax+48]
Minecraft.Windows.exe+128F9A0: 85 C0                 - test eax,eax
Minecraft.Windows.exe+128F9A2: 0F 88 0C 05 00 00     - js Minecraft.Windows.exe+128FEB4
Minecraft.Windows.exe+128F9A8: 44 39 7D D8           - cmp [rbp-28],r15d
Minecraft.Windows.exe+128F9AC: 74 06                 - je Minecraft.Windows.exe+128F9B4
Minecraft.Windows.exe+128F9AE: 41 8B FE              - mov edi,r14d
Minecraft.Windows.exe+128F9B1: 45 8B F4              - mov r14d,r12d
Minecraft.Windows.exe+128F9B4: 48 8D 35 8D 90 40 02  - lea rsi,[Minecraft.Windows.exe+3698A48]
// ---------- INJECTING HERE ----------
RapidHit: 80 7B 50 00           - cmp byte ptr [rbx+50],00
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+128F9BF: 74 73                 - je Minecraft.Windows.exe+128FA34
Minecraft.Windows.exe+128F9C1: 85 FF                 - test edi,edi
Minecraft.Windows.exe+128F9C3: 0F 85 D9 00 00 00     - jne Minecraft.Windows.exe+128FAA2
Minecraft.Windows.exe+128F9C9: 40 88 7B 50           - mov [rbx+50],dil
Minecraft.Windows.exe+128F9CD: 48 8B 7B 20           - mov rdi,[rbx+20]
Minecraft.Windows.exe+128F9D1: E8 BA 81 2B FF        - call Minecraft.Windows.exe+547B90
Minecraft.Windows.exe+128F9D6: 48 8B 08              - mov rcx,[rax]
Minecraft.Windows.exe+128F9D9: 4C 8B 41 08           - mov r8,[rcx+08]
Minecraft.Windows.exe+128F9DD: BA 20 00 00 00        - mov edx,00000020
Minecraft.Windows.exe+128F9E2: 48 8B C8              - mov rcx,rax
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>362</ID>
              <Description>"RapidHit (1.17)"</Description>
              <LastState/>
              <Color>0000FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-08
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(RapidHit,Minecraft.Windows.exe,80 7B 50 00 74 73) // should be unique
alloc(newmem,$1000,RapidHit)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [rbx+50],01
  je Minecraft.Windows.exe+1433CF4
  jmp return

RapidHit:
  jmp newmem
  nop
return:
registersymbol(RapidHit)

[DISABLE]

RapidHit:
  db 80 7B 50 00 74 73

unregistersymbol(RapidHit)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1433C7B

Minecraft.Windows.exe+1433C56: 48 8B 01              - mov rax,[rcx]
Minecraft.Windows.exe+1433C59: 48 8D 55 D8           - lea rdx,[rbp-28]
Minecraft.Windows.exe+1433C5D: FF 50 48              - call qword ptr [rax+48]
Minecraft.Windows.exe+1433C60: 85 C0                 - test eax,eax
Minecraft.Windows.exe+1433C62: 0F 88 0C 05 00 00     - js Minecraft.Windows.exe+1434174
Minecraft.Windows.exe+1433C68: 44 39 7D D8           - cmp [rbp-28],r15d
Minecraft.Windows.exe+1433C6C: 74 06                 - je Minecraft.Windows.exe+1433C74
Minecraft.Windows.exe+1433C6E: 41 8B FE              - mov edi,r14d
Minecraft.Windows.exe+1433C71: 45 8B F4              - mov r14d,r12d
Minecraft.Windows.exe+1433C74: 48 8D 35 E5 F3 84 02  - lea rsi,[Minecraft.Windows.exe+3C83060]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1433C7B: 80 7B 50 00           - cmp byte ptr [rbx+50],00
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1433C7F: 74 73                 - je Minecraft.Windows.exe+1433CF4
Minecraft.Windows.exe+1433C81: 85 FF                 - test edi,edi
Minecraft.Windows.exe+1433C83: 0F 85 D9 00 00 00     - jne Minecraft.Windows.exe+1433D62
Minecraft.Windows.exe+1433C89: 40 88 7B 50           - mov [rbx+50],dil
Minecraft.Windows.exe+1433C8D: 48 8B 7B 20           - mov rdi,[rbx+20]
Minecraft.Windows.exe+1433C91: E8 6A 02 26 FF        - call Minecraft.Windows.exe+693F00
Minecraft.Windows.exe+1433C96: 48 8B 08              - mov rcx,[rax]
Minecraft.Windows.exe+1433C99: 4C 8B 41 08           - mov r8,[rcx+08]
Minecraft.Windows.exe+1433C9D: BA 20 00 00 00        - mov edx,00000020
Minecraft.Windows.exe+1433CA2: 48 8B C8              - mov rcx,rax
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>363</ID>
              <Description>"Reach(.220)"</Description>
              <Options moHideChildren="1"/>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>Minecraft.Windows.exe+2FED0E8</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>364</ID>
                  <Description>"Reset Reach"</Description>
                  <VariableType>Float</VariableType>
                  <Address>Minecraft.Windows.exe+2FED0E8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>365</ID>
              <Description>"Reach(.221)"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>Minecraft.Windows.exe+2FED138</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>366</ID>
              <Description>"Reach (1.17)"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>Minecraft.Windows.exe+3500E98</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>367</ID>
              <Description>"Reach (1.17.02)"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>Minecraft.Windows.exe+3500ED0</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>369</ID>
          <Description>"Movement"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8000</Color>
          <GroupHeader>1</GroupHeader>
          <Address>v1</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>370</ID>
              <Description>"NoFall(Umm)"</Description>
              <LastState/>
              <Color>FF8000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(NoFall,Minecraft.Windows.exe,00 00 40 40 DB 0F) // should be unique
alloc(newmem,$1000,NoFall)

label(code)
label(return)

newmem:

code:
  add [rax],al
  inc eax
  fisttp dword ptr [rdi]
  jmp return

NoFall:
  jmp newmem
  nop
return:
registersymbol(NoFall)

[DISABLE]

NoFall:
  db 00 00 40 40 DB 0F

unregistersymbol(NoFall)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+2FED0E8

Minecraft.Windows.exe+2FED0D7: 40 B3 58           - mov bl,58
Minecraft.Windows.exe+2FED0DA: 37                 - aaa 
Minecraft.Windows.exe+2FED0DB: 40 00 00           - add [rax],al
Minecraft.Windows.exe+2FED0DE: 00 00              - add [rax],al
Minecraft.Windows.exe+2FED0E0: 00 00              - add [rax],al
Minecraft.Windows.exe+2FED0E2: 00 00              - add [rax],al
Minecraft.Windows.exe+2FED0E4: 00 00              - add [rax],al
Minecraft.Windows.exe+2FED0E6: 3E 40              - db 3E 40 
Minecraft.Windows.exe+2FED0E8: 00 00              - add [rax],al
Minecraft.Windows.exe+2FED0EA: 40 40              - inc eax
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+2FED0EC: DB 0F              - fisttp dword ptr [rdi]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+2FED0EE: 49 40              - inc r8
Minecraft.Windows.exe+2FED0F0: 00 00              - add [rax],al
Minecraft.Windows.exe+2FED0F2: 00 00              - add [rax],al
Minecraft.Windows.exe+2FED0F4: 00 80 4A 40 26 CF  - add [rax-30D9BFB6],al
Minecraft.Windows.exe+2FED0FA: 03 0D DC A5 4C 40  - add ecx,[7FF7954276DC]
Minecraft.Windows.exe+2FED100: 66 66 66 66 66 A6  - cmpsb 
Minecraft.Windows.exe+2FED106: 4C 40              - inc rax
Minecraft.Windows.exe+2FED108: CD CC              - int -34
Minecraft.Windows.exe+2FED10A: 4C 40              - inc rax
Minecraft.Windows.exe+2FED10C: 00 00              - add [rax],al
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>371</ID>
              <Description>"Always Fly (.221)"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>FF8000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AlwaysFly,Minecraft.Windows.exe,80 B8 28 09 00 00 00 75 2A) // should be unique
alloc(newmem,$1000,AlwaysFly)

label(code)
label(return)

newmem:

code:
  mov [rax+00000928],1
  jmp return

AlwaysFly:
  jmp newmem
  nop 2
return:
registersymbol(AlwaysFly)

[DISABLE]

AlwaysFly:
  db 80 B8 28 09 00 00 00

unregistersymbol(AlwaysFly)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+11501AA

Minecraft.Windows.exe+115017B: 0F 8F 4A 08 00 00     - jg Minecraft.Windows.exe+11509CB
Minecraft.Windows.exe+1150181: C6 43 11 01           - mov byte ptr [rbx+11],01
Minecraft.Windows.exe+1150185: 48 8B 83 10 03 00 00  - mov rax,[rbx+00000310]
Minecraft.Windows.exe+115018C: 48 8B 88 48 03 00 00  - mov rcx,[rax+00000348]
Minecraft.Windows.exe+1150193: 48 8B 01              - mov rax,[rcx]
Minecraft.Windows.exe+1150196: FF 90 C0 00 00 00     - call qword ptr [rax+000000C0]
Minecraft.Windows.exe+115019C: 48 85 C0              - test rax,rax
Minecraft.Windows.exe+115019F: 74 3C                 - je Minecraft.Windows.exe+11501DD
Minecraft.Windows.exe+11501A1: 80 B8 24 09 00 00 01  - cmp byte ptr [rax+00000924],01
Minecraft.Windows.exe+11501A8: 74 09                 - je Minecraft.Windows.exe+11501B3
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+11501AA: 80 B8 28 09 00 00 00  - cmp byte ptr [rax+00000928],00
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+11501B1: 75 2A                 - jne Minecraft.Windows.exe+11501DD
Minecraft.Windows.exe+11501B3: 80 B8 84 09 00 00 01  - cmp byte ptr [rax+00000984],01
Minecraft.Windows.exe+11501BA: 74 09                 - je Minecraft.Windows.exe+11501C5
Minecraft.Windows.exe+11501BC: 80 B8 88 09 00 00 00  - cmp byte ptr [rax+00000988],00
Minecraft.Windows.exe+11501C3: 75 18                 - jne Minecraft.Windows.exe+11501DD
Minecraft.Windows.exe+11501C5: 80 B8 C0 01 00 00 00  - cmp byte ptr [rax+000001C0],00
Minecraft.Windows.exe+11501CC: 75 0F                 - jne Minecraft.Windows.exe+11501DD
Minecraft.Windows.exe+11501CE: 48 8B C8              - mov rcx,rax
Minecraft.Windows.exe+11501D1: E8 1A 92 7F 00        - call Minecraft.Windows.exe+19493F0
Minecraft.Windows.exe+11501D6: 84 C0                 - test al,al
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>372</ID>
              <Description>"Always Fly Stop"</Description>
              <LastState/>
              <Color>FF8000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AlwaysFly,Minecraft.Windows.exe,80 B8 28 09 00 00 00 75 2A) // should be unique
alloc(newmem,$1000,AlwaysFly)

label(code)
label(return)

newmem:

code:
  mov [rax+00000928],0
  jmp return

AlwaysFly:
  jmp newmem
  nop 2
return:
registersymbol(AlwaysFly)

[DISABLE]

AlwaysFly:
  db 80 B8 28 09 00 00 00

unregistersymbol(AlwaysFly)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+11501AA

Minecraft.Windows.exe+115017B: 0F 8F 4A 08 00 00     - jg Minecraft.Windows.exe+11509CB
Minecraft.Windows.exe+1150181: C6 43 11 01           - mov byte ptr [rbx+11],01
Minecraft.Windows.exe+1150185: 48 8B 83 10 03 00 00  - mov rax,[rbx+00000310]
Minecraft.Windows.exe+115018C: 48 8B 88 48 03 00 00  - mov rcx,[rax+00000348]
Minecraft.Windows.exe+1150193: 48 8B 01              - mov rax,[rcx]
Minecraft.Windows.exe+1150196: FF 90 C0 00 00 00     - call qword ptr [rax+000000C0]
Minecraft.Windows.exe+115019C: 48 85 C0              - test rax,rax
Minecraft.Windows.exe+115019F: 74 3C                 - je Minecraft.Windows.exe+11501DD
Minecraft.Windows.exe+11501A1: 80 B8 24 09 00 00 01  - cmp byte ptr [rax+00000924],01
Minecraft.Windows.exe+11501A8: 74 09                 - je Minecraft.Windows.exe+11501B3
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+11501AA: 80 B8 28 09 00 00 00  - cmp byte ptr [rax+00000928],00
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+11501B1: 75 2A                 - jne Minecraft.Windows.exe+11501DD
Minecraft.Windows.exe+11501B3: 80 B8 84 09 00 00 01  - cmp byte ptr [rax+00000984],01
Minecraft.Windows.exe+11501BA: 74 09                 - je Minecraft.Windows.exe+11501C5
Minecraft.Windows.exe+11501BC: 80 B8 88 09 00 00 00  - cmp byte ptr [rax+00000988],00
Minecraft.Windows.exe+11501C3: 75 18                 - jne Minecraft.Windows.exe+11501DD
Minecraft.Windows.exe+11501C5: 80 B8 C0 01 00 00 00  - cmp byte ptr [rax+000001C0],00
Minecraft.Windows.exe+11501CC: 75 0F                 - jne Minecraft.Windows.exe+11501DD
Minecraft.Windows.exe+11501CE: 48 8B C8              - mov rcx,rax
Minecraft.Windows.exe+11501D1: E8 1A 92 7F 00        - call Minecraft.Windows.exe+19493F0
Minecraft.Windows.exe+11501D6: 84 C0                 - test al,al
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>373</ID>
              <Description>"AlwaysFlyJetpack (1.17)"</Description>
              <LastState/>
              <Color>FF8000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe (paused)
  Version: 
  Date   : 2021-06-11
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AlwaysFly,Minecraft.Windows.exe,80 B8 C0 09 00 00 00 75 12 80 B8 1C 0A 00 00 01 74 0C) // should be unique
alloc(newmem,$1000,AlwaysFly)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [rax+000009C0],01
  jmp return

AlwaysFly:
  jmp newmem
  nop 2
return:
registersymbol(AlwaysFly)

[DISABLE]

AlwaysFly:
  db 80 B8 C0 09 00 00 00

unregistersymbol(AlwaysFly)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1050ADD

Minecraft.Windows.exe+1050AC9: CC                    - int 3 
Minecraft.Windows.exe+1050ACA: CC                    - int 3 
Minecraft.Windows.exe+1050ACB: CC                    - int 3 
Minecraft.Windows.exe+1050ACC: CC                    - int 3 
Minecraft.Windows.exe+1050ACD: CC                    - int 3 
Minecraft.Windows.exe+1050ACE: CC                    - int 3 
Minecraft.Windows.exe+1050ACF: CC                    - int 3 
Minecraft.Windows.exe+1050AD0: 48 8B 41 10           - mov rax,[rcx+10]
Minecraft.Windows.exe+1050AD4: 80 B8 BC 09 00 00 01  - cmp byte ptr [rax+000009BC],01
Minecraft.Windows.exe+1050ADB: 74 09                 - je Minecraft.Windows.exe+1050AE6
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1050ADD: 80 B8 C0 09 00 00 00  - cmp byte ptr [rax+000009C0],00
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1050AE4: 75 12                 - jne Minecraft.Windows.exe+1050AF8
Minecraft.Windows.exe+1050AE6: 80 B8 1C 0A 00 00 01  - cmp byte ptr [rax+00000A1C],01
Minecraft.Windows.exe+1050AED: 74 0C                 - je Minecraft.Windows.exe+1050AFB
Minecraft.Windows.exe+1050AEF: 80 B8 20 0A 00 00 00  - cmp byte ptr [rax+00000A20],00
Minecraft.Windows.exe+1050AF6: 74 03                 - je Minecraft.Windows.exe+1050AFB
Minecraft.Windows.exe+1050AF8: B0 01                 - mov al,01
Minecraft.Windows.exe+1050AFA: C3                    - ret 
Minecraft.Windows.exe+1050AFB: 32 C0                 - xor al,al
Minecraft.Windows.exe+1050AFD: C3                    - ret 
Minecraft.Windows.exe+1050AFE: CC                    - int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>374</ID>
              <Description>"Always Fly (1.17)"</Description>
              <LastState/>
              <Color>FF8000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-20
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Fly,Minecraft.Windows.exe,40 38 A8 C0 09 00 00) // should be unique
alloc(newmem,$1000,Fly)

label(code)
label(return)

newmem:

code:
  mov [rax+000009C0],1
  jmp return

Fly:
  jmp newmem
  nop 2
return:
registersymbol(Fly)

[DISABLE]

Fly:
  db 40 38 A8 C0 09 00 00

unregistersymbol(Fly)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+B0C77C

Minecraft.Windows.exe+B0C74D: FF 90 C8 00 00 00        - call qword ptr [rax+000000C8]
Minecraft.Windows.exe+B0C753: F3 0F 10 35 ED 47 9F 02  - movss xmm6,[Minecraft.Windows.exe+3500F48]
Minecraft.Windows.exe+B0C75B: 40 32 ED                 - xor bpl,bpl
Minecraft.Windows.exe+B0C75E: 48 8B F8                 - mov rdi,rax
Minecraft.Windows.exe+B0C761: 48 85 C0                 - test rax,rax
Minecraft.Windows.exe+B0C764: 0F 84 EC 01 00 00        - je Minecraft.Windows.exe+B0C956
Minecraft.Windows.exe+B0C76A: F6 80 7C 01 00 00 01     - test byte ptr [rax+0000017C],01
Minecraft.Windows.exe+B0C771: 74 3A                    - je Minecraft.Windows.exe+B0C7AD
Minecraft.Windows.exe+B0C773: 80 B8 BC 09 00 00 01     - cmp byte ptr [rax+000009BC],01
Minecraft.Windows.exe+B0C77A: 74 09                    - je Minecraft.Windows.exe+B0C785
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+B0C77C: 40 38 A8 C0 09 00 00     - cmp [rax+000009C0],bpl
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+B0C783: 75 12                    - jne Minecraft.Windows.exe+B0C797
Minecraft.Windows.exe+B0C785: 80 B8 1C 0A 00 00 01     - cmp byte ptr [rax+00000A1C],01
Minecraft.Windows.exe+B0C78C: 74 0C                    - je Minecraft.Windows.exe+B0C79A
Minecraft.Windows.exe+B0C78E: 40 38 A8 20 0A 00 00     - cmp [rax+00000A20],bpl
Minecraft.Windows.exe+B0C795: 74 03                    - je Minecraft.Windows.exe+B0C79A
Minecraft.Windows.exe+B0C797: 40 B5 01                 - mov bpl,01
Minecraft.Windows.exe+B0C79A: 48 8B CF                 - mov rcx,rdi
Minecraft.Windows.exe+B0C79D: E8 4E 71 24 01           - call Minecraft.Windows.exe+1D538F0
Minecraft.Windows.exe+B0C7A2: 0F 28 F0                 - movaps xmm6,xmm0
Minecraft.Windows.exe+B0C7A5: F3 0F 59 35 6B 48 9F 02  - mulss xmm6,[Minecraft.Windows.exe+3501018]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>375</ID>
              <Description>"Always Fly V2 (1.17)"</Description>
              <LastState/>
              <Color>FF8000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-20
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,Minecraft.Windows.exe,0F B6 40 04 C3 CC CC CC CC CC CC CC CC CC 4C) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov [rax+04],1
  ret 
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 0F B6 40 04 C3

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1050DC2

Minecraft.Windows.exe+1050DA1: 48 0F BF C2           - movsx rax,dx
Minecraft.Windows.exe+1050DA5: 48 8D 04 40           - lea rax,[rax+rax*2]
Minecraft.Windows.exe+1050DA9: 48 8D 40 02           - lea rax,[rax+02]
Minecraft.Windows.exe+1050DAD: 49 8D 04 80           - lea rax,[r8+rax*4]
Minecraft.Windows.exe+1050DB1: EB 07                 - jmp Minecraft.Windows.exe+1050DBA
Minecraft.Windows.exe+1050DB3: 49 8D 80 40 01 00 00  - lea rax,[r8+00000140]
Minecraft.Windows.exe+1050DBA: 80 38 01              - cmp byte ptr [rax],01
Minecraft.Windows.exe+1050DBD: 75 03                 - jne Minecraft.Windows.exe+1050DC2
Minecraft.Windows.exe+1050DBF: 32 C0                 - xor al,al
Minecraft.Windows.exe+1050DC1: C3                    - ret 
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1050DC2: 0F B6 40 04           - movzx eax,byte ptr [rax+04]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1050DC6: C3                    - ret 
Minecraft.Windows.exe+1050DC7: CC                    - int 3 
Minecraft.Windows.exe+1050DC8: CC                    - int 3 
Minecraft.Windows.exe+1050DC9: CC                    - int 3 
Minecraft.Windows.exe+1050DCA: CC                    - int 3 
Minecraft.Windows.exe+1050DCB: CC                    - int 3 
Minecraft.Windows.exe+1050DCC: CC                    - int 3 
Minecraft.Windows.exe+1050DCD: CC                    - int 3 
Minecraft.Windows.exe+1050DCE: CC                    - int 3 
Minecraft.Windows.exe+1050DCF: CC                    - int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>376</ID>
              <Description>"Speed"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8000</Color>
              <GroupHeader>1</GroupHeader>
              <Address>v1</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>377</ID>
                  <Description>"Speed"</Description>
                  <LastState/>
                  <Color>FF8000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Speed,Minecraft.Windows.exe,F3 0F 10 B9 84 00 00 00) // should be unique
alloc(newmem,$1000,Speed)

label(code)
label(return)

newmem:

code:
  mov [rcx+00000084],(Float)1.4
  jmp return

Speed:
  jmp newmem
  nop 3
return:
registersymbol(Speed)

[DISABLE]

Speed:
  db F3 0F 10 B9 84 00 00 00

unregistersymbol(Speed)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1B760E5

Minecraft.Windows.exe+1B760B8: 48 8B 41 38                    - mov rax,[rcx+38]
Minecraft.Windows.exe+1B760BC: 48 8B F9                       - mov rdi,rcx
Minecraft.Windows.exe+1B760BF: 49 89 5B 10                    - mov [r11+10],rbx
Minecraft.Windows.exe+1B760C3: 48 8B 59 30                    - mov rbx,[rcx+30]
Minecraft.Windows.exe+1B760C7: 48 2B C3                       - sub rax,rbx
Minecraft.Windows.exe+1B760CA: 49 89 6B 18                    - mov [r11+18],rbp
Minecraft.Windows.exe+1B760CE: 48 C1 F8 03                    - sar rax,03
Minecraft.Windows.exe+1B760D2: 48 BD C5 4E EC C4 4E EC C4 4E  - mov rbp,4EC4EC4EC4EC4EC5
Minecraft.Windows.exe+1B760DC: 48 0F AF C5                    - imul rax,rbp
Minecraft.Windows.exe+1B760E0: 0F 29 7C 24 40                 - movaps [rsp+40],xmm7
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1B760E5: F3 0F 10 B9 84 00 00 00        - movss xmm7,[rcx+00000084]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1B760ED: 48 85 C0                       - test rax,rax
Minecraft.Windows.exe+1B760F0: 0F 84 06 01 00 00              - je Minecraft.Windows.exe+1B761FC
Minecraft.Windows.exe+1B760F6: 48 3B 59 38                    - cmp rbx,[rcx+38]
Minecraft.Windows.exe+1B760FA: 0F 84 FC 00 00 00              - je Minecraft.Windows.exe+1B761FC
Minecraft.Windows.exe+1B76100: 49 89 73 20                    - mov [r11+20],rsi
Minecraft.Windows.exe+1B76104: 0F 29 74 24 50                 - movaps [rsp+50],xmm6
Minecraft.Windows.exe+1B76109: 0F 1F 80 00 00 00 00           - nop dword ptr [rax+00000000]
Minecraft.Windows.exe+1B76110: 48 8B 03                       - mov rax,[rbx]
Minecraft.Windows.exe+1B76113: 48 8B CB                       - mov rcx,rbx
Minecraft.Windows.exe+1B76116: FF 43 5C                       - inc [rbx+5C]
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>378</ID>
              <Description>"Gravity (1.17)"</Description>
              <LastState/>
              <Color>FF8000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-17
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Gravity,Minecraft.Windows.exe,F3 0F 10 82 10 05 00 00) // should be unique
alloc(newmem,$1000,Gravity)

label(code)
label(return)

newmem:

code:
  mov [rdx+00000510],(float)-0.0
  jmp return

Gravity:
  jmp newmem
  nop 3
return:
registersymbol(Gravity)

[DISABLE]

Gravity:
  db F3 0F 10 82 10 05 00 00

unregistersymbol(Gravity)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+12564BD

Minecraft.Windows.exe+1256480: F3 44 0F 5C E1              - subss xmm12,xmm1
Minecraft.Windows.exe+1256485: F3 45 0F 59 E0              - mulss xmm12,xmm8
Minecraft.Windows.exe+125648A: F3 44 0F 58 E1              - addss xmm12,xmm1
Minecraft.Windows.exe+125648F: F3 0F 10 82 00 05 00 00     - movss xmm0,[rdx+00000500]
Minecraft.Windows.exe+1256497: F3 44 0F 10 AA F4 04 00 00  - movss xmm13,[rdx+000004F4]
Minecraft.Windows.exe+12564A0: F3 44 0F 5C E8              - subss xmm13,xmm0
Minecraft.Windows.exe+12564A5: F3 45 0F 59 E8              - mulss xmm13,xmm8
Minecraft.Windows.exe+12564AA: F3 44 0F 58 E8              - addss xmm13,xmm0
Minecraft.Windows.exe+12564AF: F3 44 0F 10 BA 14 05 00 00  - movss xmm15,[rdx+00000514]
Minecraft.Windows.exe+12564B8: F3 44 0F 59 FB              - mulss xmm15,xmm3
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+12564BD: F3 0F 10 82 10 05 00 00     - movss xmm0,[rdx+00000510]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+12564C5: F3 0F 59 C3                 - mulss xmm0,xmm3
Minecraft.Windows.exe+12564C9: F3 0F 11 44 24 30           - movss [rsp+30],xmm0
Minecraft.Windows.exe+12564CF: F3 0F 10 82 0C 05 00 00     - movss xmm0,[rdx+0000050C]
Minecraft.Windows.exe+12564D7: F3 0F 59 C3                 - mulss xmm0,xmm3
Minecraft.Windows.exe+12564DB: F3 0F 11 44 24 34           - movss [rsp+34],xmm0
Minecraft.Windows.exe+12564E1: F3 0F 10 8A 40 01 00 00     - movss xmm1,[rdx+00000140]
Minecraft.Windows.exe+12564E9: F3 0F 59 CC                 - mulss xmm1,xmm4
Minecraft.Windows.exe+12564ED: 0F 28 C1                    - movaps xmm0,xmm1
Minecraft.Windows.exe+12564F0: F3 0F 58 C5                 - addss xmm0,xmm5
Minecraft.Windows.exe+12564F4: F3 0F 2C C0                 - cvttss2si eax,xmm0
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>379</ID>
              <Description>" Anti Gravity Fly (1.17)"</Description>
              <LastState/>
              <Color>FF8000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-17
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Gravity,Minecraft.Windows.exe,F3 0F 10 82 10 05 00 00) // should be unique
alloc(newmem,$1000,Gravity)

label(code)
label(return)

newmem:

code:
  mov [rdx+00000510],(float)0.2
  jmp return

Gravity:
  jmp newmem
  nop 3
return:
registersymbol(Gravity)

[DISABLE]

Gravity:
  db F3 0F 10 82 10 05 00 00

unregistersymbol(Gravity)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+12564BD

Minecraft.Windows.exe+1256480: F3 44 0F 5C E1              - subss xmm12,xmm1
Minecraft.Windows.exe+1256485: F3 45 0F 59 E0              - mulss xmm12,xmm8
Minecraft.Windows.exe+125648A: F3 44 0F 58 E1              - addss xmm12,xmm1
Minecraft.Windows.exe+125648F: F3 0F 10 82 00 05 00 00     - movss xmm0,[rdx+00000500]
Minecraft.Windows.exe+1256497: F3 44 0F 10 AA F4 04 00 00  - movss xmm13,[rdx+000004F4]
Minecraft.Windows.exe+12564A0: F3 44 0F 5C E8              - subss xmm13,xmm0
Minecraft.Windows.exe+12564A5: F3 45 0F 59 E8              - mulss xmm13,xmm8
Minecraft.Windows.exe+12564AA: F3 44 0F 58 E8              - addss xmm13,xmm0
Minecraft.Windows.exe+12564AF: F3 44 0F 10 BA 14 05 00 00  - movss xmm15,[rdx+00000514]
Minecraft.Windows.exe+12564B8: F3 44 0F 59 FB              - mulss xmm15,xmm3
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+12564BD: F3 0F 10 82 10 05 00 00     - movss xmm0,[rdx+00000510]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+12564C5: F3 0F 59 C3                 - mulss xmm0,xmm3
Minecraft.Windows.exe+12564C9: F3 0F 11 44 24 30           - movss [rsp+30],xmm0
Minecraft.Windows.exe+12564CF: F3 0F 10 82 0C 05 00 00     - movss xmm0,[rdx+0000050C]
Minecraft.Windows.exe+12564D7: F3 0F 59 C3                 - mulss xmm0,xmm3
Minecraft.Windows.exe+12564DB: F3 0F 11 44 24 34           - movss [rsp+34],xmm0
Minecraft.Windows.exe+12564E1: F3 0F 10 8A 40 01 00 00     - movss xmm1,[rdx+00000140]
Minecraft.Windows.exe+12564E9: F3 0F 59 CC                 - mulss xmm1,xmm4
Minecraft.Windows.exe+12564ED: 0F 28 C1                    - movaps xmm0,xmm1
Minecraft.Windows.exe+12564F0: F3 0F 58 C5                 - addss xmm0,xmm5
Minecraft.Windows.exe+12564F4: F3 0F 2C C0                 - cvttss2si eax,xmm0
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>380</ID>
              <Description>"Gravity"</Description>
              <LastState/>
              <Color>FF8000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-24
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Gravity,Minecraft.Windows.exe,F3 41 0F 11 47 04 49 8B 06 49 8B CE FF 90 20) // should be unique
alloc(newmem,$1000,Gravity)

label(code)
label(return)

newmem:

code:
  mov [r15+04],(float)-0.1
  jmp return

Gravity:
  jmp newmem
  nop
return:
registersymbol(Gravity)

[DISABLE]

Gravity:
  db F3 41 0F 11 47 04

unregistersymbol(Gravity)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1A2B590

Minecraft.Windows.exe+1A2B55C: F3 41 0F 10 47 04        - movss xmm0,[r15+04]
Minecraft.Windows.exe+1A2B562: F3 0F 5C 05 C2 0E 5C 01  - subss xmm0,[Minecraft.Windows.exe+2FEC42C]
Minecraft.Windows.exe+1A2B56A: F3 41 0F 11 47 04        - movss [r15+04],xmm0
Minecraft.Windows.exe+1A2B570: 49 8B 06                 - mov rax,[r14]
Minecraft.Windows.exe+1A2B573: 41 0F 28 C9              - movaps xmm1,xmm9
Minecraft.Windows.exe+1A2B577: 49 8B CE                 - mov rcx,r14
Minecraft.Windows.exe+1A2B57A: FF 90 48 02 00 00        - call qword ptr [rax+00000248]
Minecraft.Windows.exe+1A2B580: EB 14                    - jmp Minecraft.Windows.exe+1A2B596
Minecraft.Windows.exe+1A2B582: F3 41 0F 10 47 04        - movss xmm0,[r15+04]
Minecraft.Windows.exe+1A2B588: F3 0F 5C 05 40 10 5C 01  - subss xmm0,[Minecraft.Windows.exe+2FEC5D0]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1A2B590: F3 41 0F 11 47 04        - movss [r15+04],xmm0
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1A2B596: 49 8B 06                 - mov rax,[r14]
Minecraft.Windows.exe+1A2B599: 49 8B CE                 - mov rcx,r14
Minecraft.Windows.exe+1A2B59C: FF 90 20 04 00 00        - call qword ptr [rax+00000420]
Minecraft.Windows.exe+1A2B5A2: 84 C0                    - test al,al
Minecraft.Windows.exe+1A2B5A4: 75 4D                    - jne Minecraft.Windows.exe+1A2B5F3
Minecraft.Windows.exe+1A2B5A6: 84 DB                    - test bl,bl
Minecraft.Windows.exe+1A2B5A8: 75 29                    - jne Minecraft.Windows.exe+1A2B5D3
Minecraft.Windows.exe+1A2B5AA: 49 8B 06                 - mov rax,[r14]
Minecraft.Windows.exe+1A2B5AD: BA 30 00 00 00           - mov edx,00000030
Minecraft.Windows.exe+1A2B5B2: 49 8B CE                 - mov rcx,r14
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>381</ID>
              <Description>"Anti Gravity Fly"</Description>
              <LastState/>
              <Color>FF8000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-24
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AntiGravityFly,Minecraft.Windows.exe,F3 41 0F 11 47 04 49 8B 06 49 8B CE FF 90 20) // should be unique
alloc(newmem,$1000,AntiGravityFly)

label(code)
label(return)

newmem:

code:
  mov [r15+04],(float)0.2
  jmp return

AntiGravityFly:
  jmp newmem
  nop
return:
registersymbol(AntiGravityFly)

[DISABLE]

AntiGravityFly:
  db F3 41 0F 11 47 04

unregistersymbol(AntiGravityFly)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1A2B590

Minecraft.Windows.exe+1A2B55C: F3 41 0F 10 47 04        - movss xmm0,[r15+04]
Minecraft.Windows.exe+1A2B562: F3 0F 5C 05 C2 0E 5C 01  - subss xmm0,[Minecraft.Windows.exe+2FEC42C]
Minecraft.Windows.exe+1A2B56A: F3 41 0F 11 47 04        - movss [r15+04],xmm0
Minecraft.Windows.exe+1A2B570: 49 8B 06                 - mov rax,[r14]
Minecraft.Windows.exe+1A2B573: 41 0F 28 C9              - movaps xmm1,xmm9
Minecraft.Windows.exe+1A2B577: 49 8B CE                 - mov rcx,r14
Minecraft.Windows.exe+1A2B57A: FF 90 48 02 00 00        - call qword ptr [rax+00000248]
Minecraft.Windows.exe+1A2B580: EB 14                    - jmp Minecraft.Windows.exe+1A2B596
Minecraft.Windows.exe+1A2B582: F3 41 0F 10 47 04        - movss xmm0,[r15+04]
Minecraft.Windows.exe+1A2B588: F3 0F 5C 05 40 10 5C 01  - subss xmm0,[Minecraft.Windows.exe+2FEC5D0]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1A2B590: F3 41 0F 11 47 04        - movss [r15+04],xmm0
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1A2B596: 49 8B 06                 - mov rax,[r14]
Minecraft.Windows.exe+1A2B599: 49 8B CE                 - mov rcx,r14
Minecraft.Windows.exe+1A2B59C: FF 90 20 04 00 00        - call qword ptr [rax+00000420]
Minecraft.Windows.exe+1A2B5A2: 84 C0                    - test al,al
Minecraft.Windows.exe+1A2B5A4: 75 4D                    - jne Minecraft.Windows.exe+1A2B5F3
Minecraft.Windows.exe+1A2B5A6: 84 DB                    - test bl,bl
Minecraft.Windows.exe+1A2B5A8: 75 29                    - jne Minecraft.Windows.exe+1A2B5D3
Minecraft.Windows.exe+1A2B5AA: 49 8B 06                 - mov rax,[r14]
Minecraft.Windows.exe+1A2B5AD: BA 30 00 00 00           - mov edx,00000030
Minecraft.Windows.exe+1A2B5B2: 49 8B CE                 - mov rcx,r14
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>382</ID>
              <Description>"Phase (Turn Off And On)"</Description>
              <LastState/>
              <Color>FF8000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-23
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,Minecraft.Windows.exe,0F 2F 99 E0 04 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov [rcx+000004E0],(float)4.7
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 0F 2F 99 E0 04 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1C5171A

Minecraft.Windows.exe+1C516EC: F3 0F 10 2A           - movss xmm5,[rdx]
Minecraft.Windows.exe+1C516F0: F3 0F 10 5A 04        - movss xmm3,[rdx+04]
Minecraft.Windows.exe+1C516F5: F3 0F 10 4A 08        - movss xmm1,[rdx+08]
Minecraft.Windows.exe+1C516FA: F3 41 0F 10 60 04     - movss xmm4,[r8+04]
Minecraft.Windows.exe+1C51700: F3 41 0F 10 50 08     - movss xmm2,[r8+08]
Minecraft.Windows.exe+1C51706: 73 30                 - jae Minecraft.Windows.exe+1C51738
Minecraft.Windows.exe+1C51708: 0F 2F A9 DC 04 00 00  - comiss xmm5,[rcx+000004DC]
Minecraft.Windows.exe+1C5170F: 73 27                 - jae Minecraft.Windows.exe+1C51738
Minecraft.Windows.exe+1C51711: 0F 2F A1 D4 04 00 00  - comiss xmm4,[rcx+000004D4]
Minecraft.Windows.exe+1C51718: 76 1E                 - jna Minecraft.Windows.exe+1C51738
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1C5171A: 0F 2F 99 E0 04 00 00  - comiss xmm3,[rcx+000004E0]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1C51721: 73 15                 - jae Minecraft.Windows.exe+1C51738
Minecraft.Windows.exe+1C51723: 0F 2F 91 D8 04 00 00  - comiss xmm2,[rcx+000004D8]
Minecraft.Windows.exe+1C5172A: 76 0C                 - jna Minecraft.Windows.exe+1C51738
Minecraft.Windows.exe+1C5172C: 0F 2F 89 E4 04 00 00  - comiss xmm1,[rcx+000004E4]
Minecraft.Windows.exe+1C51733: 73 03                 - jae Minecraft.Windows.exe+1C51738
Minecraft.Windows.exe+1C51735: B0 01                 - mov al,01
Minecraft.Windows.exe+1C51737: C3                    - ret 
Minecraft.Windows.exe+1C51738: 32 C0                 - xor al,al
Minecraft.Windows.exe+1C5173A: C3                    - ret 
Minecraft.Windows.exe+1C5173B: CC                    - int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>383</ID>
              <Description>"NoBlockFall (1.17.02)"</Description>
              <Color>FF8000</Color>
              <VariableType>Float</VariableType>
              <Address>Minecraft.Windows.exe+3500ED0</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>384</ID>
          <Description>"World"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>008000</Color>
          <GroupHeader>1</GroupHeader>
          <Address>v1</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>385</ID>
              <Description>"InstaBreak"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InstaBreak,Minecraft.Windows.exe,F3 0F 11 4B 24 33) // should be unique
alloc(newmem,$1000,InstaBreak)

label(code)
label(return)

newmem:
movss [rbx+24],xmm1
jmp code

code:
  mov [rbx+24],(float)1
  jmp return

InstaBreak:
  jmp newmem
return:
registersymbol(InstaBreak)

[DISABLE]

InstaBreak:
  db F3 0F 11 4B 24

unregistersymbol(InstaBreak)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+17F1ABA

Minecraft.Windows.exe+17F1A91: 0F 57 F6                          - xorps xmm6,xmm6
Minecraft.Windows.exe+17F1A94: F2 0F 5A F0                       - cvtsd2ss xmm6,xmm0
Minecraft.Windows.exe+17F1A98: F3 0F 59 35 24 B8 7F 01           - mulss xmm6,[Minecraft.Windows.exe+2FED2C4]
Minecraft.Windows.exe+17F1AA0: 49 8B D5                          - mov rdx,r13
Minecraft.Windows.exe+17F1AA3: 48 8B CB                          - mov rcx,rbx
Minecraft.Windows.exe+17F1AA6: E8 15 2A 00 00                    - call Minecraft.Windows.exe+17F44C0
Minecraft.Windows.exe+17F1AAB: 0F 28 F8                          - movaps xmm7,xmm0
Minecraft.Windows.exe+17F1AAE: 0F 28 C8                          - movaps xmm1,xmm0
Minecraft.Windows.exe+17F1AB1: F3 0F 59 CE                       - mulss xmm1,xmm6
Minecraft.Windows.exe+17F1AB5: F3 0F 58 4B 24                    - addss xmm1,[rbx+24]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+17F1ABA: F3 0F 11 4B 24                    - movss [rbx+24],xmm1
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+17F1ABF: 33 F6                             - xor esi,esi
Minecraft.Windows.exe+17F1AC1: 48 8B 45 10                       - mov rax,[rbp+10]
Minecraft.Windows.exe+17F1AC5: 48 39 43 68                       - cmp [rbx+68],rax
Minecraft.Windows.exe+17F1AC9: 0F 8D 05 01 00 00                 - jnl Minecraft.Windows.exe+17F1BD4
Minecraft.Windows.exe+17F1ACF: 48 69 8B 80 00 00 00 40 42 0F 00  - imul rcx,[rbx+00000080],000F4240
Minecraft.Windows.exe+17F1ADA: 48 03 C8                          - add rcx,rax
Minecraft.Windows.exe+17F1ADD: 48 89 4B 68                       - mov [rbx+68],rcx
Minecraft.Windows.exe+17F1AE1: 48 8B 53 08                       - mov rdx,[rbx+08]
Minecraft.Windows.exe+17F1AE5: 48 8B 8A 58 03 00 00              - mov rcx,[rdx+00000358]
Minecraft.Windows.exe+17F1AEC: 48 8B 01                          - mov rax,[rcx]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>386</ID>
              <Description>"AutoKill"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Speed,Minecraft.Windows.exe,F3 0F 10 B9 84 00 00 00) // should be unique
alloc(newmem,$1000,Speed)

label(code)
label(return)

newmem:

code:
  mov [rcx+00000084],(Float)0.100
  jmp return

Speed:
  jmp newmem
  nop 3
return:
registersymbol(Speed)

[DISABLE]

Speed:
  db F3 0F 10 B9 84 00 00 00

unregistersymbol(Speed)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1B760E5

Minecraft.Windows.exe+1B760B8: 48 8B 41 38                    - mov rax,[rcx+38]
Minecraft.Windows.exe+1B760BC: 48 8B F9                       - mov rdi,rcx
Minecraft.Windows.exe+1B760BF: 49 89 5B 10                    - mov [r11+10],rbx
Minecraft.Windows.exe+1B760C3: 48 8B 59 30                    - mov rbx,[rcx+30]
Minecraft.Windows.exe+1B760C7: 48 2B C3                       - sub rax,rbx
Minecraft.Windows.exe+1B760CA: 49 89 6B 18                    - mov [r11+18],rbp
Minecraft.Windows.exe+1B760CE: 48 C1 F8 03                    - sar rax,03
Minecraft.Windows.exe+1B760D2: 48 BD C5 4E EC C4 4E EC C4 4E  - mov rbp,4EC4EC4EC4EC4EC5
Minecraft.Windows.exe+1B760DC: 48 0F AF C5                    - imul rax,rbp
Minecraft.Windows.exe+1B760E0: 0F 29 7C 24 40                 - movaps [rsp+40],xmm7
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1B760E5: F3 0F 10 B9 84 00 00 00        - movss xmm7,[rcx+00000084]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1B760ED: 48 85 C0                       - test rax,rax
Minecraft.Windows.exe+1B760F0: 0F 84 06 01 00 00              - je Minecraft.Windows.exe+1B761FC
Minecraft.Windows.exe+1B760F6: 48 3B 59 38                    - cmp rbx,[rcx+38]
Minecraft.Windows.exe+1B760FA: 0F 84 FC 00 00 00              - je Minecraft.Windows.exe+1B761FC
Minecraft.Windows.exe+1B76100: 49 89 73 20                    - mov [r11+20],rsi
Minecraft.Windows.exe+1B76104: 0F 29 74 24 50                 - movaps [rsp+50],xmm6
Minecraft.Windows.exe+1B76109: 0F 1F 80 00 00 00 00           - nop dword ptr [rax+00000000]
Minecraft.Windows.exe+1B76110: 48 8B 03                       - mov rax,[rbx]
Minecraft.Windows.exe+1B76113: 48 8B CB                       - mov rcx,rbx
Minecraft.Windows.exe+1B76116: FF 43 5C                       - inc [rbx+5C]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>387</ID>
              <Description>"HungerSpoof, EntityHealth, Speed, WaterSpeed"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-11
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(XP,Minecraft.Windows.exe,F3 0F 10 B9 84 00 00 00) // should be unique
alloc(newmem,$1000,XP)

label(code)
label(return)

newmem:


code:
  mov [rcx+00000084],(float)1
  jmp return

XP:
  jmp newmem
  nop 3
return:
registersymbol(XP)

[DISABLE]

XP:
  db F3 0F 10 B9 84 00 00 00

unregistersymbol(XP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1EB9985

Minecraft.Windows.exe+1EB9958: 48 8B 41 38                    - mov rax,[rcx+38]
Minecraft.Windows.exe+1EB995C: 48 8B F9                       - mov rdi,rcx
Minecraft.Windows.exe+1EB995F: 49 89 5B 10                    - mov [r11+10],rbx
Minecraft.Windows.exe+1EB9963: 48 8B 59 30                    - mov rbx,[rcx+30]
Minecraft.Windows.exe+1EB9967: 48 2B C3                       - sub rax,rbx
Minecraft.Windows.exe+1EB996A: 49 89 6B 18                    - mov [r11+18],rbp
Minecraft.Windows.exe+1EB996E: 48 C1 F8 03                    - sar rax,03
Minecraft.Windows.exe+1EB9972: 48 BD C5 4E EC C4 4E EC C4 4E  - mov rbp,4EC4EC4EC4EC4EC5
Minecraft.Windows.exe+1EB997C: 48 0F AF C5                    - imul rax,rbp
Minecraft.Windows.exe+1EB9980: 0F 29 7C 24 40                 - movaps [rsp+40],xmm7
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1EB9985: F3 0F 10 B9 84 00 00 00        - movss xmm7,[rcx+00000084]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1EB998D: 48 85 C0                       - test rax,rax
Minecraft.Windows.exe+1EB9990: 0F 84 06 01 00 00              - je Minecraft.Windows.exe+1EB9A9C
Minecraft.Windows.exe+1EB9996: 48 3B 59 38                    - cmp rbx,[rcx+38]
Minecraft.Windows.exe+1EB999A: 0F 84 FC 00 00 00              - je Minecraft.Windows.exe+1EB9A9C
Minecraft.Windows.exe+1EB99A0: 49 89 73 20                    - mov [r11+20],rsi
Minecraft.Windows.exe+1EB99A4: 0F 29 74 24 50                 - movaps [rsp+50],xmm6
Minecraft.Windows.exe+1EB99A9: 0F 1F 80 00 00 00 00           - nop dword ptr [rax+00000000]
Minecraft.Windows.exe+1EB99B0: 48 8B 03                       - mov rax,[rbx]
Minecraft.Windows.exe+1EB99B3: 48 8B CB                       - mov rcx,rbx
Minecraft.Windows.exe+1EB99B6: FF 43 5C                       - inc [rbx+5C]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>388</ID>
              <Description>"XP (Do Not Leave On)"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-11
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(XP,Minecraft.Windows.exe,0F 2E BF 84 00 00 00) // should be unique
alloc(newmem,$1000,XP)

label(code)
label(return)

newmem:

code:
  mov [rdi+00000084],(float)50
  jmp return

XP:
  jmp newmem
  nop 2
return:
registersymbol(XP)

[DISABLE]

XP:
  db 0F 2E BF 84 00 00 00

unregistersymbol(XP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1EB9AB8

Minecraft.Windows.exe+1EB9A89: 0F 85 21 FF FF FF        - jne Minecraft.Windows.exe+1EB99B0
Minecraft.Windows.exe+1EB9A8F: 48 8B B4 24 88 00 00 00  - mov rsi,[rsp+00000088]
Minecraft.Windows.exe+1EB9A97: 0F 28 74 24 50           - movaps xmm6,[rsp+50]
Minecraft.Windows.exe+1EB9A9C: 48 8B 4F 60              - mov rcx,[rdi+60]
Minecraft.Windows.exe+1EB9AA0: 48 8B AC 24 80 00 00 00  - mov rbp,[rsp+00000080]
Minecraft.Windows.exe+1EB9AA8: 48 8B 5C 24 78           - mov rbx,[rsp+78]
Minecraft.Windows.exe+1EB9AAD: 48 85 C9                 - test rcx,rcx
Minecraft.Windows.exe+1EB9AB0: 74 06                    - je Minecraft.Windows.exe+1EB9AB8
Minecraft.Windows.exe+1EB9AB2: 48 8B 01                 - mov rax,[rcx]
Minecraft.Windows.exe+1EB9AB5: FF 50 08                 - call qword ptr [rax+08]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1EB9AB8: 0F 2E BF 84 00 00 00     - ucomiss xmm7,[rdi+00000084]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1EB9ABF: 0F 28 7C 24 40           - movaps xmm7,[rsp+40]
Minecraft.Windows.exe+1EB9AC4: 74 45                    - je Minecraft.Windows.exe+1EB9B0B
Minecraft.Windows.exe+1EB9AC6: 48 8B 57 10              - mov rdx,[rdi+10]
Minecraft.Windows.exe+1EB9ACA: 80 7A 01 00              - cmp byte ptr [rdx+01],00
Minecraft.Windows.exe+1EB9ACE: 74 3B                    - je Minecraft.Windows.exe+1EB9B0B
Minecraft.Windows.exe+1EB9AD0: 48 8B 47 08              - mov rax,[rdi+08]
Minecraft.Windows.exe+1EB9AD4: 48 8D 48 40              - lea rcx,[rax+40]
Minecraft.Windows.exe+1EB9AD8: 48 89 44 24 28           - mov [rsp+28],rax
Minecraft.Windows.exe+1EB9ADD: 8B 42 04                 - mov eax,[rdx+04]
Minecraft.Windows.exe+1EB9AE0: 48 8B 51 08              - mov rdx,[rcx+08]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>389</ID>
              <Description>"Creative Spoof (1.17)"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-11
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(CreativeSpoof,Minecraft.Windows.exe,8B 81 0C 1E 00 00 83 F8 01 74 26) // should be unique
alloc(newmem,$1000,CreativeSpoof)

label(code)
label(return)

newmem:
jmp code

code:
  mov [rcx+00001E0C],(byte)1
  jmp return

CreativeSpoof:
  jmp newmem
  nop
return:
registersymbol(CreativeSpoof)

[DISABLE]

CreativeSpoof:
  db 8B 81 0C 1E 00 00

unregistersymbol(CreativeSpoof)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1C0D7B4

Minecraft.Windows.exe+1C0D7A7: CC                    - int 3 
Minecraft.Windows.exe+1C0D7A8: CC                    - int 3 
Minecraft.Windows.exe+1C0D7A9: CC                    - int 3 
Minecraft.Windows.exe+1C0D7AA: CC                    - int 3 
Minecraft.Windows.exe+1C0D7AB: CC                    - int 3 
Minecraft.Windows.exe+1C0D7AC: CC                    - int 3 
Minecraft.Windows.exe+1C0D7AD: CC                    - int 3 
Minecraft.Windows.exe+1C0D7AE: CC                    - int 3 
Minecraft.Windows.exe+1C0D7AF: CC                    - int 3 
Minecraft.Windows.exe+1C0D7B0: 48 83 EC 28           - sub rsp,28
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1C0D7B4: 8B 81 0C 1E 00 00     - mov eax,[rcx+00001E0C]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1C0D7BA: 83 F8 01              - cmp eax,01
Minecraft.Windows.exe+1C0D7BD: 74 26                 - je Minecraft.Windows.exe+1C0D7E5
Minecraft.Windows.exe+1C0D7BF: 83 F8 04              - cmp eax,04
Minecraft.Windows.exe+1C0D7C2: 74 21                 - je Minecraft.Windows.exe+1C0D7E5
Minecraft.Windows.exe+1C0D7C4: 83 F8 05              - cmp eax,05
Minecraft.Windows.exe+1C0D7C7: 75 15                 - jne Minecraft.Windows.exe+1C0D7DE
Minecraft.Windows.exe+1C0D7C9: 48 8B 89 78 03 00 00  - mov rcx,[rcx+00000378]
Minecraft.Windows.exe+1C0D7D0: 48 8B 01              - mov rax,[rcx]
Minecraft.Windows.exe+1C0D7D3: FF 90 88 03 00 00     - call qword ptr [rax+00000388]
Minecraft.Windows.exe+1C0D7D9: 83 F8 01              - cmp eax,01
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>390</ID>
              <Description>"HealthSpoof (1.17)"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-11
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(HealthSpoof,Minecraft.Windows.exe,F3 0F 2C 88 84 00 00 00 85 C9 7E 07) // should be unique
alloc(newmem,$1000,HealthSpoof)

label(code)
label(return)

newmem:

code:
  mov [rax+00000084],(float)1
  jmp return

HealthSpoof:
  jmp newmem
  nop 3
return:
registersymbol(HealthSpoof)

[DISABLE]

HealthSpoof:
  db F3 0F 2C 88 84 00 00 00

unregistersymbol(HealthSpoof)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1D52D8D

Minecraft.Windows.exe+1D52D5A: C7 81 30 07 00 00 0A 00 00 00  - mov [rcx+00000730],0000000A
Minecraft.Windows.exe+1D52D64: C7 81 38 07 00 00 00 00 00 00  - mov [rcx+00000738],00000000
Minecraft.Windows.exe+1D52D6E: C3                             - ret 
Minecraft.Windows.exe+1D52D6F: CC                             - int 3 
Minecraft.Windows.exe+1D52D70: 48 83 EC 28                    - sub rsp,28
Minecraft.Windows.exe+1D52D74: 80 B9 E1 03 00 00 00           - cmp byte ptr [rcx+000003E1],00
Minecraft.Windows.exe+1D52D7B: 75 23                          - jne Minecraft.Windows.exe+1D52DA0
Minecraft.Windows.exe+1D52D7D: 48 8B 01                       - mov rax,[rcx]
Minecraft.Windows.exe+1D52D80: 48 8D 15 01 E5 20 02           - lea rdx,[Minecraft.Windows.exe+3F61288]
Minecraft.Windows.exe+1D52D87: FF 90 48 06 00 00              - call qword ptr [rax+00000648]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1D52D8D: F3 0F 2C 88 84 00 00 00        - cvttss2si ecx,[rax+00000084]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1D52D95: 85 C9                          - test ecx,ecx
Minecraft.Windows.exe+1D52D97: 7E 07                          - jle Minecraft.Windows.exe+1D52DA0
Minecraft.Windows.exe+1D52D99: B0 01                          - mov al,01
Minecraft.Windows.exe+1D52D9B: 48 83 C4 28                    - add rsp,28
Minecraft.Windows.exe+1D52D9F: C3                             - ret 
Minecraft.Windows.exe+1D52DA0: 32 C0                          - xor al,al
Minecraft.Windows.exe+1D52DA2: 48 83 C4 28                    - add rsp,28
Minecraft.Windows.exe+1D52DA6: C3                             - ret 
Minecraft.Windows.exe+1D52DA7: CC                             - int 3 
Minecraft.Windows.exe+1D52DA8: CC                             - int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>391</ID>
              <Description>"Realm Health Spoof (1.17)"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-11
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(HealthSpoof,Minecraft.Windows.exe,F3 0F 2C 88 84 00 00 00 85 C9 7E 07) // should be unique
alloc(newmem,$1000,HealthSpoof)

label(code)
label(return)

newmem:

code:
  mov [rax+00000084],(float)20
  jmp return

HealthSpoof:
  jmp newmem
  nop 3
return:
registersymbol(HealthSpoof)

[DISABLE]

HealthSpoof:
  db F3 0F 2C 88 84 00 00 00

unregistersymbol(HealthSpoof)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1D52D8D

Minecraft.Windows.exe+1D52D5A: C7 81 30 07 00 00 0A 00 00 00  - mov [rcx+00000730],0000000A
Minecraft.Windows.exe+1D52D64: C7 81 38 07 00 00 00 00 00 00  - mov [rcx+00000738],00000000
Minecraft.Windows.exe+1D52D6E: C3                             - ret 
Minecraft.Windows.exe+1D52D6F: CC                             - int 3 
Minecraft.Windows.exe+1D52D70: 48 83 EC 28                    - sub rsp,28
Minecraft.Windows.exe+1D52D74: 80 B9 E1 03 00 00 00           - cmp byte ptr [rcx+000003E1],00
Minecraft.Windows.exe+1D52D7B: 75 23                          - jne Minecraft.Windows.exe+1D52DA0
Minecraft.Windows.exe+1D52D7D: 48 8B 01                       - mov rax,[rcx]
Minecraft.Windows.exe+1D52D80: 48 8D 15 01 E5 20 02           - lea rdx,[Minecraft.Windows.exe+3F61288]
Minecraft.Windows.exe+1D52D87: FF 90 48 06 00 00              - call qword ptr [rax+00000648]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1D52D8D: F3 0F 2C 88 84 00 00 00        - cvttss2si ecx,[rax+00000084]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1D52D95: 85 C9                          - test ecx,ecx
Minecraft.Windows.exe+1D52D97: 7E 07                          - jle Minecraft.Windows.exe+1D52DA0
Minecraft.Windows.exe+1D52D99: B0 01                          - mov al,01
Minecraft.Windows.exe+1D52D9B: 48 83 C4 28                    - add rsp,28
Minecraft.Windows.exe+1D52D9F: C3                             - ret 
Minecraft.Windows.exe+1D52DA0: 32 C0                          - xor al,al
Minecraft.Windows.exe+1D52DA2: 48 83 C4 28                    - add rsp,28
Minecraft.Windows.exe+1D52DA6: C3                             - ret 
Minecraft.Windows.exe+1D52DA7: CC                             - int 3 
Minecraft.Windows.exe+1D52DA8: CC                             - int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>392</ID>
              <Description>"HungerSpoof (1.17)"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-11
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(HungerSpoof,Minecraft.Windows.exe,8B 88 84 00 00 00) // should be unique
alloc(newmem,$1000,HungerSpoof)

label(code)
label(return)

newmem:

code:
  mov [rax+00000084],(float)20
  jmp return

HungerSpoof:
  jmp newmem
  nop
return:
registersymbol(HungerSpoof)

[DISABLE]

HungerSpoof:
  db 8B 88 84 00 00 00

unregistersymbol(HungerSpoof)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1E0FDD5

Minecraft.Windows.exe+1E0FDAA: 84 C0                    - test al,al
Minecraft.Windows.exe+1E0FDAC: 0F 85 25 05 00 00        - jne Minecraft.Windows.exe+1E102D7
Minecraft.Windows.exe+1E0FDB2: 48 8B 47 28              - mov rax,[rdi+28]
Minecraft.Windows.exe+1E0FDB6: 48 8B 88 78 03 00 00     - mov rcx,[rax+00000378]
Minecraft.Windows.exe+1E0FDBD: 48 8B 01                 - mov rax,[rcx]
Minecraft.Windows.exe+1E0FDC0: FF 90 E8 00 00 00        - call qword ptr [rax+000000E8]
Minecraft.Windows.exe+1E0FDC6: 44 8B F8                 - mov r15d,eax
Minecraft.Windows.exe+1E0FDC9: 8B 57 08                 - mov edx,[rdi+08]
Minecraft.Windows.exe+1E0FDCC: 48 8B 4F 10              - mov rcx,[rdi+10]
Minecraft.Windows.exe+1E0FDD0: E8 5B 9F 0A 00           - call Minecraft.Windows.exe+1EB9D30
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1E0FDD5: 8B 88 84 00 00 00        - mov ecx,[rax+00000084]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1E0FDDB: 89 4F 20                 - mov [rdi+20],ecx
Minecraft.Windows.exe+1E0FDDE: 48 8B 4F 10              - mov rcx,[rdi+10]
Minecraft.Windows.exe+1E0FDE2: E8 49 9F 0A 00           - call Minecraft.Windows.exe+1EB9D30
Minecraft.Windows.exe+1E0FDE7: F3 0F 10 B0 84 00 00 00  - movss xmm6,[rax+00000084]
Minecraft.Windows.exe+1E0FDEF: 48 8B 47 28              - mov rax,[rdi+28]
Minecraft.Windows.exe+1E0FDF3: 48 8B 88 78 03 00 00     - mov rcx,[rax+00000378]
Minecraft.Windows.exe+1E0FDFA: 48 8B 01                 - mov rax,[rcx]
Minecraft.Windows.exe+1E0FDFD: FF 90 88 09 00 00        - call qword ptr [rax+00000988]
Minecraft.Windows.exe+1E0FE03: 48 8B 10                 - mov rdx,[rax]
Minecraft.Windows.exe+1E0FE06: 48 8B 48 08              - mov rcx,[rax+08]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>393</ID>
              <Description>"Item Dupe"</Description>
              <Color>008000</Color>
              <VariableType>Byte</VariableType>
              <Address>2496CBACE82</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>394</ID>
              <Description>"No Fire Tick"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-27
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(NoFire,Minecraft.Windows.exe,89 87 C0 02 00 00 48 8B) // should be unique
alloc(newmem,$1000,NoFire)

label(code)
label(return)

newmem:

code:
  mov [rdi+000002C0],0
  jmp return

NoFire:
  jmp newmem
  nop
return:
registersymbol(NoFire)

[DISABLE]

NoFire:
  db 89 87 C0 02 00 00

unregistersymbol(NoFire)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1C49DBC

Minecraft.Windows.exe+1C49D95: 8D 0C 92                 - lea ecx,[rdx+rdx*4]
Minecraft.Windows.exe+1C49D98: C1 E1 02                 - shl ecx,02
Minecraft.Windows.exe+1C49D9B: 44 3B C1                 - cmp r8d,ecx
Minecraft.Windows.exe+1C49D9E: 75 18                    - jne Minecraft.Windows.exe+1C49DB8
Minecraft.Windows.exe+1C49DA0: 48 8B 07                 - mov rax,[rdi]
Minecraft.Windows.exe+1C49DA3: BA 01 00 00 00           - mov edx,00000001
Minecraft.Windows.exe+1C49DA8: 48 8B CF                 - mov rcx,rdi
Minecraft.Windows.exe+1C49DAB: FF 90 28 04 00 00        - call qword ptr [rax+00000428]
Minecraft.Windows.exe+1C49DB1: 44 8B 87 C0 02 00 00     - mov r8d,[rdi+000002C0]
Minecraft.Windows.exe+1C49DB8: 41 8D 40 FF              - lea eax,[r8-01]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1C49DBC: 89 87 C0 02 00 00        - mov [rdi+000002C0],eax
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1C49DC2: 48 8B 07                 - mov rax,[rdi]
Minecraft.Windows.exe+1C49DC5: 48 8B CF                 - mov rcx,rdi
Minecraft.Windows.exe+1C49DC8: FF 90 30 02 00 00        - call qword ptr [rax+00000230]
Minecraft.Windows.exe+1C49DCE: 84 C0                    - test al,al
Minecraft.Windows.exe+1C49DD0: 74 18                    - je Minecraft.Windows.exe+1C49DEA
Minecraft.Windows.exe+1C49DD2: F3 0F 10 87 DC 01 00 00  - movss xmm0,[rdi+000001DC]
Minecraft.Windows.exe+1C49DDA: F3 0F 59 05 96 68 8B 01  - mulss xmm0,[Minecraft.Windows.exe+3500678]
Minecraft.Windows.exe+1C49DE2: F3 0F 11 87 DC 01 00 00  - movss [rdi+000001DC],xmm0
Minecraft.Windows.exe+1C49DEA: 48 8B 87 68 03 00 00     - mov rax,[rdi+00000368]
Minecraft.Windows.exe+1C49DF1: 0F BF 48 2A              - movsx ecx,word ptr [rax+2A]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>395</ID>
              <Description>"Rain Spoof"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-02
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(RainSpoof,Minecraft.Windows.exe,F3 0F 10 53 3C 48 8D 4B) // should be unique
alloc(newmem,$1000,RainSpoof)

label(code)
label(return)

newmem:

code:
  mov [rbx+3C],(float)1
  jmp return

RainSpoof:
  jmp newmem
return:
registersymbol(RainSpoof)

[DISABLE]

RainSpoof:
  db F3 0F 10 53 3C

unregistersymbol(RainSpoof)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+233A868

Minecraft.Windows.exe+233A843: 48 83 C1 48              - add rcx,48
Minecraft.Windows.exe+233A847: 0F 2F D0                 - comiss xmm2,xmm0
Minecraft.Windows.exe+233A84A: 76 09                    - jna Minecraft.Windows.exe+233A855
Minecraft.Windows.exe+233A84C: F3 0F 58 C3              - addss xmm0,xmm3
Minecraft.Windows.exe+233A850: 0F 2F D0                 - comiss xmm2,xmm0
Minecraft.Windows.exe+233A853: EB 07                    - jmp Minecraft.Windows.exe+233A85C
Minecraft.Windows.exe+233A855: F3 0F 5C C3              - subss xmm0,xmm3
Minecraft.Windows.exe+233A859: 0F 2F C2                 - comiss xmm0,xmm2
Minecraft.Windows.exe+233A85C: F3 0F 10 2D 7C 60 1C 01  - movss xmm5,[Minecraft.Windows.exe+35008E0]
Minecraft.Windows.exe+233A864: 48 0F 46 C1              - cmovbe rax,rcx
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+233A868: F3 0F 10 53 3C           - movss xmm2,[rbx+3C]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+233A86D: 48 8D 4B 3C              - lea rcx,[rbx+3C]
Minecraft.Windows.exe+233A871: 0F 2F D1                 - comiss xmm2,xmm1
Minecraft.Windows.exe+233A874: F3 0F 11 44 24 30        - movss [rsp+30],xmm0
Minecraft.Windows.exe+233A87A: 0F 57 E4                 - xorps xmm4,xmm4
Minecraft.Windows.exe+233A87D: F3 0F 10 00              - movss xmm0,[rax]
Minecraft.Windows.exe+233A881: 48 8D 44 24 38           - lea rax,[rsp+38]
Minecraft.Windows.exe+233A886: F3 0F 5F C4              - maxss xmm0,xmm4
Minecraft.Windows.exe+233A88A: F3 0F 5D C5              - minss xmm0,xmm5
Minecraft.Windows.exe+233A88E: F3 0F 11 43 44           - movss [rbx+44],xmm0
Minecraft.Windows.exe+233A893: 76 09                    - jna Minecraft.Windows.exe+233A89E
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>396</ID>
              <Description>"Riptide Spoof"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-02
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(RiptideSpoof,Minecraft.Windows.exe,F3 0F 10 53 3C 48 8D 4B) // should be unique
alloc(newmem,$1000,RiptideSpoof)

label(code)
label(return)

newmem:

code:
  mov [rbx+3C],(float)1
  jmp return

RiptideSpoof:
  jmp newmem
return:
registersymbol(RiptideSpoof)

[DISABLE]

RiptideSpoof:
  db F3 0F 10 53 3C

unregistersymbol(RiptideSpoof)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+233A868

Minecraft.Windows.exe+233A843: 48 83 C1 48              - add rcx,48
Minecraft.Windows.exe+233A847: 0F 2F D0                 - comiss xmm2,xmm0
Minecraft.Windows.exe+233A84A: 76 09                    - jna Minecraft.Windows.exe+233A855
Minecraft.Windows.exe+233A84C: F3 0F 58 C3              - addss xmm0,xmm3
Minecraft.Windows.exe+233A850: 0F 2F D0                 - comiss xmm2,xmm0
Minecraft.Windows.exe+233A853: EB 07                    - jmp Minecraft.Windows.exe+233A85C
Minecraft.Windows.exe+233A855: F3 0F 5C C3              - subss xmm0,xmm3
Minecraft.Windows.exe+233A859: 0F 2F C2                 - comiss xmm0,xmm2
Minecraft.Windows.exe+233A85C: F3 0F 10 2D 7C 60 1C 01  - movss xmm5,[Minecraft.Windows.exe+35008E0]
Minecraft.Windows.exe+233A864: 48 0F 46 C1              - cmovbe rax,rcx
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+233A868: F3 0F 10 53 3C           - movss xmm2,[rbx+3C]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+233A86D: 48 8D 4B 3C              - lea rcx,[rbx+3C]
Minecraft.Windows.exe+233A871: 0F 2F D1                 - comiss xmm2,xmm1
Minecraft.Windows.exe+233A874: F3 0F 11 44 24 30        - movss [rsp+30],xmm0
Minecraft.Windows.exe+233A87A: 0F 57 E4                 - xorps xmm4,xmm4
Minecraft.Windows.exe+233A87D: F3 0F 10 00              - movss xmm0,[rax]
Minecraft.Windows.exe+233A881: 48 8D 44 24 38           - lea rax,[rsp+38]
Minecraft.Windows.exe+233A886: F3 0F 5F C4              - maxss xmm0,xmm4
Minecraft.Windows.exe+233A88A: F3 0F 5D C5              - minss xmm0,xmm5
Minecraft.Windows.exe+233A88E: F3 0F 11 43 44           - movss [rbx+44],xmm0
Minecraft.Windows.exe+233A893: 76 09                    - jna Minecraft.Windows.exe+233A89E
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>397</ID>
              <Description>"Item Dupe"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-04
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ItemDupe,Minecraft.Windows.exe,44 39 B1 88 00 00 00) // should be unique
alloc(newmem,$1000,ItemDupe)

label(code)
label(return)

newmem:

code:
  mov [rcx+00000088],(float)8.968310172E-44
  jmp return

ItemDupe:
  jmp newmem
  nop 2
return:
registersymbol(ItemDupe)

[DISABLE]

ItemDupe:
  db 44 39 B1 88 00 00 00

unregistersymbol(ItemDupe)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1ABBC1F

Minecraft.Windows.exe+1ABBBF2: 48 8D 6C 24 D0        - lea rbp,[rsp-30]
Minecraft.Windows.exe+1ABBBF7: 48 81 EC 30 01 00 00  - sub rsp,00000130
Minecraft.Windows.exe+1ABBBFE: 48 8B 05 FB E4 F1 01  - mov rax,[Minecraft.Windows.exe+39DA100]
Minecraft.Windows.exe+1ABBC05: 48 33 C4              - xor rax,rsp
Minecraft.Windows.exe+1ABBC08: 48 89 45 20           - mov [rbp+20],rax
Minecraft.Windows.exe+1ABBC0C: 48 8B FA              - mov rdi,rdx
Minecraft.Windows.exe+1ABBC0F: 48 8B D9              - mov rbx,rcx
Minecraft.Windows.exe+1ABBC12: 48 89 54 24 30        - mov [rsp+30],rdx
Minecraft.Windows.exe+1ABBC17: 45 33 F6              - xor r14d,r14d
Minecraft.Windows.exe+1ABBC1A: 44 89 74 24 20        - mov [rsp+20],r14d
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1ABBC1F: 44 39 B1 88 00 00 00  - cmp [rcx+00000088],r14d
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1ABBC26: 0F 8E 74 01 00 00     - jng Minecraft.Windows.exe+1ABBDA0
Minecraft.Windows.exe+1ABBC2C: 0F 57 C0              - xorps xmm0,xmm0
Minecraft.Windows.exe+1ABBC2F: 33 C0                 - xor eax,eax
Minecraft.Windows.exe+1ABBC31: 0F 11 45 90           - movups [rbp-70],xmm0
Minecraft.Windows.exe+1ABBC35: 0F 11 45 A0           - movups [rbp-60],xmm0
Minecraft.Windows.exe+1ABBC39: 0F 11 45 B0           - movups [rbp-50],xmm0
Minecraft.Windows.exe+1ABBC3D: 0F 11 45 C0           - movups [rbp-40],xmm0
Minecraft.Windows.exe+1ABBC41: 0F 11 45 D0           - movups [rbp-30],xmm0
Minecraft.Windows.exe+1ABBC45: 0F 11 45 E0           - movups [rbp-20],xmm0
Minecraft.Windows.exe+1ABBC49: 0F 11 45 F0           - movups [rbp-10],xmm0
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>398</ID>
          <Description>"Visual"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF0080</Color>
          <GroupHeader>1</GroupHeader>
          <Address>v1</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>399</ID>
              <Description>"FOV"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF0080</Color>
              <GroupHeader>1</GroupHeader>
              <Address>v1</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>400</ID>
                  <Description>"FOV Set 70"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <Color>FF0080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(FOV,Minecraft.Windows.exe,F3 0F 10 48 18 F3 0F 10 78) // should be unique
alloc(newmem,$1000,FOV)

label(code)
label(return)

newmem:
movss xmm1,[rax+18]
jmp code
code:
  mov [rax+18],(float)70
  jmp return

FOV:
  jmp newmem
return:
registersymbol(FOV)

[DISABLE]

FOV:
  db F3 0F 10 48 18

unregistersymbol(FOV)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+105397D

Minecraft.Windows.exe+105395B: 74 20                    - je Minecraft.Windows.exe+105397D
Minecraft.Windows.exe+105395D: 49 8B C8                 - mov rcx,r8
Minecraft.Windows.exe+1053960: E8 4B CC 34 00           - call Minecraft.Windows.exe+13A05B0
Minecraft.Windows.exe+1053965: 49 8B C8                 - mov rcx,r8
Minecraft.Windows.exe+1053968: 0F 28 C8                 - movaps xmm1,xmm0
Minecraft.Windows.exe+105396B: E8 E0 CD 34 00           - call Minecraft.Windows.exe+13A0750
Minecraft.Windows.exe+1053970: 49 8B C8                 - mov rcx,r8
Minecraft.Windows.exe+1053973: 0F 28 F8                 - movaps xmm7,xmm0
Minecraft.Windows.exe+1053976: E8 05 CE 34 00           - call Minecraft.Windows.exe+13A0780
Minecraft.Windows.exe+105397B: EB 0F                    - jmp Minecraft.Windows.exe+105398C
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+105397D: F3 0F 10 48 18           - movss xmm1,[rax+18]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1053982: F3 0F 10 78 14           - movss xmm7,[rax+14]
Minecraft.Windows.exe+1053987: F3 0F 10 40 10           - movss xmm0,[rax+10]
Minecraft.Windows.exe+105398C: 0F 2F CF                 - comiss xmm1,xmm7
Minecraft.Windows.exe+105398F: 77 07                    - ja Minecraft.Windows.exe+1053998
Minecraft.Windows.exe+1053991: 0F 28 F8                 - movaps xmm7,xmm0
Minecraft.Windows.exe+1053994: F3 0F 5F F9              - maxss xmm7,xmm1
Minecraft.Windows.exe+1053998: F3 0F 10 83 AC 13 00 00  - movss xmm0,[rbx+000013AC]
Minecraft.Windows.exe+10539A0: F3 0F 10 8B A8 13 00 00  - movss xmm1,[rbx+000013A8]
Minecraft.Windows.exe+10539A8: F3 0F 5C C8              - subss xmm1,xmm0
Minecraft.Windows.exe+10539AC: F3 41 0F 59 C9           - mulss xmm1,xmm9
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>401</ID>
                  <Description>"FOV Set Test"</Description>
                  <LastState/>
                  <Color>FF0080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-05-23
  Author : titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(FOV,Minecraft.Windows.exe,F3 0F 10 48 18 F3 0F 10 78) // should be unique
alloc(newmem,$1000,FOV)

label(code)
label(return)

newmem:
movss xmm1,[rax+18]
jmp code
code:
  mov [rax+18],(float)0
  jmp return

FOV:
  jmp newmem
return:
registersymbol(FOV)

[DISABLE]

FOV:
  db F3 0F 10 48 18

unregistersymbol(FOV)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+105397D

Minecraft.Windows.exe+105395B: 74 20                    - je Minecraft.Windows.exe+105397D
Minecraft.Windows.exe+105395D: 49 8B C8                 - mov rcx,r8
Minecraft.Windows.exe+1053960: E8 4B CC 34 00           - call Minecraft.Windows.exe+13A05B0
Minecraft.Windows.exe+1053965: 49 8B C8                 - mov rcx,r8
Minecraft.Windows.exe+1053968: 0F 28 C8                 - movaps xmm1,xmm0
Minecraft.Windows.exe+105396B: E8 E0 CD 34 00           - call Minecraft.Windows.exe+13A0750
Minecraft.Windows.exe+1053970: 49 8B C8                 - mov rcx,r8
Minecraft.Windows.exe+1053973: 0F 28 F8                 - movaps xmm7,xmm0
Minecraft.Windows.exe+1053976: E8 05 CE 34 00           - call Minecraft.Windows.exe+13A0780
Minecraft.Windows.exe+105397B: EB 0F                    - jmp Minecraft.Windows.exe+105398C
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+105397D: F3 0F 10 48 18           - movss xmm1,[rax+18]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1053982: F3 0F 10 78 14           - movss xmm7,[rax+14]
Minecraft.Windows.exe+1053987: F3 0F 10 40 10           - movss xmm0,[rax+10]
Minecraft.Windows.exe+105398C: 0F 2F CF                 - comiss xmm1,xmm7
Minecraft.Windows.exe+105398F: 77 07                    - ja Minecraft.Windows.exe+1053998
Minecraft.Windows.exe+1053991: 0F 28 F8                 - movaps xmm7,xmm0
Minecraft.Windows.exe+1053994: F3 0F 5F F9              - maxss xmm7,xmm1
Minecraft.Windows.exe+1053998: F3 0F 10 83 AC 13 00 00  - movss xmm0,[rbx+000013AC]
Minecraft.Windows.exe+10539A0: F3 0F 10 8B A8 13 00 00  - movss xmm1,[rbx+000013A8]
Minecraft.Windows.exe+10539A8: F3 0F 5C C8              - subss xmm1,xmm0
Minecraft.Windows.exe+10539AC: F3 41 0F 59 C9           - mulss xmm1,xmm9
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>402</ID>
              <Description>"Saved Chunk Freewalk"</Description>
              <LastState/>
              <Color>FF0080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-11
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(SavedChunkFreelook,Minecraft.Windows.exe,80 B9 F8 26 00 00 01) // should be unique
alloc(newmem,$1000,SavedChunkFreelook)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [rcx+000026F8],00
  jmp return

SavedChunkFreelook:
  jmp newmem
  nop 2
return:
registersymbol(SavedChunkFreelook)

[DISABLE]

SavedChunkFreelook:
  db 80 B9 F8 26 00 00 01

unregistersymbol(SavedChunkFreelook)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+BFACFB

Minecraft.Windows.exe+BFACD5: 48 89 74 24 18        - mov [rsp+18],rsi
Minecraft.Windows.exe+BFACDA: 55                    - push rbp
Minecraft.Windows.exe+BFACDB: 57                    - push rdi
Minecraft.Windows.exe+BFACDC: 41 56                 - push r14
Minecraft.Windows.exe+BFACDE: 48 8D 6C 24 D0        - lea rbp,[rsp-30]
Minecraft.Windows.exe+BFACE3: 48 81 EC 30 01 00 00  - sub rsp,00000130
Minecraft.Windows.exe+BFACEA: 48 8B 05 0F E4 DD 02  - mov rax,[Minecraft.Windows.exe+39D9100]
Minecraft.Windows.exe+BFACF1: 48 33 C4              - xor rax,rsp
Minecraft.Windows.exe+BFACF4: 48 89 45 20           - mov [rbp+20],rax
Minecraft.Windows.exe+BFACF8: 48 8B D9              - mov rbx,rcx
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+BFACFB: 80 B9 F8 26 00 00 01  - cmp byte ptr [rcx+000026F8],01
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+BFAD02: 0F 85 C6 02 00 00     - jne Minecraft.Windows.exe+BFAFCE
Minecraft.Windows.exe+BFAD08: 80 79 18 00           - cmp byte ptr [rcx+18],00
Minecraft.Windows.exe+BFAD0C: 0F 84 E0 02 00 00     - je Minecraft.Windows.exe+BFAFF2
Minecraft.Windows.exe+BFAD12: 48 8B 41 08           - mov rax,[rcx+08]
Minecraft.Windows.exe+BFAD16: 48 8B 08              - mov rcx,[rax]
Minecraft.Windows.exe+BFAD19: 8B 43 10              - mov eax,[rbx+10]
Minecraft.Windows.exe+BFAD1C: 89 44 24 20           - mov [rsp+20],eax
Minecraft.Windows.exe+BFAD20: 48 8D 54 24 20        - lea rdx,[rsp+20]
Minecraft.Windows.exe+BFAD25: E8 A6 25 04 00        - call Minecraft.Windows.exe+C3D2D0
Minecraft.Windows.exe+BFAD2A: 48 8B F8              - mov rdi,rax
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>403</ID>
              <Description>"Visual Fire"</Description>
              <LastState/>
              <Color>FF0080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-27
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(NoFire,Minecraft.Windows.exe,89 87 C0 02 00 00 48 8B) // should be unique
alloc(newmem,$1000,NoFire)

label(code)
label(return)

newmem:

code:
  mov [rdi+000002C0],160
  jmp return

NoFire:
  jmp newmem
  nop
return:
registersymbol(NoFire)

[DISABLE]

NoFire:
  db 89 87 C0 02 00 00

unregistersymbol(NoFire)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1C49DBC

Minecraft.Windows.exe+1C49D95: 8D 0C 92                 - lea ecx,[rdx+rdx*4]
Minecraft.Windows.exe+1C49D98: C1 E1 02                 - shl ecx,02
Minecraft.Windows.exe+1C49D9B: 44 3B C1                 - cmp r8d,ecx
Minecraft.Windows.exe+1C49D9E: 75 18                    - jne Minecraft.Windows.exe+1C49DB8
Minecraft.Windows.exe+1C49DA0: 48 8B 07                 - mov rax,[rdi]
Minecraft.Windows.exe+1C49DA3: BA 01 00 00 00           - mov edx,00000001
Minecraft.Windows.exe+1C49DA8: 48 8B CF                 - mov rcx,rdi
Minecraft.Windows.exe+1C49DAB: FF 90 28 04 00 00        - call qword ptr [rax+00000428]
Minecraft.Windows.exe+1C49DB1: 44 8B 87 C0 02 00 00     - mov r8d,[rdi+000002C0]
Minecraft.Windows.exe+1C49DB8: 41 8D 40 FF              - lea eax,[r8-01]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1C49DBC: 89 87 C0 02 00 00        - mov [rdi+000002C0],eax
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1C49DC2: 48 8B 07                 - mov rax,[rdi]
Minecraft.Windows.exe+1C49DC5: 48 8B CF                 - mov rcx,rdi
Minecraft.Windows.exe+1C49DC8: FF 90 30 02 00 00        - call qword ptr [rax+00000230]
Minecraft.Windows.exe+1C49DCE: 84 C0                    - test al,al
Minecraft.Windows.exe+1C49DD0: 74 18                    - je Minecraft.Windows.exe+1C49DEA
Minecraft.Windows.exe+1C49DD2: F3 0F 10 87 DC 01 00 00  - movss xmm0,[rdi+000001DC]
Minecraft.Windows.exe+1C49DDA: F3 0F 59 05 96 68 8B 01  - mulss xmm0,[Minecraft.Windows.exe+3500678]
Minecraft.Windows.exe+1C49DE2: F3 0F 11 87 DC 01 00 00  - movss [rdi+000001DC],xmm0
Minecraft.Windows.exe+1C49DEA: 48 8B 87 68 03 00 00     - mov rax,[rdi+00000368]
Minecraft.Windows.exe+1C49DF1: 0F BF 48 2A              - movsx ecx,word ptr [rax+2A]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>404</ID>
              <Description>"Invisibility"</Description>
              <LastState/>
              <Color>FF0080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-23
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Invis,Minecraft.Windows.exe,0F 2F 99 E0 04 00 00) // should be unique
alloc(newmem,$1000,Invis)

label(code)
label(return)

newmem:

code:
  mov [rcx+000004E0],(float)100000
  jmp return

Invis:
  jmp newmem
  nop 2
return:
registersymbol(Invis)

[DISABLE]

Invis:
  db 0F 2F 99 E0 04 00 00

unregistersymbol(Invis)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+1C5171A

Minecraft.Windows.exe+1C516EC: F3 0F 10 2A           - movss xmm5,[rdx]
Minecraft.Windows.exe+1C516F0: F3 0F 10 5A 04        - movss xmm3,[rdx+04]
Minecraft.Windows.exe+1C516F5: F3 0F 10 4A 08        - movss xmm1,[rdx+08]
Minecraft.Windows.exe+1C516FA: F3 41 0F 10 60 04     - movss xmm4,[r8+04]
Minecraft.Windows.exe+1C51700: F3 41 0F 10 50 08     - movss xmm2,[r8+08]
Minecraft.Windows.exe+1C51706: 73 30                 - jae Minecraft.Windows.exe+1C51738
Minecraft.Windows.exe+1C51708: 0F 2F A9 DC 04 00 00  - comiss xmm5,[rcx+000004DC]
Minecraft.Windows.exe+1C5170F: 73 27                 - jae Minecraft.Windows.exe+1C51738
Minecraft.Windows.exe+1C51711: 0F 2F A1 D4 04 00 00  - comiss xmm4,[rcx+000004D4]
Minecraft.Windows.exe+1C51718: 76 1E                 - jna Minecraft.Windows.exe+1C51738
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+1C5171A: 0F 2F 99 E0 04 00 00  - comiss xmm3,[rcx+000004E0]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+1C51721: 73 15                 - jae Minecraft.Windows.exe+1C51738
Minecraft.Windows.exe+1C51723: 0F 2F 91 D8 04 00 00  - comiss xmm2,[rcx+000004D8]
Minecraft.Windows.exe+1C5172A: 76 0C                 - jna Minecraft.Windows.exe+1C51738
Minecraft.Windows.exe+1C5172C: 0F 2F 89 E4 04 00 00  - comiss xmm1,[rcx+000004E4]
Minecraft.Windows.exe+1C51733: 73 03                 - jae Minecraft.Windows.exe+1C51738
Minecraft.Windows.exe+1C51735: B0 01                 - mov al,01
Minecraft.Windows.exe+1C51737: C3                    - ret 
Minecraft.Windows.exe+1C51738: 32 C0                 - xor al,al
Minecraft.Windows.exe+1C5173A: C3                    - ret 
Minecraft.Windows.exe+1C5173B: CC                    - int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>405</ID>
              <Description>"Head Rotations"</Description>
              <LastState/>
              <Color>FF0080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-27
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(HeadRotations,Minecraft.Windows.exe,F3 0F 11 83 28 07 00 00 89) // should be unique
alloc(newmem,$1000,HeadRotations)

label(code)
label(return)

newmem:

code:
  mov [rbx+00000728],0
  jmp return

HeadRotations:
  jmp newmem
  nop 3
return:
registersymbol(HeadRotations)

[DISABLE]

HeadRotations:
  db F3 0F 11 83 28 07 00 00

unregistersymbol(HeadRotations)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+BFE22A

Minecraft.Windows.exe+BFE1F6: 48 8B 03                 - mov rax,[rbx]
Minecraft.Windows.exe+BFE1F9: 48 8B CB                 - mov rcx,rbx
Minecraft.Windows.exe+BFE1FC: F3 0F 59 C3              - mulss xmm0,xmm3
Minecraft.Windows.exe+BFE200: F3 0F 11 54 24 7C        - movss [rsp+7C],xmm2
Minecraft.Windows.exe+BFE206: F3 0F 58 87 14 01 00 00  - addss xmm0,[rdi+00000114]
Minecraft.Windows.exe+BFE20E: F3 0F 59 C1              - mulss xmm0,xmm1
Minecraft.Windows.exe+BFE212: F3 0F 11 44 24 78        - movss [rsp+78],xmm0
Minecraft.Windows.exe+BFE218: FF 90 A0 00 00 00        - call qword ptr [rax+000000A0]
Minecraft.Windows.exe+BFE21E: 8B 83 28 07 00 00        - mov eax,[rbx+00000728]
Minecraft.Windows.exe+BFE224: F3 0F 10 44 24 7C        - movss xmm0,[rsp+7C]
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+BFE22A: F3 0F 11 83 28 07 00 00  - movss [rbx+00000728],xmm0
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+BFE232: 89 83 2C 07 00 00        - mov [rbx+0000072C],eax
Minecraft.Windows.exe+BFE238: 48 8B 8C 24 80 00 00 00  - mov rcx,[rsp+00000080]
Minecraft.Windows.exe+BFE240: 48 33 CC                 - xor rcx,rsp
Minecraft.Windows.exe+BFE243: E8 D8 BC 11 02           - call Minecraft.Windows.exe+2D19F20
Minecraft.Windows.exe+BFE248: 48 8B 9C 24 A8 00 00 00  - mov rbx,[rsp+000000A8]
Minecraft.Windows.exe+BFE250: 48 81 C4 90 00 00 00     - add rsp,00000090
Minecraft.Windows.exe+BFE257: 5F                       - pop rdi
Minecraft.Windows.exe+BFE258: C3                       - ret 
Minecraft.Windows.exe+BFE259: CC                       - int 3 
Minecraft.Windows.exe+BFE25A: CC                       - int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>406</ID>
              <Description>"Full Bright (Turn Off And On)"</Description>
              <LastState/>
              <Color>FF0080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-03
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(FullBright,Minecraft.Windows.exe,F3 0F 10 42 18 48 83 C4 28 C3 41 B8 25) // should be unique
alloc(newmem,$1000,FullBright)

label(code)
label(return)

newmem:

code:
  mov [rdx+18],(float)100
  jmp return

FullBright:
  jmp newmem
return:
registersymbol(FullBright)

[DISABLE]

FullBright:
  db F3 0F 10 42 18

unregistersymbol(FullBright)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+B8EF40

Minecraft.Windows.exe+B8EF1E: 48 8B 10              - mov rdx,[rax]
Minecraft.Windows.exe+B8EF21: 48 85 D2              - test rdx,rdx
Minecraft.Windows.exe+B8EF24: 74 3B                 - je Minecraft.Windows.exe+B8EF61
Minecraft.Windows.exe+B8EF26: 48 8B 42 08           - mov rax,[rdx+08]
Minecraft.Windows.exe+B8EF2A: 48 8B 88 00 02 00 00  - mov rcx,[rax+00000200]
Minecraft.Windows.exe+B8EF31: 48 85 C9              - test rcx,rcx
Minecraft.Windows.exe+B8EF34: 74 0A                 - je Minecraft.Windows.exe+B8EF40
Minecraft.Windows.exe+B8EF36: E8 C5 01 9C 00        - call Minecraft.Windows.exe+154F100
Minecraft.Windows.exe+B8EF3B: 48 83 C4 28           - add rsp,28
Minecraft.Windows.exe+B8EF3F: C3                    - ret 
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+B8EF40: F3 0F 10 42 18        - movss xmm0,[rdx+18]
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+B8EF45: 48 83 C4 28           - add rsp,28
Minecraft.Windows.exe+B8EF49: C3                    - ret 
Minecraft.Windows.exe+B8EF4A: 41 B8 25 00 00 00     - mov r8d,00000025
Minecraft.Windows.exe+B8EF50: FF 50 58              - call qword ptr [rax+58]
Minecraft.Windows.exe+B8EF53: 48 8B 10              - mov rdx,[rax]
Minecraft.Windows.exe+B8EF56: 48 85 D2              - test rdx,rdx
Minecraft.Windows.exe+B8EF59: 75 CB                 - jne Minecraft.Windows.exe+B8EF26
Minecraft.Windows.exe+B8EF5B: E8 50 50 B0 FF        - call Minecraft.Windows.exe+693FB0
Minecraft.Windows.exe+B8EF60: CC                    - int 3 
Minecraft.Windows.exe+B8EF61: E8 4A 50 B0 FF        - call Minecraft.Windows.exe+693FB0
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>407</ID>
              <Description>"FreeCam (Beta)"</Description>
              <LastState/>
              <Color>FF0080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-11
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(SavedChunkFreelook,Minecraft.Windows.exe,80 B9 F8 26 00 00 01) // should be unique
alloc(newmem,$1000,SavedChunkFreelook)

label(code)
label(return)

aobscanmodule(FLY,Minecraft.Windows.exe,0F B6 40 04 C3 CC CC CC CC CC CC CC CC CC 4C) // should be unique
alloc(newmem1,$1000,FLY)

label(code1)
label(return1)

newmem:
newmen1:
code:
  cmp byte ptr [rcx+000026F8],00
  jmp return

code1:
  mov [rax+04],1
  ret
  jmp return



SavedChunkFreelook:
  jmp newmem
  nop 2

return:
registersymbol(SavedChunkFreelook)

return1:
registersymbol(FLY)

FLY:
  mov [rax+04],1
  ret
  jmp return

[DISABLE]

SavedChunkFreelook:
  db 80 B9 F8 26 00 00 01

unregistersymbol(FLY)
dealloc(newmem)

FLY:
  db 0F B6 40 04 C3

unregistersymbol(SavedChunkFreelook)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+BFACFB

Minecraft.Windows.exe+BFACD5: 48 89 74 24 18        - mov [rsp+18],rsi
Minecraft.Windows.exe+BFACDA: 55                    - push rbp
Minecraft.Windows.exe+BFACDB: 57                    - push rdi
Minecraft.Windows.exe+BFACDC: 41 56                 - push r14
Minecraft.Windows.exe+BFACDE: 48 8D 6C 24 D0        - lea rbp,[rsp-30]
Minecraft.Windows.exe+BFACE3: 48 81 EC 30 01 00 00  - sub rsp,00000130
Minecraft.Windows.exe+BFACEA: 48 8B 05 0F E4 DD 02  - mov rax,[Minecraft.Windows.exe+39D9100]
Minecraft.Windows.exe+BFACF1: 48 33 C4              - xor rax,rsp
Minecraft.Windows.exe+BFACF4: 48 89 45 20           - mov [rbp+20],rax
Minecraft.Windows.exe+BFACF8: 48 8B D9              - mov rbx,rcx
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+BFACFB: 80 B9 F8 26 00 00 01  - cmp byte ptr [rcx+000026F8],01
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+BFAD02: 0F 85 C6 02 00 00     - jne Minecraft.Windows.exe+BFAFCE
Minecraft.Windows.exe+BFAD08: 80 79 18 00           - cmp byte ptr [rcx+18],00
Minecraft.Windows.exe+BFAD0C: 0F 84 E0 02 00 00     - je Minecraft.Windows.exe+BFAFF2
Minecraft.Windows.exe+BFAD12: 48 8B 41 08           - mov rax,[rcx+08]
Minecraft.Windows.exe+BFAD16: 48 8B 08              - mov rcx,[rax]
Minecraft.Windows.exe+BFAD19: 8B 43 10              - mov eax,[rbx+10]
Minecraft.Windows.exe+BFAD1C: 89 44 24 20           - mov [rsp+20],eax
Minecraft.Windows.exe+BFAD20: 48 8D 54 24 20        - lea rdx,[rsp+20]
Minecraft.Windows.exe+BFAD25: E8 A6 25 04 00        - call Minecraft.Windows.exe+C3D2D0
Minecraft.Windows.exe+BFAD2A: 48 8B F8              - mov rdi,rax
}



</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>408</ID>
              <Description>"Force Show Coordinates (1.17.02)"</Description>
              <LastState/>
              <Color>FF0080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-07-03
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ForceShowCoords,Minecraft.Windows.exe,09 00 00 48 85 C0 74 0D 80 78 04 00 74 07) // should be unique
alloc(newmem,$1000,ForceShowCoords)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [rax+04],1
  je Minecraft.Windows.exe+B4DFD0
  jmp return

ForceShowCoords+08:
  jmp newmem
  nop
return:
registersymbol(ForceShowCoords)

[DISABLE]

ForceShowCoords+08:
  db 80 78 04 00 74 07

unregistersymbol(ForceShowCoords)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+B4DFC3

Minecraft.Windows.exe+B4DF99: 48 8B 48 08                    - mov rcx,[rax+08]
Minecraft.Windows.exe+B4DF9D: 48 B8 A3 8B 2E BA E8 A2 8B 2E  - mov rax,2E8BA2E8BA2E8BA3
Minecraft.Windows.exe+B4DFA7: 48 2B CA                       - sub rcx,rdx
Minecraft.Windows.exe+B4DFAA: 48 C1 F9 04                    - sar rcx,04
Minecraft.Windows.exe+B4DFAE: 48 0F AF C8                    - imul rcx,rax
Minecraft.Windows.exe+B4DFB2: 83 F9 0E                       - cmp ecx,0E
Minecraft.Windows.exe+B4DFB5: 7E 19                          - jle Minecraft.Windows.exe+B4DFD0
Minecraft.Windows.exe+B4DFB7: 48 8D 82 A0 09 00 00           - lea rax,[rdx+000009A0]
Minecraft.Windows.exe+B4DFBE: 48 85 C0                       - test rax,rax
Minecraft.Windows.exe+B4DFC1: 74 0D                          - je Minecraft.Windows.exe+B4DFD0
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+B4DFC3: 80 78 04 00                    - cmp byte ptr [rax+04],00
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+B4DFC7: 74 07                          - je Minecraft.Windows.exe+B4DFD0
Minecraft.Windows.exe+B4DFC9: B0 01                          - mov al,01
Minecraft.Windows.exe+B4DFCB: 48 83 C4 28                    - add rsp,28
Minecraft.Windows.exe+B4DFCF: C3                             - ret 
Minecraft.Windows.exe+B4DFD0: 32 C0                          - xor al,al
Minecraft.Windows.exe+B4DFD2: 48 83 C4 28                    - add rsp,28
Minecraft.Windows.exe+B4DFD6: C3                             - ret 
Minecraft.Windows.exe+B4DFD7: CC                             - int 3 
Minecraft.Windows.exe+B4DFD8: CC                             - int 3 
Minecraft.Windows.exe+B4DFD9: CC                             - int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>409</ID>
              <Description>"FreeCam Disabler(Beta)"</Description>
              <LastState/>
              <Color>FF0080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
  Version: 
  Date   : 2021-06-11
  Author : Titus

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(SavedChunkFreelook,Minecraft.Windows.exe,80 B9 F8 26 00 00 01) // should be unique
alloc(newmem,$1000,SavedChunkFreelook)

label(code)
label(return)

aobscanmodule(FLY,Minecraft.Windows.exe,0F B6 40 04 C3 CC CC CC CC CC CC CC CC CC 4C) // should be unique
alloc(newmem1,$1000,FLY)

label(code1)
label(return1)

newmem:
newmen1:
code:
  cmp byte ptr [rcx+000026F8],01
  jmp return

code1:
  mov [rax+04],0
  ret
  jmp return



SavedChunkFreelook:
  jmp newmem
  nop 2

return:
registersymbol(SavedChunkFreelook)

return1:
registersymbol(FLY)

FLY:
  mov [rax+04],0
  ret
  jmp return

[DISABLE]

SavedChunkFreelook:
  db 80 B9 F8 26 00 00 01

unregistersymbol(FLY)
dealloc(newmem)

FLY:
  db 0F B6 40 04 C3

unregistersymbol(SavedChunkFreelook)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Minecraft.Windows.exe+BFACFB

Minecraft.Windows.exe+BFACD5: 48 89 74 24 18        - mov [rsp+18],rsi
Minecraft.Windows.exe+BFACDA: 55                    - push rbp
Minecraft.Windows.exe+BFACDB: 57                    - push rdi
Minecraft.Windows.exe+BFACDC: 41 56                 - push r14
Minecraft.Windows.exe+BFACDE: 48 8D 6C 24 D0        - lea rbp,[rsp-30]
Minecraft.Windows.exe+BFACE3: 48 81 EC 30 01 00 00  - sub rsp,00000130
Minecraft.Windows.exe+BFACEA: 48 8B 05 0F E4 DD 02  - mov rax,[Minecraft.Windows.exe+39D9100]
Minecraft.Windows.exe+BFACF1: 48 33 C4              - xor rax,rsp
Minecraft.Windows.exe+BFACF4: 48 89 45 20           - mov [rbp+20],rax
Minecraft.Windows.exe+BFACF8: 48 8B D9              - mov rbx,rcx
// ---------- INJECTING HERE ----------
Minecraft.Windows.exe+BFACFB: 80 B9 F8 26 00 00 01  - cmp byte ptr [rcx+000026F8],01
// ---------- DONE INJECTING  ----------
Minecraft.Windows.exe+BFAD02: 0F 85 C6 02 00 00     - jne Minecraft.Windows.exe+BFAFCE
Minecraft.Windows.exe+BFAD08: 80 79 18 00           - cmp byte ptr [rcx+18],00
Minecraft.Windows.exe+BFAD0C: 0F 84 E0 02 00 00     - je Minecraft.Windows.exe+BFAFF2
Minecraft.Windows.exe+BFAD12: 48 8B 41 08           - mov rax,[rcx+08]
Minecraft.Windows.exe+BFAD16: 48 8B 08              - mov rcx,[rax]
Minecraft.Windows.exe+BFAD19: 8B 43 10              - mov eax,[rbx+10]
Minecraft.Windows.exe+BFAD1C: 89 44 24 20           - mov [rsp+20],eax
Minecraft.Windows.exe+BFAD20: 48 8D 54 24 20        - lea rdx,[rsp+20]
Minecraft.Windows.exe+BFAD25: E8 A6 25 04 00        - call Minecraft.Windows.exe+C3D2D0
Minecraft.Windows.exe+BFAD2A: 48 8B F8              - mov rdi,rax
}



</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>416</ID>
      <Description>"Info"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <ShowAsSigned>0</ShowAsSigned>
      <GroupHeader>1</GroupHeader>
      <Address>v1</Address>
      <CheatEntries>
        <CheatEntry>
          <ID>2588</ID>
          <Description>"LocalPlayer"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>"Minecraft.Windows.exe"+041457D8</Address>
          <Offsets>
            <Offset>0</Offset>
            <Offset>C8</Offset>
            <Offset>20</Offset>
            <Offset>0</Offset>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>417</ID>
          <Description>"RapidHit Adress Example:"</Description>
          <LastState Value="" RealAddress="26407F59260"/>
          <ShowAsSigned>0</ShowAsSigned>
          <GroupHeader>1</GroupHeader>
          <Address>26407F59260</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry Color="20000000">
      <Description>Change of mov [rcx+0000050C],eax</Description>
      <AddressString>Minecraft.Windows.exe+1CEECE2</AddressString>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>8B</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>81</Byte>
        <Byte>0C</Byte>
        <Byte>05</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>04</Byte>
        <Byte>89</Byte>
        <Byte>81</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [rcx+18],eax</Description>
      <AddressString>Minecraft.Windows.exe+892A45</AddressString>
      <Before>
        <Byte>41</Byte>
        <Byte>14</Byte>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>42</Byte>
        <Byte>1C</Byte>
        <Byte>88</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [rcx+18],eax</Description>
      <AddressString>Minecraft.Windows.exe+8F72E4</AddressString>
      <Before>
        <Byte>41</Byte>
        <Byte>14</Byte>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>42</Byte>
        <Byte>1C</Byte>
        <Byte>88</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [rcx+18],eax</Description>
      <AddressString>Minecraft.Windows.exe+892A45</AddressString>
      <Before>
        <Byte>41</Byte>
        <Byte>14</Byte>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>42</Byte>
        <Byte>1C</Byte>
        <Byte>88</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>code1</Name>
      <Address>164D8BB0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>originalcode1</Name>
      <Address>164D8BB0200</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Structures StructVersion="2">
    <Structure Name="LocalPlayer 1.17.10" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000000" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000010" DisplayMethod="Hexadecimal"/>
        <Element Offset="20" Vartype="4 Bytes" Bytesize="4" RLECount="74" OffsetHex="00000014" DisplayMethod="Unsigned Integer"/>
        <Element Offset="316" Vartype="Double" Bytesize="8" OffsetHex="0000013C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="324" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00000144" DisplayMethod="Unsigned Integer"/>
        <Element Offset="336" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000150" DisplayMethod="Unsigned Integer"/>
        <Element Offset="352" Vartype="Float" Bytesize="4" RLECount="5" OffsetHex="00000160" DisplayMethod="Unsigned Integer"/>
        <Element Offset="372" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000174" DisplayMethod="Unsigned Integer"/>
        <Element Offset="384" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00000180" DisplayMethod="Unsigned Integer"/>
        <Element Offset="408" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000198" DisplayMethod="Hexadecimal"/>
        <Element Offset="412" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000019C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="416" Vartype="Pointer" Bytesize="8" OffsetHex="000001A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="424" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000001A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="436" Vartype="Double" Bytesize="8" OffsetHex="000001B4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="444" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000001BC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="452" Vartype="4 Bytes" Bytesize="4" OffsetHex="000001C4" DisplayMethod="Hexadecimal"/>
        <Element Offset="456" Vartype="Pointer" Bytesize="8" OffsetHex="000001C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="464" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000001D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="476" Vartype="Byte" Bytesize="1" OffsetHex="000001DC" Description="LPFallDistance" DisplayMethod="Signed Integer"/>
        <Element Offset="480" Vartype="Byte" Bytesize="1" OffsetHex="000001E0" Description="LPIsOnGround" DisplayMethod="Hexadecimal"/>
        <Element Offset="482" Vartype="Byte" Bytesize="1" OffsetHex="000001E2" Description="LPIsMoveObstructed" DisplayMethod="Signed Integer"/>
        <Element Offset="484" Vartype="Double" Bytesize="8" OffsetHex="000001E4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="492" Vartype="Float" Bytesize="4" RLECount="9" OffsetHex="000001EC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="528" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00000210" DisplayMethod="Unsigned Integer"/>
        <Element Offset="560" Vartype="Double" Bytesize="8" OffsetHex="00000230" DisplayMethod="Unsigned Integer"/>
        <Element Offset="568" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000238" DisplayMethod="Unsigned Integer"/>
        <Element Offset="572" Vartype="Double" Bytesize="8" RLECount="2" OffsetHex="0000023C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="588" Vartype="String" Bytesize="4" OffsetHex="0000024C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="592" Vartype="Float" Bytesize="4" OffsetHex="00000250" DisplayMethod="Unsigned Integer"/>
        <Element Offset="596" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000254" DisplayMethod="Unsigned Integer"/>
        <Element Offset="608" Vartype="Float" Bytesize="4" OffsetHex="00000260" DisplayMethod="Unsigned Integer"/>
        <Element Offset="612" Vartype="4 Bytes" Bytesize="4" RLECount="16" OffsetHex="00000264" DisplayMethod="Unsigned Integer"/>
        <Element Offset="676" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000002A4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="684" Vartype="4 Bytes" Bytesize="4" RLECount="11" OffsetHex="000002AC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="728" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000002D8" DisplayMethod="Hexadecimal"/>
        <Element Offset="740" Vartype="4 Bytes" Bytesize="4" RLECount="21" OffsetHex="000002E4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="824" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000338" DisplayMethod="Hexadecimal"/>
        <Element Offset="828" Vartype="Double" Bytesize="8" RLECount="2" OffsetHex="0000033C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="844" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="0000034C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="852" Vartype="Float" Bytesize="4" OffsetHex="00000354" DisplayMethod="Unsigned Integer"/>
        <Element Offset="856" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000358" DisplayMethod="Unsigned Integer"/>
        <Element Offset="872" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00000368" DisplayMethod="Unsigned Integer"/>
        <Element Offset="896" Vartype="Float" Bytesize="4" OffsetHex="00000380" DisplayMethod="Unsigned Integer"/>
        <Element Offset="900" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000384" DisplayMethod="Hexadecimal"/>
        <Element Offset="904" Vartype="Pointer" Bytesize="8" OffsetHex="00000388" DisplayMethod="Unsigned Integer"/>
        <Element Offset="912" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000390" DisplayMethod="Unsigned Integer"/>
        <Element Offset="936" Vartype="Pointer" Bytesize="8" OffsetHex="000003A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="944" Vartype="Float" Bytesize="4" OffsetHex="000003B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="948" Vartype="4 Bytes" Bytesize="4" OffsetHex="000003B4" DisplayMethod="Hexadecimal"/>
        <Element Offset="952" Vartype="Pointer" Bytesize="8" OffsetHex="000003B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="960" Vartype="4 Bytes" Bytesize="4" RLECount="12" OffsetHex="000003C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1008" Vartype="String" Bytesize="10" OffsetHex="000003F0" Description="LPNameSpace" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1018" Vartype="Byte" Bytesize="1" RLECount="2" OffsetHex="000003FA" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1020" Vartype="4 Bytes" Bytesize="4" OffsetHex="000003FC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1024" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000400" Description="LPNameSpaceLength" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1028" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000404" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1040" Vartype="String" Bytesize="7" OffsetHex="00000410" Description="LPTypeName" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1047" Vartype="Byte" Bytesize="1" OffsetHex="00000417" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1048" Vartype="4 Bytes" Bytesize="4" RLECount="14" OffsetHex="00000418" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1104" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000450" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1120" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000460" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1136" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000470" DisplayMethod="Hexadecimal"/>
        <Element Offset="1144" Vartype="Pointer" Bytesize="8" OffsetHex="00000478" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1152" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00000480" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1184" Vartype="Pointer" Bytesize="8" OffsetHex="000004A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1192" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000004A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1200" Vartype="Pointer" Bytesize="8" OffsetHex="000004B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1208" Vartype="Pointer" Bytesize="8" OffsetHex="000004B8" DisplayMethod="Unsigned Integer">
          <Structure Name="Autocreated from 1BFBB2FD1D0" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="Pointer" Bytesize="8" OffsetHex="00000000" DisplayMethod="Unsigned Integer"/>
              <Element Offset="8" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000008" DisplayMethod="Unsigned Integer"/>
              <Element Offset="32" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00000020" DisplayMethod="Unsigned Integer"/>
              <Element Offset="56" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000038" DisplayMethod="Unsigned Integer"/>
              <Element Offset="76" Vartype="Double" Bytesize="8" OffsetHex="0000004C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="84" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000054" DisplayMethod="Unsigned Integer"/>
              <Element Offset="88" Vartype="Pointer" Bytesize="8" OffsetHex="00000058" DisplayMethod="Unsigned Integer"/>
              <Element Offset="96" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000060" DisplayMethod="Unsigned Integer"/>
              <Element Offset="104" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00000068" DisplayMethod="Unsigned Integer"/>
              <Element Offset="128" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000080" DisplayMethod="Unsigned Integer"/>
              <Element Offset="144" Vartype="Pointer" Bytesize="8" RLECount="6" OffsetHex="00000090" DisplayMethod="Unsigned Integer"/>
              <Element Offset="192" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000000C0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="200" Vartype="Pointer" Bytesize="8" OffsetHex="000000C8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="208" Vartype="4 Bytes" Bytesize="4" RLECount="24" OffsetHex="000000D0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="304" Vartype="Pointer" Bytesize="8" OffsetHex="00000130" DisplayMethod="Unsigned Integer"/>
              <Element Offset="312" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000138" DisplayMethod="Unsigned Integer"/>
              <Element Offset="336" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000150" DisplayMethod="Unsigned Integer"/>
              <Element Offset="352" Vartype="4 Bytes" Bytesize="4" RLECount="10" OffsetHex="00000160" DisplayMethod="Unsigned Integer"/>
              <Element Offset="392" Vartype="Pointer" Bytesize="8" OffsetHex="00000188" DisplayMethod="Unsigned Integer"/>
              <Element Offset="400" Vartype="Float" Bytesize="4" OffsetHex="00000190" DisplayMethod="Unsigned Integer"/>
              <Element Offset="404" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000194" DisplayMethod="Unsigned Integer"/>
              <Element Offset="408" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000198" DisplayMethod="Unsigned Integer"/>
              <Element Offset="412" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="0000019C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="424" Vartype="4 Bytes" Bytesize="4" OffsetHex="000001A8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="428" Vartype="Float" Bytesize="4" OffsetHex="000001AC" DisplayMethod="Unsigned Integer"/>
              <Element Offset="432" Vartype="4 Bytes" Bytesize="4" RLECount="25" OffsetHex="000001B0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="532" Vartype="Double" Bytesize="8" OffsetHex="00000214" DisplayMethod="Unsigned Integer"/>
              <Element Offset="540" Vartype="4 Bytes" Bytesize="4" RLECount="27" OffsetHex="0000021C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="648" Vartype="Pointer" Bytesize="8" RLECount="7" OffsetHex="00000288" DisplayMethod="Unsigned Integer"/>
              <Element Offset="704" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="000002C0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="736" Vartype="Pointer" Bytesize="8" RLECount="4" OffsetHex="000002E0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="768" Vartype="Float" Bytesize="4" OffsetHex="00000300" DisplayMethod="Unsigned Integer"/>
              <Element Offset="772" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000304" DisplayMethod="Unsigned Integer"/>
              <Element Offset="776" Vartype="Pointer" Bytesize="8" OffsetHex="00000308" DisplayMethod="Unsigned Integer"/>
              <Element Offset="784" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000310" DisplayMethod="Unsigned Integer"/>
              <Element Offset="792" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00000318" DisplayMethod="Unsigned Integer"/>
              <Element Offset="816" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00000330" DisplayMethod="Unsigned Integer"/>
              <Element Offset="844" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="0000034C" DisplayMethod="Hexadecimal"/>
              <Element Offset="852" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000354" DisplayMethod="Unsigned Integer"/>
              <Element Offset="864" Vartype="Pointer" Bytesize="8" RLECount="9" OffsetHex="00000360" DisplayMethod="Unsigned Integer"/>
              <Element Offset="936" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000003A8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="944" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000003B0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="960" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000003C0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="972" Vartype="4 Bytes" Bytesize="4" OffsetHex="000003CC" DisplayMethod="Hexadecimal"/>
              <Element Offset="976" Vartype="Pointer" Bytesize="8" OffsetHex="000003D0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="984" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000003D8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1008" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000003F0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1032" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000408" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1052" Vartype="Double" Bytesize="8" OffsetHex="0000041C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1060" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000424" DisplayMethod="Hexadecimal"/>
              <Element Offset="1064" Vartype="Pointer" Bytesize="8" OffsetHex="00000428" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1072" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000430" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1080" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00000438" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1104" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000450" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1120" Vartype="Pointer" Bytesize="8" RLECount="6" OffsetHex="00000460" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1168" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000490" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1172" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000494" DisplayMethod="Hexadecimal"/>
              <Element Offset="1176" Vartype="Pointer" Bytesize="8" OffsetHex="00000498" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1184" Vartype="4 Bytes" Bytesize="4" RLECount="21" OffsetHex="000004A0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1268" Vartype="4 Bytes" Bytesize="4" OffsetHex="000004F4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1272" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000004F8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1280" Vartype="Pointer" Bytesize="8" OffsetHex="00000500" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1288" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000508" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1308" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000051C" DisplayMethod="Hexadecimal"/>
              <Element Offset="1312" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000520" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1328" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000530" DisplayMethod="Hexadecimal"/>
              <Element Offset="1332" Vartype="Float" Bytesize="4" OffsetHex="00000534" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1336" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000538" DisplayMethod="Hexadecimal"/>
              <Element Offset="1348" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000544" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1352" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000548" DisplayMethod="Hexadecimal"/>
              <Element Offset="1356" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="0000054C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1368" Vartype="Pointer" Bytesize="8" OffsetHex="00000558" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1376" Vartype="Double" Bytesize="8" OffsetHex="00000560" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1384" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000568" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1388" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="0000056C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1396" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000574" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1404" Vartype="Float" Bytesize="4" OffsetHex="0000057C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1408" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000580" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1412" Vartype="Float" Bytesize="4" OffsetHex="00000584" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1416" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000588" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1420" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000058C" DisplayMethod="Hexadecimal"/>
              <Element Offset="1424" Vartype="4 Bytes" Bytesize="4" RLECount="18" OffsetHex="00000590" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1496" Vartype="4 Bytes" Bytesize="4" OffsetHex="000005D8" DisplayMethod="Hexadecimal"/>
              <Element Offset="1500" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="000005DC" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1504" Vartype="4 Bytes" Bytesize="4" OffsetHex="000005E0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1508" Vartype="4 Bytes" Bytesize="4" OffsetHex="000005E4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1512" Vartype="4 Bytes" Bytesize="4" RLECount="18" OffsetHex="000005E8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1584" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000630" DisplayMethod="Hexadecimal"/>
              <Element Offset="1592" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00000638" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1624" Vartype="Pointer" Bytesize="8" RLECount="7" OffsetHex="00000658" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1680" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000690" DisplayMethod="Hexadecimal"/>
              <Element Offset="1704" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000006A8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1712" Vartype="Pointer" Bytesize="8" RLECount="4" OffsetHex="000006B0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1744" Vartype="Float" Bytesize="4" OffsetHex="000006D0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1748" Vartype="4 Bytes" Bytesize="4" OffsetHex="000006D4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1752" Vartype="Pointer" Bytesize="8" OffsetHex="000006D8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1760" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000006E0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1768" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000006E8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1792" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000700" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1808" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000710" DisplayMethod="Hexadecimal"/>
              <Element Offset="1812" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000714" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1820" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="0000071C" DisplayMethod="Hexadecimal"/>
              <Element Offset="1828" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000724" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1840" Vartype="Pointer" Bytesize="8" RLECount="9" OffsetHex="00000730" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1912" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000778" DisplayMethod="Hexadecimal"/>
              <Element Offset="1920" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000780" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1936" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00000790" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1944" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000798" DisplayMethod="Hexadecimal"/>
              <Element Offset="1960" Vartype="4 Bytes" Bytesize="4" OffsetHex="000007A8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1964" Vartype="String" Bytesize="11" OffsetHex="000007AC" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1975" Vartype="Byte" Bytesize="1" OffsetHex="000007B7" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1976" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000007B8" DisplayMethod="Hexadecimal"/>
              <Element Offset="1984" Vartype="String" Bytesize="8" OffsetHex="000007C0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1992" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000007C8" DisplayMethod="Hexadecimal"/>
              <Element Offset="2000" Vartype="String" Bytesize="7" OffsetHex="000007D0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2007" Vartype="Byte" Bytesize="1" OffsetHex="000007D7" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2008" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000007D8" DisplayMethod="Hexadecimal"/>
              <Element Offset="2016" Vartype="String" Bytesize="11" OffsetHex="000007E0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2027" Vartype="Byte" Bytesize="1" OffsetHex="000007EB" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2028" Vartype="4 Bytes" Bytesize="4" OffsetHex="000007EC" DisplayMethod="Hexadecimal"/>
              <Element Offset="2032" Vartype="4 Bytes" Bytesize="4" OffsetHex="000007F0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2036" Vartype="String" Bytesize="6" OffsetHex="000007F4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2042" Vartype="Byte" Bytesize="1" RLECount="2" OffsetHex="000007FA" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2044" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000007FC" DisplayMethod="Hexadecimal"/>
              <Element Offset="2056" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000808" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2080" Vartype="String" Bytesize="4" OffsetHex="00000820" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2084" Vartype="4 Bytes" Bytesize="4" RLECount="33" OffsetHex="00000824" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2216" Vartype="String" Bytesize="12" OffsetHex="000008A8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2228" Vartype="String" Bytesize="6" OffsetHex="000008B4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2234" Vartype="String" Bytesize="9" OffsetHex="000008BA" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2243" Vartype="Byte" Bytesize="1" OffsetHex="000008C3" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2244" Vartype="String" Bytesize="6" OffsetHex="000008C4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2250" Vartype="Byte" Bytesize="1" RLECount="2" OffsetHex="000008CA" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2252" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="000008CC" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2284" Vartype="String" Bytesize="10" OffsetHex="000008EC" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2294" Vartype="Byte" Bytesize="1" RLECount="2" OffsetHex="000008F6" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2296" Vartype="String" Bytesize="5" OffsetHex="000008F8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2301" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="000008FD" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2304" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000900" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2312" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000908" DisplayMethod="Hexadecimal"/>
              <Element Offset="2320" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000910" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2328" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000918" DisplayMethod="Hexadecimal"/>
              <Element Offset="2336" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000920" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2340" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000924" DisplayMethod="Hexadecimal"/>
              <Element Offset="2348" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000092C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2352" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000930" DisplayMethod="Hexadecimal"/>
              <Element Offset="2364" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000093C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2368" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000940" DisplayMethod="Hexadecimal"/>
              <Element Offset="2376" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000948" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2380" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="0000094C" DisplayMethod="Hexadecimal"/>
              <Element Offset="2388" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000954" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2392" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000958" DisplayMethod="Hexadecimal"/>
              <Element Offset="2400" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000960" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2404" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000964" DisplayMethod="Hexadecimal"/>
              <Element Offset="2412" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000096C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2416" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000970" DisplayMethod="Hexadecimal"/>
              <Element Offset="2420" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000974" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2424" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000978" DisplayMethod="Hexadecimal"/>
              <Element Offset="2432" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000980" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2436" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000984" DisplayMethod="Hexadecimal"/>
              <Element Offset="2440" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000988" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2444" Vartype="Double" Bytesize="8" OffsetHex="0000098C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2452" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00000994" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2460" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000099C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2464" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000009A0" DisplayMethod="Hexadecimal"/>
              <Element Offset="2472" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009A8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2476" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009AC" DisplayMethod="Hexadecimal"/>
              <Element Offset="2480" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000009B0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2488" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009B8" DisplayMethod="Hexadecimal"/>
              <Element Offset="2492" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009BC" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2496" Vartype="Double" Bytesize="8" OffsetHex="000009C0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2504" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000009C8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2512" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009D0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2516" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000009D4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2524" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009DC" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2528" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009E0" DisplayMethod="Hexadecimal"/>
              <Element Offset="2532" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009E4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2536" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009E8" DisplayMethod="Hexadecimal"/>
              <Element Offset="2540" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009EC" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2544" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009F0" DisplayMethod="Hexadecimal"/>
              <Element Offset="2548" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009F4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2552" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000009F8" DisplayMethod="Hexadecimal"/>
              <Element Offset="2560" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A00" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2564" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A04" DisplayMethod="Hexadecimal"/>
              <Element Offset="2568" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A08" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2572" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A0C" DisplayMethod="Hexadecimal"/>
              <Element Offset="2576" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000A10" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2584" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000A18" DisplayMethod="Hexadecimal"/>
              <Element Offset="2592" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A20" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2596" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A24" DisplayMethod="Hexadecimal"/>
              <Element Offset="2600" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A28" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2604" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A2C" DisplayMethod="Hexadecimal"/>
              <Element Offset="2608" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A30" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2612" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000A34" DisplayMethod="Hexadecimal"/>
              <Element Offset="2620" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A3C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2624" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A40" DisplayMethod="Hexadecimal"/>
              <Element Offset="2628" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000A44" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2636" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A4C" DisplayMethod="Hexadecimal"/>
              <Element Offset="2640" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A50" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2644" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A54" DisplayMethod="Hexadecimal"/>
              <Element Offset="2648" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000A58" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2656" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000A60" DisplayMethod="Hexadecimal"/>
              <Element Offset="2664" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A68" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2668" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A6C" DisplayMethod="Hexadecimal"/>
              <Element Offset="2672" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000A70" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2680" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A78" DisplayMethod="Hexadecimal"/>
              <Element Offset="2684" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A7C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2688" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A80" DisplayMethod="Hexadecimal"/>
              <Element Offset="2692" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A84" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2696" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000A88" DisplayMethod="Hexadecimal"/>
              <Element Offset="2704" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A90" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2708" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A94" DisplayMethod="Hexadecimal"/>
              <Element Offset="2712" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A98" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2716" Vartype="Double" Bytesize="8" OffsetHex="00000A9C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2724" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00000AA4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2732" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AAC" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2736" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000AB0" DisplayMethod="Hexadecimal"/>
              <Element Offset="2744" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AB8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2748" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000ABC" DisplayMethod="Hexadecimal"/>
              <Element Offset="2752" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AC0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2756" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AC4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2760" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AC8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2764" Vartype="Double" Bytesize="8" OffsetHex="00000ACC" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2772" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00000AD4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2780" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000ADC" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2784" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000AE0" DisplayMethod="Hexadecimal"/>
              <Element Offset="2792" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AE8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2796" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AEC" DisplayMethod="Hexadecimal"/>
              <Element Offset="2800" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AF0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2804" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000AF4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2812" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AFC" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2816" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B00" DisplayMethod="Hexadecimal"/>
              <Element Offset="2820" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B04" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2824" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B08" DisplayMethod="Hexadecimal"/>
              <Element Offset="2828" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B0C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2832" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B10" DisplayMethod="Hexadecimal"/>
              <Element Offset="2840" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B18" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2844" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B1C" DisplayMethod="Hexadecimal"/>
              <Element Offset="2848" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B20" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2856" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B28" DisplayMethod="Hexadecimal"/>
              <Element Offset="2860" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B2C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2864" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B30" DisplayMethod="Hexadecimal"/>
              <Element Offset="2868" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B34" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2872" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B38" DisplayMethod="Hexadecimal"/>
              <Element Offset="2880" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B40" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2884" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B44" DisplayMethod="Hexadecimal"/>
              <Element Offset="2888" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B48" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2892" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B4C" DisplayMethod="Hexadecimal"/>
              <Element Offset="2896" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B50" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2900" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B54" DisplayMethod="Hexadecimal"/>
              <Element Offset="2904" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B58" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2908" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B5C" DisplayMethod="Hexadecimal"/>
              <Element Offset="2916" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B64" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2920" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B68" DisplayMethod="Hexadecimal"/>
              <Element Offset="2928" Vartype="4 Bytes" Bytesize="4" RLECount="176" OffsetHex="00000B70" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3632" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00000E30" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3656" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E48" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3664" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E50" DisplayMethod="Hexadecimal"/>
              <Element Offset="3672" Vartype="Float" Bytesize="4" OffsetHex="00000E58" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3676" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000E5C" DisplayMethod="Hexadecimal"/>
              <Element Offset="3680" Vartype="String" Bytesize="5" OffsetHex="00000E60" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3685" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="00000E65" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3688" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000E68" DisplayMethod="Hexadecimal"/>
              <Element Offset="3692" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000E6C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3696" Vartype="Pointer" Bytesize="8" OffsetHex="00000E70" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3704" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000E78" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3716" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000E84" DisplayMethod="Hexadecimal"/>
              <Element Offset="3728" Vartype="Pointer" Bytesize="8" OffsetHex="00000E90" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3736" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E98" DisplayMethod="Hexadecimal"/>
              <Element Offset="3744" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000EA0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3768" Vartype="Pointer" Bytesize="8" RLECount="5" OffsetHex="00000EB8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3808" Vartype="Float" Bytesize="4" OffsetHex="00000EE0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3812" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000EE4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3816" Vartype="Pointer" Bytesize="8" OffsetHex="00000EE8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3824" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000EF0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3828" Vartype="Double" Bytesize="8" RLECount="3" OffsetHex="00000EF4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3852" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000F0C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3868" Vartype="Double" Bytesize="8" OffsetHex="00000F1C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3876" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000F24" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3880" Vartype="Pointer" Bytesize="8" OffsetHex="00000F28" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3888" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000F30" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3892" Vartype="Double" Bytesize="8" RLECount="3" OffsetHex="00000F34" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3916" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000F4C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3936" Vartype="Pointer" Bytesize="8" OffsetHex="00000F60" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3944" Vartype="Float" Bytesize="4" OffsetHex="00000F68" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3948" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000F6C" DisplayMethod="Hexadecimal"/>
              <Element Offset="3952" Vartype="Pointer" Bytesize="8" OffsetHex="00000F70" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3960" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000F78" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3964" Vartype="Double" Bytesize="8" RLECount="3" OffsetHex="00000F7C" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3988" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000F94" DisplayMethod="Unsigned Integer"/>
              <Element Offset="4008" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000FA8" DisplayMethod="Hexadecimal"/>
              <Element Offset="4012" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000FAC" DisplayMethod="Unsigned Integer"/>
              <Element Offset="4016" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000FB0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="4032" Vartype="Float" Bytesize="4" OffsetHex="00000FC0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="4036" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000FC4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="4040" Vartype="Pointer" Bytesize="8" OffsetHex="00000FC8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="4048" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000FD0" DisplayMethod="Unsigned Integer"/>
              <Element Offset="4052" Vartype="Double" Bytesize="8" RLECount="3" OffsetHex="00000FD4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="4076" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000FEC" DisplayMethod="Unsigned Integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="1216" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000004C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1232" Vartype="Float" Bytesize="4" OffsetHex="000004D0" Description="LPX1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1236" Vartype="Float" Bytesize="4" OffsetHex="000004D4" Description="LPY1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1240" Vartype="Float" Bytesize="4" OffsetHex="000004D8" Description="LPZ1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1244" Vartype="Float" Bytesize="4" OffsetHex="000004DC" Description="LPX2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1248" Vartype="Float" Bytesize="4" OffsetHex="000004E0" Description="LPY2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1252" Vartype="Float" Bytesize="4" OffsetHex="000004E4" Description="LPZ2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1256" Vartype="Double" Bytesize="8" OffsetHex="000004E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1260" Vartype="Float" Bytesize="4" OffsetHex="000004EC" Description="LPHBWidth" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1264" Vartype="Float" Bytesize="4" OffsetHex="000004F0" Description="LPHBHeight" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1268" Vartype="Float" Bytesize="4" OffsetHex="000004F4" Description="LPX3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1272" Vartype="Float" Bytesize="4" OffsetHex="000004F8" Description="LPY3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1276" Vartype="Float" Bytesize="4" OffsetHex="000004FC" Description="LPZ3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1280" Vartype="Float" Bytesize="4" OffsetHex="00000500" Description="LPX4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1284" Vartype="Float" Bytesize="4" OffsetHex="00000504" Description="LPY4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1288" Vartype="Float" Bytesize="4" OffsetHex="00000508" Description="LPZ4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1292" Vartype="Float" Bytesize="4" OffsetHex="0000050C" Description="LPVelX" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1296" Vartype="Float" Bytesize="4" OffsetHex="00000510" Description="LPVelY" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1300" Vartype="Float" Bytesize="4" OffsetHex="00000514" Description="LPVelZ" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1304" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000518" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1320" Vartype="Pointer" Bytesize="8" OffsetHex="00000528" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1328" Vartype="4 Bytes" Bytesize="4" RLECount="17" OffsetHex="00000530" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1396" Vartype="Double" Bytesize="8" OffsetHex="00000574" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1404" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000057C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1408" Vartype="Double" Bytesize="8" OffsetHex="00000580" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1416" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000588" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1420" Vartype="Double" Bytesize="8" OffsetHex="0000058C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1428" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000594" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1432" Vartype="Pointer" Bytesize="8" OffsetHex="00000598" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1440" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000005A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1448" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000005A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1472" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000005C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1488" Vartype="Pointer" Bytesize="8" OffsetHex="000005D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1496" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000005D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1512" Vartype="4 Bytes" Bytesize="4" OffsetHex="000005E8" DisplayMethod="Hexadecimal"/>
        <Element Offset="1516" Vartype="4 Bytes" Bytesize="4" RLECount="23" OffsetHex="000005EC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1608" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000648" DisplayMethod="Hexadecimal"/>
        <Element Offset="1612" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000064C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1616" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000650" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1632" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000660" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1648" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000670" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1664" Vartype="4 Bytes" Bytesize="4" RLECount="14" OffsetHex="00000680" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1720" Vartype="Pointer" Bytesize="8" RLECount="6" OffsetHex="000006B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1768" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000006E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1776" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000006F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1792" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00000700" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1824" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00000720" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1832" Vartype="Byte" Bytesize="1" RLECount="8" OffsetHex="00000728" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1840" Vartype="4 Bytes" Bytesize="4" RLECount="15" OffsetHex="00000730" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1900" Vartype="Float" Bytesize="4" OffsetHex="0000076C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1904" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000770" DisplayMethod="Hexadecimal"/>
        <Element Offset="1908" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000774" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1912" Vartype="Float" Bytesize="4" OffsetHex="00000778" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1916" Vartype="4 Bytes" Bytesize="4" RLECount="13" OffsetHex="0000077C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1968" Vartype="Double" Bytesize="8" OffsetHex="000007B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1976" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000007B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1984" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000007C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1992" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000007C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2000" Vartype="4 Bytes" Bytesize="4" OffsetHex="000007D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2004" Vartype="Float" Bytesize="4" OffsetHex="000007D4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2008" Vartype="4 Bytes" Bytesize="4" RLECount="16" OffsetHex="000007D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2072" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000818" Description="LPIsSpaceBarPressed" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2076" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="0000081C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2084" Vartype="Float" Bytesize="4" RLECount="4" OffsetHex="00000824" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2100" Vartype="4 Bytes" Bytesize="4" RLECount="55" OffsetHex="00000834" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2320" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000910" DisplayMethod="Hexadecimal"/>
        <Element Offset="2328" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000918" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2336" Vartype="String" Bytesize="14" OffsetHex="00000920" Description="LPName" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2350" Vartype="Byte" Bytesize="1" RLECount="2" OffsetHex="0000092E" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2352" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000930" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2376" Vartype="Pointer" Bytesize="8" OffsetHex="00000948" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2384" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000950" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2388" Vartype="Float" Bytesize="4" OffsetHex="00000954" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2392" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000958" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2400" Vartype="Float" Bytesize="4" OffsetHex="00000960" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2404" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000964" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2412" Vartype="Float" Bytesize="4" OffsetHex="0000096C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2416" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000970" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2424" Vartype="Float" Bytesize="4" OffsetHex="00000978" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2428" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="0000097C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2436" Vartype="Float" Bytesize="4" OffsetHex="00000984" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2440" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000988" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2448" Vartype="Float" Bytesize="4" OffsetHex="00000990" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2452" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000994" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2460" Vartype="Float" Bytesize="4" OffsetHex="0000099C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2464" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000009A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2472" Vartype="Float" Bytesize="4" OffsetHex="000009A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2476" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="000009AC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2496" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009C0" Description="LPIsFlying" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2500" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000009C4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2508" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009CC" Description="LPCanFly" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2512" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="000009D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2544" Vartype="Float" Bytesize="4" OffsetHex="000009F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2548" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000009F4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2556" Vartype="Float" Bytesize="4" OffsetHex="000009FC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2560" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000A00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2568" Vartype="Float" Bytesize="4" OffsetHex="00000A08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2572" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000A0C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2580" Vartype="Float" Bytesize="4" OffsetHex="00000A14" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2584" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000A18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2592" Vartype="Float" Bytesize="4" OffsetHex="00000A20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2596" Vartype="4 Bytes" Bytesize="4" RLECount="29" OffsetHex="00000A24" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2712" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000A98" DisplayMethod="Hexadecimal"/>
        <Element Offset="2724" Vartype="4 Bytes" Bytesize="4" RLECount="67" OffsetHex="00000AA4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2992" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000BB0" DisplayMethod="Hexadecimal"/>
        <Element Offset="3016" Vartype="Pointer" Bytesize="8" OffsetHex="00000BC8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3024" Vartype="4 Bytes" Bytesize="4" RLECount="20" OffsetHex="00000BD0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3104" Vartype="Pointer" Bytesize="8" RLECount="5" OffsetHex="00000C20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3144" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3148" Vartype="Float" Bytesize="4" RLECount="6" OffsetHex="00000C4C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3172" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="00000C64" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3208" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000C88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3224" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000C98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3248" Vartype="Pointer" Bytesize="8" OffsetHex="00000CB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3256" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000CB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3280" Vartype="Pointer" Bytesize="8" OffsetHex="00000CD0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3288" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000CD8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3312" Vartype="Pointer" Bytesize="8" OffsetHex="00000CF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3320" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000CF8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3344" Vartype="Pointer" Bytesize="8" OffsetHex="00000D10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3352" Vartype="4 Bytes" Bytesize="4" RLECount="10" OffsetHex="00000D18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3392" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000D40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3408" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000D50" DisplayMethod="Hexadecimal"/>
        <Element Offset="3412" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000D54" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3432" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000D68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3448" Vartype="4 Bytes" Bytesize="4" RLECount="47" OffsetHex="00000D78" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3636" Vartype="Double" Bytesize="8" OffsetHex="00000E34" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3644" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000E3C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3648" Vartype="Pointer" Bytesize="8" OffsetHex="00000E40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3656" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3664" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00000E50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3688" Vartype="4 Bytes" Bytesize="4" RLECount="10" OffsetHex="00000E68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3728" Vartype="Pointer" Bytesize="8" RLECount="15" OffsetHex="00000E90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3848" Vartype="4 Bytes" Bytesize="4" RLECount="34" OffsetHex="00000F08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3984" Vartype="Pointer" Bytesize="8" OffsetHex="00000F90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3992" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4000" Vartype="Pointer" Bytesize="8" OffsetHex="00000FA0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4008" Vartype="Double" Bytesize="8" OffsetHex="00000FA8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4016" Vartype="4 Bytes" Bytesize="4" RLECount="24" OffsetHex="00000FB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4112" Vartype="Pointer" Bytesize="8" OffsetHex="00001010" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4120" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00001018" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4144" Vartype="4 Bytes" Bytesize="4" OffsetHex="00001030" DisplayMethod="Hexadecimal"/>
        <Element Offset="4148" Vartype="4 Bytes" Bytesize="4" RLECount="39" OffsetHex="00001034" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4304" Vartype="Pointer" Bytesize="8" OffsetHex="000010D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4312" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="000010D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4332" Vartype="Double" Bytesize="8" OffsetHex="000010EC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4340" Vartype="4 Bytes" Bytesize="4" OffsetHex="000010F4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4344" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000010F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4368" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00001110" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4400" Vartype="Pointer" Bytesize="8" OffsetHex="00001130" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4408" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00001138" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4432" Vartype="4 Bytes" Bytesize="4" OffsetHex="00001150" DisplayMethod="Hexadecimal"/>
        <Element Offset="4436" Vartype="4 Bytes" Bytesize="4" RLECount="27" OffsetHex="00001154" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4544" Vartype="Pointer" Bytesize="8" OffsetHex="000011C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4552" Vartype="4 Bytes" Bytesize="4" OffsetHex="000011C8" DisplayMethod="Hexadecimal"/>
        <Element Offset="4556" Vartype="Double" Bytesize="8" OffsetHex="000011CC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4564" Vartype="4 Bytes" Bytesize="4" OffsetHex="000011D4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4568" Vartype="Pointer" Bytesize="8" OffsetHex="000011D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4576" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000011E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4584" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000011E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4608" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00001200" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4620" Vartype="Double" Bytesize="8" OffsetHex="0000120C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4628" Vartype="4 Bytes" Bytesize="4" OffsetHex="00001214" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4632" Vartype="Pointer" Bytesize="8" OffsetHex="00001218" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4640" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00001220" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4648" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00001228" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4672" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00001240" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4688" Vartype="Pointer" Bytesize="8" OffsetHex="00001250" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4696" Vartype="4 Bytes" Bytesize="4" RLECount="10" OffsetHex="00001258" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4736" Vartype="Pointer" Bytesize="8" OffsetHex="00001280" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4744" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00001288" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4776" Vartype="Pointer" Bytesize="8" RLECount="4" OffsetHex="000012A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4808" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000012C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4816" Vartype="Pointer" Bytesize="8" RLECount="9" OffsetHex="000012D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4888" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00001318" DisplayMethod="Hexadecimal"/>
        <Element Offset="4912" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00001330" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4920" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00001338" DisplayMethod="Hexadecimal"/>
        <Element Offset="4936" Vartype="Double" Bytesize="8" OffsetHex="00001348" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4944" Vartype="4 Bytes" Bytesize="4" RLECount="17" OffsetHex="00001350" DisplayMethod="Hexadecimal"/>
        <Element Offset="5012" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00001394" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5020" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="0000139C" DisplayMethod="Hexadecimal"/>
        <Element Offset="5036" Vartype="String" Bytesize="4" OffsetHex="000013AC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5040" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000013B0" DisplayMethod="Hexadecimal"/>
        <Element Offset="5052" Vartype="Float" Bytesize="4" OffsetHex="000013BC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5056" Vartype="4 Bytes" Bytesize="4" OffsetHex="000013C0" DisplayMethod="Hexadecimal"/>
        <Element Offset="5060" Vartype="Double" Bytesize="8" OffsetHex="000013C4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5068" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000013CC" DisplayMethod="Hexadecimal"/>
        <Element Offset="5084" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000013DC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5092" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000013E4" DisplayMethod="Hexadecimal"/>
        <Element Offset="5104" Vartype="Float" Bytesize="4" OffsetHex="000013F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5108" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000013F4" DisplayMethod="Hexadecimal"/>
        <Element Offset="5116" Vartype="Float" Bytesize="4" OffsetHex="000013FC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5120" Vartype="Byte" Bytesize="1" OffsetHex="00001400" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5121" Vartype="String" Bytesize="6" OffsetHex="00001401" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5127" Vartype="2 Bytes" Bytesize="2" OffsetHex="00001407" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5129" Vartype="Byte" Bytesize="1" OffsetHex="00001409" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5130" Vartype="2 Bytes" Bytesize="2" OffsetHex="0000140A" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5132" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000140C" DisplayMethod="Hexadecimal"/>
        <Element Offset="5136" Vartype="String" Bytesize="9" OffsetHex="00001410" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5145" Vartype="Byte" Bytesize="1" RLECount="2" OffsetHex="00001419" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5147" Vartype="2 Bytes" Bytesize="2" OffsetHex="0000141B" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5149" Vartype="Byte" Bytesize="1" RLECount="7" OffsetHex="0000141D" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5156" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00001424" DisplayMethod="Hexadecimal"/>
        <Element Offset="5168" Vartype="Float" Bytesize="4" OffsetHex="00001430" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5172" Vartype="4 Bytes" Bytesize="4" OffsetHex="00001434" DisplayMethod="Hexadecimal"/>
        <Element Offset="5176" Vartype="Float" Bytesize="4" OffsetHex="00001438" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5180" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="0000143C" DisplayMethod="Hexadecimal"/>
        <Element Offset="5188" Vartype="4 Bytes" Bytesize="4" OffsetHex="00001444" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5192" Vartype="4 Bytes" Bytesize="4" RLECount="14" OffsetHex="00001448" DisplayMethod="Hexadecimal"/>
        <Element Offset="5248" Vartype="Float" Bytesize="4" OffsetHex="00001480" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5252" Vartype="4 Bytes" Bytesize="4" OffsetHex="00001484" DisplayMethod="Hexadecimal"/>
        <Element Offset="5256" Vartype="Float" Bytesize="4" OffsetHex="00001488" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5260" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="0000148C" DisplayMethod="Hexadecimal"/>
        <Element Offset="5268" Vartype="Float" Bytesize="4" OffsetHex="00001494" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5272" Vartype="4 Bytes" Bytesize="4" OffsetHex="00001498" DisplayMethod="Hexadecimal"/>
        <Element Offset="5276" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000149C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5280" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000014A0" DisplayMethod="Hexadecimal"/>
        <Element Offset="5288" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000014A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5296" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000014B0" DisplayMethod="Hexadecimal"/>
        <Element Offset="5312" Vartype="Float" Bytesize="4" OffsetHex="000014C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5316" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="000014C4" DisplayMethod="Hexadecimal"/>
        <Element Offset="5336" Vartype="Double" Bytesize="8" OffsetHex="000014D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5344" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000014E0" DisplayMethod="Hexadecimal"/>
        <Element Offset="5356" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="000014EC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5360" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000014F0" DisplayMethod="Hexadecimal"/>
        <Element Offset="5368" Vartype="Double" Bytesize="8" OffsetHex="000014F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5376" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00001500" DisplayMethod="Hexadecimal"/>
        <Element Offset="5388" Vartype="Float" Bytesize="4" OffsetHex="0000150C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5392" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00001510" DisplayMethod="Hexadecimal"/>
        <Element Offset="5420" Vartype="String" Bytesize="4" OffsetHex="0000152C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5424" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00001530" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5432" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00001538" DisplayMethod="Hexadecimal"/>
        <Element Offset="5440" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00001540" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5444" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00001544" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5452" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="0000154C" DisplayMethod="Hexadecimal"/>
        <Element Offset="5488" Vartype="Float" Bytesize="4" OffsetHex="00001570" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5492" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00001574" DisplayMethod="Hexadecimal"/>
        <Element Offset="5512" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00001588" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5520" Vartype="4 Bytes" Bytesize="4" RLECount="11" OffsetHex="00001590" DisplayMethod="Hexadecimal"/>
        <Element Offset="5564" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000015BC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5572" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000015C4" DisplayMethod="Hexadecimal"/>
        <Element Offset="5584" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000015D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5592" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000015D8" DisplayMethod="Hexadecimal"/>
        <Element Offset="5604" Vartype="String" Bytesize="8" OffsetHex="000015E4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5612" Vartype="Float" Bytesize="4" OffsetHex="000015EC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5616" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000015F0" DisplayMethod="Hexadecimal"/>
        <Element Offset="5624" Vartype="Double" Bytesize="8" OffsetHex="000015F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5632" Vartype="4 Bytes" Bytesize="4" OffsetHex="00001600" DisplayMethod="Hexadecimal"/>
        <Element Offset="5636" Vartype="Float" Bytesize="4" OffsetHex="00001604" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5640" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00001608" DisplayMethod="Hexadecimal"/>
        <Element Offset="5664" Vartype="Double" Bytesize="8" OffsetHex="00001620" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5672" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00001628" DisplayMethod="Hexadecimal"/>
        <Element Offset="5700" Vartype="Byte" Bytesize="1" OffsetHex="00001644" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5701" Vartype="String" Bytesize="4" OffsetHex="00001645" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5705" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="00001649" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5708" Vartype="Float" Bytesize="4" OffsetHex="0000164C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5712" Vartype="4 Bytes" Bytesize="4" RLECount="16" OffsetHex="00001650" DisplayMethod="Hexadecimal"/>
        <Element Offset="5776" Vartype="4 Bytes" Bytesize="4" OffsetHex="00001690" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5780" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00001694" DisplayMethod="Hexadecimal"/>
        <Element Offset="5796" Vartype="Byte" Bytesize="1" OffsetHex="000016A4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5797" Vartype="String" Bytesize="4" OffsetHex="000016A5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5801" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="000016A9" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5805" Vartype="String" Bytesize="4" OffsetHex="000016AD" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5809" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="000016B1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5812" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000016B4" DisplayMethod="Hexadecimal"/>
        <Element Offset="5836" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000016CC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5844" Vartype="4 Bytes" Bytesize="4" RLECount="12" OffsetHex="000016D4" DisplayMethod="Hexadecimal"/>
        <Element Offset="5892" Vartype="Float" Bytesize="4" OffsetHex="00001704" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5896" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00001708" DisplayMethod="Hexadecimal"/>
        <Element Offset="5912" Vartype="Float" Bytesize="4" OffsetHex="00001718" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5916" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="0000171C" DisplayMethod="Hexadecimal"/>
        <Element Offset="5928" Vartype="Float" Bytesize="4" OffsetHex="00001728" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5932" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="0000172C" DisplayMethod="Hexadecimal"/>
        <Element Offset="5944" Vartype="Float" Bytesize="4" OffsetHex="00001738" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5948" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="0000173C" DisplayMethod="Hexadecimal"/>
        <Element Offset="5968" Vartype="Float" Bytesize="4" OffsetHex="00001750" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5972" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00001754" DisplayMethod="Hexadecimal"/>
        <Element Offset="6000" Vartype="Float" Bytesize="4" OffsetHex="00001770" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6004" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00001774" DisplayMethod="Hexadecimal"/>
        <Element Offset="6016" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00001780" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6024" Vartype="4 Bytes" Bytesize="4" OffsetHex="00001788" DisplayMethod="Hexadecimal"/>
        <Element Offset="6028" Vartype="Byte" Bytesize="1" OffsetHex="0000178C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6029" Vartype="String" Bytesize="4" OffsetHex="0000178D" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6033" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="00001791" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6036" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00001794" DisplayMethod="Hexadecimal"/>
        <Element Offset="6052" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="000017A4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6056" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000017A8" DisplayMethod="Hexadecimal"/>
        <Element Offset="6072" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="000017B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6075" Vartype="2 Bytes" Bytesize="2" OffsetHex="000017BB" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6077" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="000017BD" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6080" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000017C0" DisplayMethod="Hexadecimal"/>
        <Element Offset="6088" Vartype="Byte" Bytesize="1" OffsetHex="000017C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6089" Vartype="String" Bytesize="4" OffsetHex="000017C9" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6093" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="000017CD" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6096" Vartype="4 Bytes" Bytesize="4" OffsetHex="000017D0" DisplayMethod="Hexadecimal"/>
        <Element Offset="6100" Vartype="Float" Bytesize="4" OffsetHex="000017D4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6104" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000017D8" DisplayMethod="Hexadecimal"/>
        <Element Offset="6112" Vartype="Float" Bytesize="4" OffsetHex="000017E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6116" Vartype="4 Bytes" Bytesize="4" OffsetHex="000017E4" DisplayMethod="Hexadecimal"/>
        <Element Offset="6120" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="000017E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6124" Vartype="4 Bytes" Bytesize="4" OffsetHex="000017EC" DisplayMethod="Hexadecimal"/>
        <Element Offset="6128" Vartype="Float" Bytesize="4" OffsetHex="000017F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6132" Vartype="4 Bytes" Bytesize="4" RLECount="13" OffsetHex="000017F4" DisplayMethod="Hexadecimal"/>
        <Element Offset="6184" Vartype="Float" Bytesize="4" OffsetHex="00001828" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6188" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="0000182C" DisplayMethod="Hexadecimal"/>
        <Element Offset="6200" Vartype="Double" Bytesize="8" OffsetHex="00001838" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6208" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00001840" DisplayMethod="Hexadecimal"/>
        <Element Offset="6240" Vartype="Float" Bytesize="4" OffsetHex="00001860" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6244" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00001864" DisplayMethod="Hexadecimal"/>
        <Element Offset="6276" Vartype="Float" Bytesize="4" OffsetHex="00001884" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6280" Vartype="4 Bytes" Bytesize="4" OffsetHex="00001888" DisplayMethod="Hexadecimal"/>
        <Element Offset="6284" Vartype="Float" Bytesize="4" OffsetHex="0000188C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6288" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00001890" DisplayMethod="Hexadecimal"/>
        <Element Offset="6308" Vartype="Float" Bytesize="4" OffsetHex="000018A4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6312" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="000018A8" DisplayMethod="Hexadecimal"/>
        <Element Offset="6332" Vartype="String" Bytesize="4" OffsetHex="000018BC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6336" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000018C0" DisplayMethod="Hexadecimal"/>
        <Element Offset="6352" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="000018D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6355" Vartype="2 Bytes" Bytesize="2" OffsetHex="000018D3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6357" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="000018D5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6360" Vartype="4 Bytes" Bytesize="4" RLECount="10" OffsetHex="000018D8" DisplayMethod="Hexadecimal"/>
        <Element Offset="6400" Vartype="Float" Bytesize="4" OffsetHex="00001900" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6404" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00001904" DisplayMethod="Hexadecimal"/>
        <Element Offset="6424" Vartype="Float" Bytesize="4" OffsetHex="00001918" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6428" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="0000191C" DisplayMethod="Hexadecimal"/>
        <Element Offset="6448" Vartype="Float" Bytesize="4" OffsetHex="00001930" DisplayMethod="Unsigned Integer"/>
        <Element Offset="6452" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00001934" DisplayMethod="Hexadecimal"/>
        <Element Offset="6484" Vartype="4 Bytes" Bytesize="4" RLECount="259" OffsetHex="00001954" DisplayMethod="Unsigned Integer"/>
        <Element Offset="7520" Vartype="Pointer" Bytesize="8" OffsetHex="00001D60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="7528" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00001D68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="7536" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00001D70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="7552" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00001D80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="7568" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00001D90" DisplayMethod="Hexadecimal"/>
        <Element Offset="7580" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00001D9C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="7600" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00001DB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="7624" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00001DC8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="7636" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00001DD4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="7648" Vartype="4 Bytes" Bytesize="4" RLECount="12" OffsetHex="00001DE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="7696" Vartype="4 Bytes" Bytesize="4" OffsetHex="00001E10" DisplayMethod="Hexadecimal"/>
        <Element Offset="7700" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00001E14" DisplayMethod="Unsigned Integer"/>
        <Element Offset="7720" Vartype="Double" Bytesize="8" OffsetHex="00001E28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="7728" Vartype="Float" Bytesize="4" OffsetHex="00001E30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="7732" Vartype="4 Bytes" Bytesize="4" OffsetHex="00001E34" DisplayMethod="Unsigned Integer"/>
        <Element Offset="7736" Vartype="Pointer" Bytesize="8" OffsetHex="00001E38" DisplayMethod="Unsigned Integer"/>
        <Element Offset="7744" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00001E40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="7752" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00001E48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="7776" Vartype="4 Bytes" Bytesize="4" RLECount="58" OffsetHex="00001E60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8008" Vartype="Pointer" Bytesize="8" OffsetHex="00001F48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8016" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00001F50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8048" Vartype="Pointer" Bytesize="8" OffsetHex="00001F70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8056" Vartype="4 Bytes" Bytesize="4" RLECount="49" OffsetHex="00001F78" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8252" Vartype="Double" Bytesize="8" OffsetHex="0000203C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8260" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002044" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8264" Vartype="Pointer" Bytesize="8" OffsetHex="00002048" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8272" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00002050" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8280" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002058" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8304" Vartype="4 Bytes" Bytesize="4" RLECount="12" OffsetHex="00002070" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8352" Vartype="Pointer" Bytesize="8" OffsetHex="000020A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8360" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="000020A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8388" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000020C4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8396" Vartype="4 Bytes" Bytesize="4" OffsetHex="000020CC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8400" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="000020D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8412" Vartype="Double" Bytesize="8" OffsetHex="000020DC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8420" Vartype="String" Bytesize="4" OffsetHex="000020E4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8424" Vartype="Float" Bytesize="4" OffsetHex="000020E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8428" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000020EC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8440" Vartype="Pointer" Bytesize="8" RLECount="6" OffsetHex="000020F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8488" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00002128" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8496" Vartype="Pointer" Bytesize="8" OffsetHex="00002130" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8504" Vartype="4 Bytes" Bytesize="4" RLECount="12" OffsetHex="00002138" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8552" Vartype="Pointer" Bytesize="8" OffsetHex="00002168" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8560" Vartype="4 Bytes" Bytesize="4" RLECount="26" OffsetHex="00002170" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8664" Vartype="Pointer" Bytesize="8" OffsetHex="000021D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8672" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000021E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8696" Vartype="4 Bytes" Bytesize="4" OffsetHex="000021F8" DisplayMethod="Hexadecimal"/>
        <Element Offset="8700" Vartype="4 Bytes" Bytesize="4" RLECount="27" OffsetHex="000021FC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8808" Vartype="Pointer" Bytesize="8" OffsetHex="00002268" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8816" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00002270" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8840" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002288" DisplayMethod="Hexadecimal"/>
        <Element Offset="8844" Vartype="4 Bytes" Bytesize="4" RLECount="27" OffsetHex="0000228C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8952" Vartype="Double" Bytesize="8" OffsetHex="000022F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8960" Vartype="4 Bytes" Bytesize="4" RLECount="11" OffsetHex="00002300" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9004" Vartype="Double" Bytesize="8" OffsetHex="0000232C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9012" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00002334" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9024" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00002340" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9032" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002348" DisplayMethod="Hexadecimal"/>
        <Element Offset="9036" Vartype="4 Bytes" Bytesize="4" RLECount="15" OffsetHex="0000234C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9096" Vartype="Pointer" Bytesize="8" OffsetHex="00002388" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9104" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00002390" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9128" Vartype="4 Bytes" Bytesize="4" OffsetHex="000023A8" DisplayMethod="Hexadecimal"/>
        <Element Offset="9132" Vartype="4 Bytes" Bytesize="4" RLECount="25" OffsetHex="000023AC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9232" Vartype="Pointer" Bytesize="8" OffsetHex="00002410" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9240" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00002418" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9264" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002430" DisplayMethod="Hexadecimal"/>
        <Element Offset="9268" Vartype="4 Bytes" Bytesize="4" RLECount="25" OffsetHex="00002434" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9368" Vartype="Pointer" Bytesize="8" OffsetHex="00002498" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9376" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000024A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9400" Vartype="4 Bytes" Bytesize="4" OffsetHex="000024B8" DisplayMethod="Hexadecimal"/>
        <Element Offset="9404" Vartype="4 Bytes" Bytesize="4" RLECount="25" OffsetHex="000024BC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9504" Vartype="Pointer" Bytesize="8" OffsetHex="00002520" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9512" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00002528" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9536" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002540" DisplayMethod="Hexadecimal"/>
        <Element Offset="9540" Vartype="4 Bytes" Bytesize="4" RLECount="24" OffsetHex="00002544" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9636" Vartype="Double" Bytesize="8" OffsetHex="000025A4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9644" Vartype="4 Bytes" Bytesize="4" OffsetHex="000025AC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9648" Vartype="Pointer" Bytesize="8" OffsetHex="000025B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9656" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000025B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9664" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000025C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9688" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000025D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9712" Vartype="Pointer" Bytesize="8" OffsetHex="000025F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9720" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000025F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9744" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002610" DisplayMethod="Hexadecimal"/>
        <Element Offset="9748" Vartype="4 Bytes" Bytesize="4" RLECount="31" OffsetHex="00002614" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9872" Vartype="Pointer" Bytesize="8" OffsetHex="00002690" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9880" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002698" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9892" Vartype="Float" Bytesize="4" OffsetHex="000026A4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9896" Vartype="4 Bytes" Bytesize="4" OffsetHex="000026A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9900" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="000026AC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9912" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000026B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9936" Vartype="Pointer" Bytesize="8" OffsetHex="000026D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9944" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000026D8" DisplayMethod="Hexadecimal"/>
        <Element Offset="9952" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000026E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9976" Vartype="4 Bytes" Bytesize="4" OffsetHex="000026F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9980" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="000026FC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="9992" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00002708" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10000" Vartype="Float" Bytesize="4" OffsetHex="00002710" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10004" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002714" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10008" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002718" DisplayMethod="Hexadecimal"/>
        <Element Offset="10012" Vartype="Float" Bytesize="4" OffsetHex="0000271C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10016" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002720" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10020" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00002724" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10028" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="0000272C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10036" Vartype="Float" Bytesize="4" OffsetHex="00002734" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10040" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002738" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10044" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="0000273C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10052" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002744" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10056" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002748" DisplayMethod="Hexadecimal"/>
        <Element Offset="10060" Vartype="Float" Bytesize="4" OffsetHex="0000274C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10064" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002750" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10068" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00002754" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10076" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="0000275C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10084" Vartype="Float" Bytesize="4" OffsetHex="00002764" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10088" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002768" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10092" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="0000276C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10100" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002774" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10104" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002778" DisplayMethod="Hexadecimal"/>
        <Element Offset="10108" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000277C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10112" Vartype="Pointer" Bytesize="8" OffsetHex="00002780" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10120" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00002788" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10136" Vartype="Pointer" Bytesize="8" OffsetHex="00002798" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10144" Vartype="4 Bytes" Bytesize="4" RLECount="23" OffsetHex="000027A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10236" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000027FC" DisplayMethod="Hexadecimal"/>
        <Element Offset="10244" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00002804" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10252" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="0000280C" DisplayMethod="Hexadecimal"/>
        <Element Offset="10264" Vartype="Pointer" Bytesize="8" RLECount="4" OffsetHex="00002818" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10296" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002838" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10308" Vartype="Float" Bytesize="4" OffsetHex="00002844" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10312" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002848" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10316" Vartype="Float" Bytesize="4" OffsetHex="0000284C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10320" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002850" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10344" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00002868" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10352" Vartype="Double" Bytesize="8" OffsetHex="00002870" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10360" Vartype="String" Bytesize="5" OffsetHex="00002878" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10365" Vartype="Byte" Bytesize="1" OffsetHex="0000287D" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10366" Vartype="String" Bytesize="5" OffsetHex="0000287E" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10371" Vartype="Byte" Bytesize="1" OffsetHex="00002883" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10372" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002884" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10376" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00002888" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10392" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002898" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10404" Vartype="Double" Bytesize="8" OffsetHex="000028A4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10412" Vartype="Float" Bytesize="4" OffsetHex="000028AC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10416" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000028B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10440" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000028C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10452" Vartype="Double" Bytesize="8" OffsetHex="000028D4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10460" Vartype="Float" Bytesize="4" OffsetHex="000028DC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10464" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000028E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10488" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000028F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10500" Vartype="Double" Bytesize="8" OffsetHex="00002904" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10508" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000290C" DisplayMethod="Hexadecimal"/>
        <Element Offset="10512" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002910" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10536" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002928" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10548" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00002934" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10560" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002940" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10584" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00002958" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10592" Vartype="Double" Bytesize="8" OffsetHex="00002960" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10600" Vartype="String" Bytesize="5" OffsetHex="00002968" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10605" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="0000296D" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10608" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002970" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10632" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002988" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10644" Vartype="Double" Bytesize="8" OffsetHex="00002994" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10652" Vartype="Float" Bytesize="4" OffsetHex="0000299C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10656" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000029A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10680" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000029B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10692" Vartype="Double" Bytesize="8" OffsetHex="000029C4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10700" Vartype="Float" Bytesize="4" OffsetHex="000029CC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10704" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000029D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10728" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000029E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10740" Vartype="Double" Bytesize="8" OffsetHex="000029F4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10748" Vartype="4 Bytes" Bytesize="4" OffsetHex="000029FC" DisplayMethod="Hexadecimal"/>
        <Element Offset="10752" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002A00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10776" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002A18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10788" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00002A24" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10800" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002A30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10824" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00002A48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10832" Vartype="Double" Bytesize="8" OffsetHex="00002A50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10840" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00002A58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10848" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002A60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10872" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002A78" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10884" Vartype="Double" Bytesize="8" OffsetHex="00002A84" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10892" Vartype="Float" Bytesize="4" OffsetHex="00002A8C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10896" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002A90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10920" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002AA8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10932" Vartype="Double" Bytesize="8" OffsetHex="00002AB4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10940" Vartype="Float" Bytesize="4" OffsetHex="00002ABC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10944" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002AC0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10968" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002AD8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10980" Vartype="Double" Bytesize="8" OffsetHex="00002AE4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="10988" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002AEC" DisplayMethod="Hexadecimal"/>
        <Element Offset="10992" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002AF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11016" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002B08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11028" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00002B14" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11040" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002B20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11064" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00002B38" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11072" Vartype="Double" Bytesize="8" OffsetHex="00002B40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11080" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00002B48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11088" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002B50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11112" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002B68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11124" Vartype="Double" Bytesize="8" OffsetHex="00002B74" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11132" Vartype="Float" Bytesize="4" OffsetHex="00002B7C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11136" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002B80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11160" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002B98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11172" Vartype="Double" Bytesize="8" OffsetHex="00002BA4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11180" Vartype="Float" Bytesize="4" OffsetHex="00002BAC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11184" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002BB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11208" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002BC8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11220" Vartype="Double" Bytesize="8" OffsetHex="00002BD4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11228" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002BDC" DisplayMethod="Hexadecimal"/>
        <Element Offset="11232" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002BE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11256" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002BF8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11268" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00002C04" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11280" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002C10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11304" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00002C28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11312" Vartype="Double" Bytesize="8" OffsetHex="00002C30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11320" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00002C38" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11328" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002C40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11352" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002C58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11364" Vartype="Double" Bytesize="8" OffsetHex="00002C64" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11372" Vartype="Float" Bytesize="4" OffsetHex="00002C6C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11376" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002C70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11400" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002C88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11412" Vartype="Double" Bytesize="8" OffsetHex="00002C94" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11420" Vartype="Float" Bytesize="4" OffsetHex="00002C9C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11424" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002CA0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11448" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002CB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11460" Vartype="Double" Bytesize="8" OffsetHex="00002CC4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11468" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002CCC" DisplayMethod="Hexadecimal"/>
        <Element Offset="11472" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002CD0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11496" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002CE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11508" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00002CF4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11520" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002D00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11544" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00002D18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11552" Vartype="Double" Bytesize="8" OffsetHex="00002D20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11560" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00002D28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11568" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002D30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11592" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002D48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11604" Vartype="Double" Bytesize="8" OffsetHex="00002D54" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11612" Vartype="Float" Bytesize="4" OffsetHex="00002D5C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11616" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002D60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11640" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002D78" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11652" Vartype="Double" Bytesize="8" OffsetHex="00002D84" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11660" Vartype="Float" Bytesize="4" OffsetHex="00002D8C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11664" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002D90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11688" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002DA8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11700" Vartype="Double" Bytesize="8" OffsetHex="00002DB4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11708" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002DBC" DisplayMethod="Hexadecimal"/>
        <Element Offset="11712" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002DC0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11736" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002DD8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11748" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00002DE4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11760" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002DF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11784" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00002E08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11792" Vartype="Double" Bytesize="8" OffsetHex="00002E10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11800" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00002E18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11808" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002E20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11832" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002E38" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11844" Vartype="Double" Bytesize="8" OffsetHex="00002E44" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11852" Vartype="Float" Bytesize="4" OffsetHex="00002E4C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11856" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002E50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11880" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002E68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11892" Vartype="Double" Bytesize="8" OffsetHex="00002E74" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11900" Vartype="Float" Bytesize="4" OffsetHex="00002E7C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11904" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002E80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11928" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002E98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11940" Vartype="Double" Bytesize="8" OffsetHex="00002EA4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11948" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002EAC" DisplayMethod="Hexadecimal"/>
        <Element Offset="11952" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002EB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11976" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002EC8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11988" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00002ED4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12000" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002EE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12024" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00002EF8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12032" Vartype="Double" Bytesize="8" OffsetHex="00002F00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12040" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00002F08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12048" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002F10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12072" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002F28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12084" Vartype="Double" Bytesize="8" OffsetHex="00002F34" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12092" Vartype="Float" Bytesize="4" OffsetHex="00002F3C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12096" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002F40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12120" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002F58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12132" Vartype="Double" Bytesize="8" OffsetHex="00002F64" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12140" Vartype="Float" Bytesize="4" OffsetHex="00002F6C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12144" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002F70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12168" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002F88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12180" Vartype="Double" Bytesize="8" OffsetHex="00002F94" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12188" Vartype="4 Bytes" Bytesize="4" OffsetHex="00002F9C" DisplayMethod="Hexadecimal"/>
        <Element Offset="12192" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002FA0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12216" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00002FB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12228" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00002FC4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12240" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00002FD0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12264" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00002FE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12272" Vartype="Double" Bytesize="8" OffsetHex="00002FF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12280" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00002FF8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12288" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003000" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12312" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003018" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12324" Vartype="Double" Bytesize="8" OffsetHex="00003024" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12332" Vartype="Float" Bytesize="4" OffsetHex="0000302C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12336" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003030" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12360" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003048" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12372" Vartype="Double" Bytesize="8" OffsetHex="00003054" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12380" Vartype="Float" Bytesize="4" OffsetHex="0000305C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12384" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003060" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12408" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003078" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12420" Vartype="Double" Bytesize="8" OffsetHex="00003084" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12428" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000308C" DisplayMethod="Hexadecimal"/>
        <Element Offset="12432" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003090" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12456" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000030A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12468" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="000030B4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12480" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000030C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12504" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000030D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12512" Vartype="Double" Bytesize="8" OffsetHex="000030E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12520" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000030E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12528" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000030F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12552" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003108" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12564" Vartype="Double" Bytesize="8" OffsetHex="00003114" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12572" Vartype="Float" Bytesize="4" OffsetHex="0000311C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12576" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003120" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12600" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003138" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12612" Vartype="Double" Bytesize="8" OffsetHex="00003144" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12620" Vartype="Float" Bytesize="4" OffsetHex="0000314C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12624" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003150" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12648" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003168" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12660" Vartype="Double" Bytesize="8" OffsetHex="00003174" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12668" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000317C" DisplayMethod="Hexadecimal"/>
        <Element Offset="12672" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003180" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12696" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003198" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12708" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="000031A4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12720" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000031B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12744" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000031C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12752" Vartype="Double" Bytesize="8" OffsetHex="000031D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12760" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000031D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12768" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000031E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12792" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000031F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12804" Vartype="Double" Bytesize="8" OffsetHex="00003204" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12812" Vartype="Float" Bytesize="4" OffsetHex="0000320C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12816" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003210" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12840" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003228" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12852" Vartype="Double" Bytesize="8" OffsetHex="00003234" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12860" Vartype="Float" Bytesize="4" OffsetHex="0000323C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12864" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003240" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12888" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003258" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12900" Vartype="Double" Bytesize="8" OffsetHex="00003264" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12908" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000326C" DisplayMethod="Hexadecimal"/>
        <Element Offset="12912" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003270" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12936" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003288" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12948" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00003294" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12960" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000032A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12984" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000032B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12992" Vartype="Double" Bytesize="8" OffsetHex="000032C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13000" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000032C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13008" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000032D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13032" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000032E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13044" Vartype="Double" Bytesize="8" OffsetHex="000032F4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13052" Vartype="Float" Bytesize="4" OffsetHex="000032FC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13056" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003300" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13080" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003318" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13092" Vartype="Double" Bytesize="8" OffsetHex="00003324" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13100" Vartype="Float" Bytesize="4" OffsetHex="0000332C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13104" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003330" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13128" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003348" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13140" Vartype="Double" Bytesize="8" OffsetHex="00003354" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13148" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000335C" DisplayMethod="Hexadecimal"/>
        <Element Offset="13152" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003360" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13176" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003378" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13188" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00003384" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13200" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003390" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13224" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000033A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13232" Vartype="Double" Bytesize="8" OffsetHex="000033B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13240" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000033B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13248" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000033C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13272" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000033D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13284" Vartype="Double" Bytesize="8" OffsetHex="000033E4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13292" Vartype="Float" Bytesize="4" OffsetHex="000033EC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13296" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000033F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13320" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003408" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13332" Vartype="Double" Bytesize="8" OffsetHex="00003414" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13340" Vartype="Float" Bytesize="4" OffsetHex="0000341C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13344" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003420" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13368" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003438" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13380" Vartype="Double" Bytesize="8" OffsetHex="00003444" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13388" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000344C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13392" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003450" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13416" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003468" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13428" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00003474" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13440" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003480" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13464" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00003498" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13472" Vartype="Double" Bytesize="8" OffsetHex="000034A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13480" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000034A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13488" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000034B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13512" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000034C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13524" Vartype="Double" Bytesize="8" OffsetHex="000034D4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13532" Vartype="Float" Bytesize="4" OffsetHex="000034DC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13536" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000034E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13560" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000034F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13572" Vartype="Double" Bytesize="8" OffsetHex="00003504" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13580" Vartype="Float" Bytesize="4" OffsetHex="0000350C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13584" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003510" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13608" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003528" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13620" Vartype="Double" Bytesize="8" OffsetHex="00003534" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13628" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000353C" DisplayMethod="Hexadecimal"/>
        <Element Offset="13632" Vartype="Pointer" Bytesize="8" OffsetHex="00003540" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13640" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00003548" Description="Pointer to instance of std::_Node_if" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13656" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003558" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13668" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00003564" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13680" Vartype="Pointer" Bytesize="8" OffsetHex="00003570" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13688" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00003578" Description="Pointer to instance of std::_Root_node" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13704" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00003588" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13712" Vartype="Double" Bytesize="8" OffsetHex="00003590" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13720" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003598" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13728" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000035A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13752" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000035B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13764" Vartype="Double" Bytesize="8" OffsetHex="000035C4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13772" Vartype="Float" Bytesize="4" OffsetHex="000035CC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13776" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000035D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13800" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000035E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13812" Vartype="Double" Bytesize="8" OffsetHex="000035F4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13820" Vartype="Float" Bytesize="4" OffsetHex="000035FC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13824" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003600" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13848" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003618" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13860" Vartype="Double" Bytesize="8" OffsetHex="00003624" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13868" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000362C" DisplayMethod="Hexadecimal"/>
        <Element Offset="13872" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003630" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13896" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003648" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13908" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00003654" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13920" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003660" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13944" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00003678" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13952" Vartype="Double" Bytesize="8" OffsetHex="00003680" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13960" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003688" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13968" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003690" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13992" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000036A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14004" Vartype="Double" Bytesize="8" OffsetHex="000036B4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14012" Vartype="Float" Bytesize="4" OffsetHex="000036BC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14016" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000036C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14040" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000036D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14052" Vartype="Double" Bytesize="8" OffsetHex="000036E4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14060" Vartype="Float" Bytesize="4" OffsetHex="000036EC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14064" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000036F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14088" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003708" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14100" Vartype="Double" Bytesize="8" OffsetHex="00003714" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14108" Vartype="Float" Bytesize="4" OffsetHex="0000371C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14112" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003720" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14136" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003738" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14148" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00003744" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14160" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003750" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14184" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00003768" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14192" Vartype="Double" Bytesize="8" OffsetHex="00003770" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14200" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003778" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14208" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003780" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14232" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003798" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14244" Vartype="Double" Bytesize="8" OffsetHex="000037A4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14252" Vartype="Float" Bytesize="4" OffsetHex="000037AC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14256" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000037B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14280" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000037C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14292" Vartype="Double" Bytesize="8" OffsetHex="000037D4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14300" Vartype="Float" Bytesize="4" OffsetHex="000037DC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14304" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000037E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14328" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000037F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14340" Vartype="Double" Bytesize="8" OffsetHex="00003804" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14348" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000380C" DisplayMethod="Hexadecimal"/>
        <Element Offset="14352" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003810" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14376" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003828" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14388" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00003834" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14400" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003840" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14424" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00003858" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14432" Vartype="Double" Bytesize="8" OffsetHex="00003860" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14440" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003868" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14448" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003870" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14472" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003888" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14484" Vartype="Double" Bytesize="8" OffsetHex="00003894" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14492" Vartype="Float" Bytesize="4" OffsetHex="0000389C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14496" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000038A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14520" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000038B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14532" Vartype="Double" Bytesize="8" OffsetHex="000038C4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14540" Vartype="Float" Bytesize="4" OffsetHex="000038CC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14544" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000038D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14568" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000038E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14580" Vartype="Double" Bytesize="8" OffsetHex="000038F4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14588" Vartype="4 Bytes" Bytesize="4" OffsetHex="000038FC" DisplayMethod="Hexadecimal"/>
        <Element Offset="14592" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003900" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14616" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003918" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14628" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00003924" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14640" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003930" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14664" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00003948" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14672" Vartype="Double" Bytesize="8" OffsetHex="00003950" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14680" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003958" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14688" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003960" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14712" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003978" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14724" Vartype="Double" Bytesize="8" OffsetHex="00003984" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14732" Vartype="Float" Bytesize="4" OffsetHex="0000398C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14736" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003990" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14760" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000039A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14772" Vartype="Double" Bytesize="8" OffsetHex="000039B4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14780" Vartype="Float" Bytesize="4" OffsetHex="000039BC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14784" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000039C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14808" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000039D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14820" Vartype="Double" Bytesize="8" OffsetHex="000039E4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14828" Vartype="4 Bytes" Bytesize="4" OffsetHex="000039EC" DisplayMethod="Hexadecimal"/>
        <Element Offset="14832" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000039F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14856" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003A08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14868" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00003A14" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14880" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003A20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14904" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00003A38" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14912" Vartype="Double" Bytesize="8" OffsetHex="00003A40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14920" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003A48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14928" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003A50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14952" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003A68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14964" Vartype="Double" Bytesize="8" OffsetHex="00003A74" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14972" Vartype="Float" Bytesize="4" OffsetHex="00003A7C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14976" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003A80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15000" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003A98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15012" Vartype="Double" Bytesize="8" OffsetHex="00003AA4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15020" Vartype="Float" Bytesize="4" OffsetHex="00003AAC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15024" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003AB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15048" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003AC8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15060" Vartype="Double" Bytesize="8" OffsetHex="00003AD4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15068" Vartype="4 Bytes" Bytesize="4" OffsetHex="00003ADC" DisplayMethod="Hexadecimal"/>
        <Element Offset="15072" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003AE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15096" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003AF8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15108" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00003B04" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15120" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003B10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15144" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00003B28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15152" Vartype="Double" Bytesize="8" OffsetHex="00003B30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15160" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003B38" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15168" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003B40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15192" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003B58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15204" Vartype="Double" Bytesize="8" OffsetHex="00003B64" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15212" Vartype="Float" Bytesize="4" OffsetHex="00003B6C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15216" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003B70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15240" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00003B88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15256" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003B98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15264" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003BA0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15288" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00003BB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15304" Vartype="Float" Bytesize="4" OffsetHex="00003BC8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15308" Vartype="4 Bytes" Bytesize="4" OffsetHex="00003BCC" DisplayMethod="Hexadecimal"/>
        <Element Offset="15312" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003BD0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15336" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003BE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15348" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00003BF4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15360" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003C00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15384" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00003C18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15392" Vartype="Double" Bytesize="8" OffsetHex="00003C20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15400" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003C28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15408" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003C30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15432" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00003C48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15448" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003C58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15456" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003C60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15480" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00003C78" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15496" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003C88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15504" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003C90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15528" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00003CA8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15544" Vartype="Float" Bytesize="4" OffsetHex="00003CB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15548" Vartype="4 Bytes" Bytesize="4" OffsetHex="00003CBC" DisplayMethod="Hexadecimal"/>
        <Element Offset="15552" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003CC0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15576" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003CD8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15588" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00003CE4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15600" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003CF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15624" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00003D08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15632" Vartype="Double" Bytesize="8" OffsetHex="00003D10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15640" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003D18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15648" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003D20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15672" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00003D38" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15688" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003D48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15696" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003D50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15720" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00003D68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15736" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003D78" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15744" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003D80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15768" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00003D98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15784" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003DA8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15792" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003DB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15816" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003DC8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15828" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00003DD4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15840" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003DE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15864" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00003DF8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15872" Vartype="Double" Bytesize="8" OffsetHex="00003E00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15880" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003E08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15888" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003E10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15912" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00003E28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15928" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003E38" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15936" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003E40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15960" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00003E58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15976" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003E68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15984" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003E70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16008" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00003E88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16024" Vartype="Float" Bytesize="4" OffsetHex="00003E98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16028" Vartype="String" Bytesize="7" OffsetHex="00003E9C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16035" Vartype="Byte" Bytesize="1" OffsetHex="00003EA3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16036" Vartype="4 Bytes" Bytesize="4" OffsetHex="00003EA4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16040" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00003EA8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16056" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003EB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16068" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00003EC4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16080" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003ED0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16104" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00003EE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16112" Vartype="Double" Bytesize="8" OffsetHex="00003EF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16120" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003EF8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16128" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003F00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16152" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00003F18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16168" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003F28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16176" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003F30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16200" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00003F48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16216" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003F58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16224" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003F60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16248" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00003F78" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16264" Vartype="Float" Bytesize="4" OffsetHex="00003F88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16268" Vartype="String" Bytesize="4" OffsetHex="00003F8C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16272" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003F90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16296" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00003FA8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16308" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00003FB4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16320" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003FC0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16344" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00003FD8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16352" Vartype="Double" Bytesize="8" OffsetHex="00003FE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16360" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00003FE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16368" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00003FF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16392" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00004008" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16408" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00004018" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16416" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00004020" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16440" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00004038" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16456" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00004048" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16464" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00004050" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16488" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00004068" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16504" Vartype="Float" Bytesize="4" OffsetHex="00004078" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16508" Vartype="String" Bytesize="4" OffsetHex="0000407C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16512" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00004080" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16536" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00004098" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16548" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="000040A4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16560" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000040B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16584" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000040C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16592" Vartype="Double" Bytesize="8" OffsetHex="000040D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16600" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000040D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16608" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000040E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16632" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000040F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16648" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00004108" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16656" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00004110" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16680" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00004128" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16696" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00004138" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16704" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00004140" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16728" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00004158" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16744" Vartype="Float" Bytesize="4" OffsetHex="00004168" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16748" Vartype="String" Bytesize="7" OffsetHex="0000416C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16755" Vartype="Byte" Bytesize="1" OffsetHex="00004173" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16756" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004174" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16760" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00004178" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16776" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00004188" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16788" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00004194" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16800" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000041A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16824" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000041B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16832" Vartype="Double" Bytesize="8" OffsetHex="000041C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16840" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000041C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16848" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000041D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16872" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000041E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16888" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000041F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16896" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00004200" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16920" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00004218" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16936" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00004228" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16944" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00004230" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16968" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00004248" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16984" Vartype="Float" Bytesize="4" OffsetHex="00004258" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16988" Vartype="String" Bytesize="7" OffsetHex="0000425C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16995" Vartype="Byte" Bytesize="1" OffsetHex="00004263" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16996" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004264" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17000" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00004268" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17016" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00004278" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17028" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00004284" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17040" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00004290" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17064" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000042A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17072" Vartype="Double" Bytesize="8" OffsetHex="000042B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17080" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000042B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17088" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000042C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17112" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000042D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17128" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000042E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17136" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000042F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17160" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00004308" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17176" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00004318" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17184" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00004320" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17208" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00004338" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17224" Vartype="Float" Bytesize="4" OffsetHex="00004348" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17228" Vartype="String" Bytesize="4" OffsetHex="0000434C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17232" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00004350" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17256" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00004368" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17272" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00004378" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17280" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00004380" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17304" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00004398" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17312" Vartype="Double" Bytesize="8" OffsetHex="000043A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17320" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000043A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17328" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000043B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17352" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000043C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17368" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000043D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17376" Vartype="4 Bytes" Bytesize="4" RLECount="10" OffsetHex="000043E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17416" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00004408" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17424" Vartype="4 Bytes" Bytesize="4" RLECount="10" OffsetHex="00004410" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17464" Vartype="Float" Bytesize="4" OffsetHex="00004438" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17468" Vartype="String" Bytesize="5" OffsetHex="0000443C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17473" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="00004441" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17476" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00004444" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17508" Vartype="String" Bytesize="5" OffsetHex="00004464" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17513" Vartype="Byte" Bytesize="1" RLECount="2" OffsetHex="00004469" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17515" Vartype="String" Bytesize="6" OffsetHex="0000446B" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17521" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="00004471" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17524" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00004474" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17556" Vartype="String" Bytesize="4" OffsetHex="00004494" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17560" Vartype="Float" Bytesize="4" OffsetHex="00004498" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17564" Vartype="String" Bytesize="5" OffsetHex="0000449C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17569" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="000044A1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17572" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="000044A4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17604" Vartype="String" Bytesize="4" OffsetHex="000044C4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17608" Vartype="Float" Bytesize="4" OffsetHex="000044C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17612" Vartype="String" Bytesize="5" OffsetHex="000044CC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17617" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="000044D1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17620" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="000044D4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17652" Vartype="String" Bytesize="6" OffsetHex="000044F4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17658" Vartype="Byte" Bytesize="1" OffsetHex="000044FA" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17659" Vartype="String" Bytesize="6" OffsetHex="000044FB" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17665" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="00004501" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17668" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00004504" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17700" Vartype="String" Bytesize="6" OffsetHex="00004524" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17706" Vartype="Byte" Bytesize="1" OffsetHex="0000452A" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17707" Vartype="String" Bytesize="6" OffsetHex="0000452B" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17713" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="00004531" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17716" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00004534" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17748" Vartype="String" Bytesize="5" OffsetHex="00004554" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17753" Vartype="Byte" Bytesize="1" RLECount="2" OffsetHex="00004559" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17755" Vartype="String" Bytesize="6" OffsetHex="0000455B" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17761" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="00004561" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17764" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00004564" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17796" Vartype="String" Bytesize="4" OffsetHex="00004584" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17800" Vartype="Float" Bytesize="4" OffsetHex="00004588" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17804" Vartype="String" Bytesize="5" OffsetHex="0000458C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17809" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="00004591" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17812" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00004594" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17844" Vartype="String" Bytesize="4" OffsetHex="000045B4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17848" Vartype="Float" Bytesize="4" OffsetHex="000045B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17852" Vartype="String" Bytesize="5" OffsetHex="000045BC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17857" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="000045C1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17860" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="000045C4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17892" Vartype="4 Bytes" Bytesize="4" OffsetHex="000045E4" DisplayMethod="Hexadecimal"/>
        <Element Offset="17896" Vartype="Float" Bytesize="4" OffsetHex="000045E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17900" Vartype="4 Bytes" Bytesize="4" RLECount="11" OffsetHex="000045EC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17944" Vartype="Float" Bytesize="4" OffsetHex="00004618" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17948" Vartype="4 Bytes" Bytesize="4" RLECount="11" OffsetHex="0000461C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17992" Vartype="Float" Bytesize="4" OffsetHex="00004648" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17996" Vartype="4 Bytes" Bytesize="4" RLECount="39" OffsetHex="0000464C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18152" Vartype="4 Bytes" Bytesize="4" OffsetHex="000046E8" DisplayMethod="Hexadecimal"/>
        <Element Offset="18156" Vartype="4 Bytes" Bytesize="4" OffsetHex="000046EC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18160" Vartype="4 Bytes" Bytesize="4" OffsetHex="000046F0" DisplayMethod="Hexadecimal"/>
        <Element Offset="18164" Vartype="4 Bytes" Bytesize="4" OffsetHex="000046F4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18168" Vartype="4 Bytes" Bytesize="4" OffsetHex="000046F8" DisplayMethod="Hexadecimal"/>
        <Element Offset="18172" Vartype="4 Bytes" Bytesize="4" OffsetHex="000046FC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18176" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004700" DisplayMethod="Hexadecimal"/>
        <Element Offset="18180" Vartype="4 Bytes" Bytesize="4" RLECount="25" OffsetHex="00004704" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18280" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004768" DisplayMethod="Hexadecimal"/>
        <Element Offset="18284" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000476C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18288" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004770" DisplayMethod="Hexadecimal"/>
        <Element Offset="18292" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004774" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18296" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004778" DisplayMethod="Hexadecimal"/>
        <Element Offset="18300" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000477C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18304" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004780" DisplayMethod="Hexadecimal"/>
        <Element Offset="18308" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004784" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18312" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004788" DisplayMethod="Hexadecimal"/>
        <Element Offset="18316" Vartype="4 Bytes" Bytesize="4" RLECount="23" OffsetHex="0000478C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18408" Vartype="4 Bytes" Bytesize="4" OffsetHex="000047E8" DisplayMethod="Hexadecimal"/>
        <Element Offset="18412" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000047EC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18424" Vartype="4 Bytes" Bytesize="4" OffsetHex="000047F8" DisplayMethod="Hexadecimal"/>
        <Element Offset="18428" Vartype="4 Bytes" Bytesize="4" OffsetHex="000047FC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18432" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004800" DisplayMethod="Hexadecimal"/>
        <Element Offset="18436" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004804" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18440" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004808" DisplayMethod="Hexadecimal"/>
        <Element Offset="18444" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000480C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18448" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004810" DisplayMethod="Hexadecimal"/>
        <Element Offset="18452" Vartype="4 Bytes" Bytesize="4" RLECount="21" OffsetHex="00004814" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18536" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004868" DisplayMethod="Hexadecimal"/>
        <Element Offset="18540" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000486C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18544" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004870" DisplayMethod="Hexadecimal"/>
        <Element Offset="18548" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004874" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18552" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004878" DisplayMethod="Hexadecimal"/>
        <Element Offset="18556" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000487C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18560" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004880" DisplayMethod="Hexadecimal"/>
        <Element Offset="18564" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004884" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18568" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004888" DisplayMethod="Hexadecimal"/>
        <Element Offset="18572" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000488C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18576" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004890" DisplayMethod="Hexadecimal"/>
        <Element Offset="18580" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004894" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18584" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004898" DisplayMethod="Hexadecimal"/>
        <Element Offset="18588" Vartype="4 Bytes" Bytesize="4" RLECount="19" OffsetHex="0000489C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18664" Vartype="4 Bytes" Bytesize="4" OffsetHex="000048E8" DisplayMethod="Hexadecimal"/>
        <Element Offset="18668" Vartype="4 Bytes" Bytesize="4" OffsetHex="000048EC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18672" Vartype="4 Bytes" Bytesize="4" OffsetHex="000048F0" DisplayMethod="Hexadecimal"/>
        <Element Offset="18676" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="000048F4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18704" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004910" DisplayMethod="Hexadecimal"/>
        <Element Offset="18708" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004914" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18712" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004918" DisplayMethod="Hexadecimal"/>
        <Element Offset="18716" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000491C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18720" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004920" DisplayMethod="Hexadecimal"/>
        <Element Offset="18724" Vartype="4 Bytes" Bytesize="4" RLECount="29" OffsetHex="00004924" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18840" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004998" DisplayMethod="Hexadecimal"/>
        <Element Offset="18844" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="0000499C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18852" Vartype="4 Bytes" Bytesize="4" OffsetHex="000049A4" DisplayMethod="Hexadecimal"/>
        <Element Offset="18856" Vartype="4 Bytes" Bytesize="4" RLECount="33" OffsetHex="000049A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18988" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004A2C" DisplayMethod="Hexadecimal"/>
        <Element Offset="18992" Vartype="4 Bytes" Bytesize="4" RLECount="22" OffsetHex="00004A30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19080" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004A88" DisplayMethod="Hexadecimal"/>
        <Element Offset="19084" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00004A8C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19108" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004AA4" DisplayMethod="Hexadecimal"/>
        <Element Offset="19112" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004AA8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19116" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004AAC" DisplayMethod="Hexadecimal"/>
        <Element Offset="19120" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004AB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19124" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00004AB4" DisplayMethod="Hexadecimal"/>
        <Element Offset="19132" Vartype="4 Bytes" Bytesize="4" RLECount="28" OffsetHex="00004ABC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19244" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00004B2C" DisplayMethod="Hexadecimal"/>
        <Element Offset="19256" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004B38" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19260" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004B3C" DisplayMethod="Hexadecimal"/>
        <Element Offset="19264" Vartype="4 Bytes" Bytesize="4" RLECount="18" OffsetHex="00004B40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19336" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004B88" DisplayMethod="Hexadecimal"/>
        <Element Offset="19340" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004B8C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19344" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004B90" DisplayMethod="Hexadecimal"/>
        <Element Offset="19348" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004B94" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19352" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004B98" DisplayMethod="Hexadecimal"/>
        <Element Offset="19356" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004B9C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19360" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004BA0" DisplayMethod="Hexadecimal"/>
        <Element Offset="19364" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00004BA4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19380" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00004BB4" DisplayMethod="Hexadecimal"/>
        <Element Offset="19396" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004BC4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19400" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004BC8" DisplayMethod="Hexadecimal"/>
        <Element Offset="19404" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004BCC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19408" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004BD0" DisplayMethod="Hexadecimal"/>
        <Element Offset="19412" Vartype="4 Bytes" Bytesize="4" RLECount="11" OffsetHex="00004BD4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19456" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C00" DisplayMethod="Hexadecimal"/>
        <Element Offset="19460" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C04" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19464" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C08" DisplayMethod="Hexadecimal"/>
        <Element Offset="19468" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C0C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19472" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C10" DisplayMethod="Hexadecimal"/>
        <Element Offset="19476" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C14" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19480" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C18" DisplayMethod="Hexadecimal"/>
        <Element Offset="19484" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C1C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19488" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C20" DisplayMethod="Hexadecimal"/>
        <Element Offset="19492" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C24" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19496" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C28" DisplayMethod="Hexadecimal"/>
        <Element Offset="19500" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C2C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19504" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00004C30" DisplayMethod="Hexadecimal"/>
        <Element Offset="19520" Vartype="Byte" Bytesize="1" OffsetHex="00004C40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19521" Vartype="String" Bytesize="6" OffsetHex="00004C41" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19527" Vartype="Byte" Bytesize="1" OffsetHex="00004C47" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19528" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C48" DisplayMethod="Hexadecimal"/>
        <Element Offset="19532" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C4C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19536" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C50" DisplayMethod="Hexadecimal"/>
        <Element Offset="19540" Vartype="4 Bytes" Bytesize="4" RLECount="13" OffsetHex="00004C54" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19592" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C88" DisplayMethod="Hexadecimal"/>
        <Element Offset="19596" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C8C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19600" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C90" DisplayMethod="Hexadecimal"/>
        <Element Offset="19604" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C94" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19608" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C98" DisplayMethod="Hexadecimal"/>
        <Element Offset="19612" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004C9C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19616" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004CA0" DisplayMethod="Hexadecimal"/>
        <Element Offset="19620" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004CA4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19624" Vartype="4 Bytes" Bytesize="4" RLECount="11" OffsetHex="00004CA8" DisplayMethod="Hexadecimal"/>
        <Element Offset="19668" Vartype="4 Bytes" Bytesize="4" RLECount="15" OffsetHex="00004CD4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19728" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004D10" DisplayMethod="Hexadecimal"/>
        <Element Offset="19732" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004D14" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19736" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004D18" DisplayMethod="Hexadecimal"/>
        <Element Offset="19740" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004D1C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19744" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004D20" DisplayMethod="Hexadecimal"/>
        <Element Offset="19748" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004D24" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19752" Vartype="4 Bytes" Bytesize="4" RLECount="11" OffsetHex="00004D28" DisplayMethod="Hexadecimal"/>
        <Element Offset="19796" Vartype="4 Bytes" Bytesize="4" RLECount="17" OffsetHex="00004D54" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19864" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004D98" DisplayMethod="Hexadecimal"/>
        <Element Offset="19868" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004D9C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19872" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004DA0" DisplayMethod="Hexadecimal"/>
        <Element Offset="19876" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004DA4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19880" Vartype="4 Bytes" Bytesize="4" RLECount="10" OffsetHex="00004DA8" DisplayMethod="Hexadecimal"/>
        <Element Offset="19920" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00004DD0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="19944" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00004DE8" DisplayMethod="Hexadecimal"/>
        <Element Offset="19968" Vartype="4 Bytes" Bytesize="4" RLECount="63" OffsetHex="00004E00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20220" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00004EFC" DisplayMethod="Hexadecimal"/>
        <Element Offset="20240" Vartype="Float" Bytesize="4" OffsetHex="00004F10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20244" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004F14" DisplayMethod="Hexadecimal"/>
        <Element Offset="20248" Vartype="Float" Bytesize="4" OffsetHex="00004F18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20252" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00004F1C" DisplayMethod="Hexadecimal"/>
        <Element Offset="20268" Vartype="Float" Bytesize="4" OffsetHex="00004F2C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20272" Vartype="String" Bytesize="4" OffsetHex="00004F30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20276" Vartype="Float" Bytesize="4" OffsetHex="00004F34" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20280" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00004F38" DisplayMethod="Hexadecimal"/>
        <Element Offset="20296" Vartype="Float" Bytesize="4" OffsetHex="00004F48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20300" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004F4C" DisplayMethod="Hexadecimal"/>
        <Element Offset="20304" Vartype="String" Bytesize="4" OffsetHex="00004F50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20308" Vartype="Float" Bytesize="4" OffsetHex="00004F54" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20312" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004F58" DisplayMethod="Hexadecimal"/>
        <Element Offset="20316" Vartype="Float" Bytesize="4" OffsetHex="00004F5C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20320" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00004F60" DisplayMethod="Hexadecimal"/>
        <Element Offset="20336" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00004F70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20352" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00004F80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20368" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00004F90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20396" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004FAC" DisplayMethod="Hexadecimal"/>
        <Element Offset="20400" Vartype="4 Bytes" Bytesize="4" RLECount="19" OffsetHex="00004FB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20476" Vartype="4 Bytes" Bytesize="4" OffsetHex="00004FFC" DisplayMethod="Hexadecimal"/>
        <Element Offset="20480" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005000" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20496" Vartype="4 Bytes" Bytesize="4" OffsetHex="00005010" DisplayMethod="Hexadecimal"/>
        <Element Offset="20500" Vartype="4 Bytes" Bytesize="4" OffsetHex="00005014" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20504" Vartype="Pointer" Bytesize="8" OffsetHex="00005018" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20512" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00005020" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20524" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000502C" DisplayMethod="Hexadecimal"/>
        <Element Offset="20528" Vartype="Double" Bytesize="8" OffsetHex="00005030" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20536" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005038" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20552" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005048" DisplayMethod="Hexadecimal"/>
        <Element Offset="20560" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005050" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20576" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005060" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20584" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005068" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20612" Vartype="Float" Bytesize="4" OffsetHex="00005084" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20616" Vartype="Double" Bytesize="8" OffsetHex="00005088" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20624" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005090" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20640" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000050A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20648" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000050A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20664" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000050B8" DisplayMethod="Hexadecimal"/>
        <Element Offset="20672" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="000050C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20700" Vartype="4 Bytes" Bytesize="4" OffsetHex="000050DC" DisplayMethod="Hexadecimal"/>
        <Element Offset="20704" Vartype="Double" Bytesize="8" OffsetHex="000050E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20712" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000050E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20728" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000050F8" DisplayMethod="Hexadecimal"/>
        <Element Offset="20736" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005100" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20752" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005110" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20760" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005118" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20788" Vartype="Float" Bytesize="4" OffsetHex="00005134" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20792" Vartype="Double" Bytesize="8" OffsetHex="00005138" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20800" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005140" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20816" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005150" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20824" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005158" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20840" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005168" DisplayMethod="Hexadecimal"/>
        <Element Offset="20848" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005170" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20876" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000518C" DisplayMethod="Hexadecimal"/>
        <Element Offset="20880" Vartype="Double" Bytesize="8" OffsetHex="00005190" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20888" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005198" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20904" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000051A8" DisplayMethod="Hexadecimal"/>
        <Element Offset="20912" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000051B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20928" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000051C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20936" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="000051C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20964" Vartype="Float" Bytesize="4" OffsetHex="000051E4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20968" Vartype="Double" Bytesize="8" OffsetHex="000051E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20976" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000051F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20992" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005200" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21000" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005208" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21016" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005218" DisplayMethod="Hexadecimal"/>
        <Element Offset="21024" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005220" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21052" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000523C" DisplayMethod="Hexadecimal"/>
        <Element Offset="21056" Vartype="Double" Bytesize="8" OffsetHex="00005240" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21064" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005248" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21080" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005258" DisplayMethod="Hexadecimal"/>
        <Element Offset="21088" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005260" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21104" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005270" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21112" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005278" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21140" Vartype="Float" Bytesize="4" OffsetHex="00005294" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21144" Vartype="Double" Bytesize="8" OffsetHex="00005298" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21152" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000052A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21168" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000052B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21176" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000052B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21192" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000052C8" DisplayMethod="Hexadecimal"/>
        <Element Offset="21200" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="000052D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21228" Vartype="4 Bytes" Bytesize="4" OffsetHex="000052EC" DisplayMethod="Hexadecimal"/>
        <Element Offset="21232" Vartype="Double" Bytesize="8" OffsetHex="000052F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21240" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000052F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21256" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005308" DisplayMethod="Hexadecimal"/>
        <Element Offset="21264" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005310" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21280" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005320" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21288" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005328" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21316" Vartype="Float" Bytesize="4" OffsetHex="00005344" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21320" Vartype="Double" Bytesize="8" OffsetHex="00005348" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21328" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005350" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21344" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005360" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21352" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005368" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21368" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005378" DisplayMethod="Hexadecimal"/>
        <Element Offset="21376" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005380" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21404" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000539C" DisplayMethod="Hexadecimal"/>
        <Element Offset="21408" Vartype="Double" Bytesize="8" OffsetHex="000053A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21416" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000053A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21432" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000053B8" DisplayMethod="Hexadecimal"/>
        <Element Offset="21440" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000053C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21456" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000053D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21464" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="000053D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21492" Vartype="Float" Bytesize="4" OffsetHex="000053F4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21496" Vartype="Double" Bytesize="8" OffsetHex="000053F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21504" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005400" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21520" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005410" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21528" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005418" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21544" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005428" DisplayMethod="Hexadecimal"/>
        <Element Offset="21552" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005430" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21580" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000544C" DisplayMethod="Hexadecimal"/>
        <Element Offset="21584" Vartype="Double" Bytesize="8" OffsetHex="00005450" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21592" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005458" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21608" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005468" DisplayMethod="Hexadecimal"/>
        <Element Offset="21616" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005470" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21632" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005480" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21640" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005488" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21668" Vartype="Float" Bytesize="4" OffsetHex="000054A4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21672" Vartype="Double" Bytesize="8" OffsetHex="000054A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21680" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000054B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21696" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000054C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21704" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000054C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21720" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000054D8" DisplayMethod="Hexadecimal"/>
        <Element Offset="21728" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="000054E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21756" Vartype="4 Bytes" Bytesize="4" OffsetHex="000054FC" DisplayMethod="Hexadecimal"/>
        <Element Offset="21760" Vartype="Double" Bytesize="8" OffsetHex="00005500" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21768" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005508" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21784" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005518" DisplayMethod="Hexadecimal"/>
        <Element Offset="21792" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005520" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21808" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005530" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21816" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005538" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21844" Vartype="Float" Bytesize="4" OffsetHex="00005554" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21848" Vartype="Double" Bytesize="8" OffsetHex="00005558" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21856" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005560" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21872" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005570" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21880" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005578" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21896" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005588" DisplayMethod="Hexadecimal"/>
        <Element Offset="21904" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005590" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21932" Vartype="4 Bytes" Bytesize="4" OffsetHex="000055AC" DisplayMethod="Hexadecimal"/>
        <Element Offset="21936" Vartype="Double" Bytesize="8" OffsetHex="000055B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21944" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000055B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21960" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000055C8" DisplayMethod="Hexadecimal"/>
        <Element Offset="21968" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000055D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21984" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000055E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="21992" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="000055E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22020" Vartype="Float" Bytesize="4" OffsetHex="00005604" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22024" Vartype="Double" Bytesize="8" OffsetHex="00005608" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22032" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005610" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22048" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005620" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22056" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005628" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22072" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005638" DisplayMethod="Hexadecimal"/>
        <Element Offset="22080" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005640" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22108" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000565C" DisplayMethod="Hexadecimal"/>
        <Element Offset="22112" Vartype="Double" Bytesize="8" OffsetHex="00005660" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22120" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005668" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22136" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005678" DisplayMethod="Hexadecimal"/>
        <Element Offset="22144" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005680" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22160" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005690" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22168" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005698" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22196" Vartype="Float" Bytesize="4" OffsetHex="000056B4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22200" Vartype="Double" Bytesize="8" OffsetHex="000056B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22208" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000056C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22224" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000056D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22232" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000056D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22248" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000056E8" DisplayMethod="Hexadecimal"/>
        <Element Offset="22256" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="000056F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22284" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000570C" DisplayMethod="Hexadecimal"/>
        <Element Offset="22288" Vartype="Double" Bytesize="8" OffsetHex="00005710" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22296" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005718" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22312" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005728" DisplayMethod="Hexadecimal"/>
        <Element Offset="22320" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005730" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22336" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005740" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22344" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005748" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22372" Vartype="Float" Bytesize="4" OffsetHex="00005764" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22376" Vartype="Double" Bytesize="8" OffsetHex="00005768" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22384" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005770" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22400" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005780" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22408" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005788" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22424" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005798" DisplayMethod="Hexadecimal"/>
        <Element Offset="22432" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="000057A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22460" Vartype="4 Bytes" Bytesize="4" OffsetHex="000057BC" DisplayMethod="Hexadecimal"/>
        <Element Offset="22464" Vartype="Double" Bytesize="8" OffsetHex="000057C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22472" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000057C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22488" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000057D8" DisplayMethod="Hexadecimal"/>
        <Element Offset="22496" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000057E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22512" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000057F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22520" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="000057F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22548" Vartype="Float" Bytesize="4" OffsetHex="00005814" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22552" Vartype="Double" Bytesize="8" OffsetHex="00005818" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22560" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005820" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22576" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005830" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22584" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005838" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22600" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005848" DisplayMethod="Hexadecimal"/>
        <Element Offset="22608" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005850" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22636" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000586C" DisplayMethod="Hexadecimal"/>
        <Element Offset="22640" Vartype="Double" Bytesize="8" OffsetHex="00005870" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22648" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005878" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22664" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005888" DisplayMethod="Hexadecimal"/>
        <Element Offset="22672" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005890" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22688" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000058A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22696" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="000058A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22724" Vartype="Float" Bytesize="4" OffsetHex="000058C4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22728" Vartype="Double" Bytesize="8" OffsetHex="000058C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22736" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000058D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22752" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000058E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22760" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000058E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22776" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000058F8" DisplayMethod="Hexadecimal"/>
        <Element Offset="22784" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005900" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22812" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000591C" DisplayMethod="Hexadecimal"/>
        <Element Offset="22816" Vartype="Double" Bytesize="8" OffsetHex="00005920" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22824" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005928" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22840" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005938" DisplayMethod="Hexadecimal"/>
        <Element Offset="22848" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005940" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22864" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005950" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22872" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005958" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22900" Vartype="Float" Bytesize="4" OffsetHex="00005974" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22904" Vartype="Double" Bytesize="8" OffsetHex="00005978" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22912" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005980" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22928" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005990" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22936" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005998" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22952" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000059A8" DisplayMethod="Hexadecimal"/>
        <Element Offset="22960" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="000059B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="22988" Vartype="4 Bytes" Bytesize="4" OffsetHex="000059CC" DisplayMethod="Hexadecimal"/>
        <Element Offset="22992" Vartype="Double" Bytesize="8" OffsetHex="000059D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23000" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000059D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23016" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000059E8" DisplayMethod="Hexadecimal"/>
        <Element Offset="23024" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000059F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23040" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005A00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23048" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005A08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23076" Vartype="Float" Bytesize="4" OffsetHex="00005A24" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23080" Vartype="Double" Bytesize="8" OffsetHex="00005A28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23088" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005A30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23104" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005A40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23112" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005A48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23128" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005A58" DisplayMethod="Hexadecimal"/>
        <Element Offset="23136" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005A60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23164" Vartype="4 Bytes" Bytesize="4" OffsetHex="00005A7C" DisplayMethod="Hexadecimal"/>
        <Element Offset="23168" Vartype="Double" Bytesize="8" OffsetHex="00005A80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23176" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005A88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23192" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005A98" DisplayMethod="Hexadecimal"/>
        <Element Offset="23200" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005AA0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23216" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005AB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23224" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005AB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23252" Vartype="Float" Bytesize="4" OffsetHex="00005AD4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23256" Vartype="Double" Bytesize="8" OffsetHex="00005AD8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23264" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005AE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23280" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005AF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23288" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005AF8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23304" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005B08" DisplayMethod="Hexadecimal"/>
        <Element Offset="23312" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005B10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23340" Vartype="4 Bytes" Bytesize="4" OffsetHex="00005B2C" DisplayMethod="Hexadecimal"/>
        <Element Offset="23344" Vartype="Double" Bytesize="8" OffsetHex="00005B30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23352" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005B38" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23368" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005B48" DisplayMethod="Hexadecimal"/>
        <Element Offset="23376" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005B50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23392" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005B60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23400" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005B68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23428" Vartype="Float" Bytesize="4" OffsetHex="00005B84" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23432" Vartype="Double" Bytesize="8" OffsetHex="00005B88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23440" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005B90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23456" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005BA0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23464" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005BA8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23480" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005BB8" DisplayMethod="Hexadecimal"/>
        <Element Offset="23488" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005BC0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23516" Vartype="4 Bytes" Bytesize="4" OffsetHex="00005BDC" DisplayMethod="Hexadecimal"/>
        <Element Offset="23520" Vartype="Double" Bytesize="8" OffsetHex="00005BE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23528" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005BE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23544" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005BF8" DisplayMethod="Hexadecimal"/>
        <Element Offset="23552" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005C00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23568" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005C10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23576" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005C18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23604" Vartype="Float" Bytesize="4" OffsetHex="00005C34" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23608" Vartype="Double" Bytesize="8" OffsetHex="00005C38" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23616" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005C40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23632" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005C50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23640" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005C58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23656" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005C68" DisplayMethod="Hexadecimal"/>
        <Element Offset="23664" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005C70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23692" Vartype="4 Bytes" Bytesize="4" OffsetHex="00005C8C" DisplayMethod="Hexadecimal"/>
        <Element Offset="23696" Vartype="Double" Bytesize="8" OffsetHex="00005C90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23704" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005C98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23720" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005CA8" DisplayMethod="Hexadecimal"/>
        <Element Offset="23728" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005CB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23744" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005CC0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23752" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005CC8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23780" Vartype="Float" Bytesize="4" OffsetHex="00005CE4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23784" Vartype="Double" Bytesize="8" OffsetHex="00005CE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23792" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005CF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23808" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005D00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23816" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005D08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23832" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005D18" DisplayMethod="Hexadecimal"/>
        <Element Offset="23840" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005D20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23868" Vartype="4 Bytes" Bytesize="4" OffsetHex="00005D3C" DisplayMethod="Hexadecimal"/>
        <Element Offset="23872" Vartype="Double" Bytesize="8" OffsetHex="00005D40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23880" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005D48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23896" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005D58" DisplayMethod="Hexadecimal"/>
        <Element Offset="23904" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005D60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23920" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005D70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23928" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005D78" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23956" Vartype="Float" Bytesize="4" OffsetHex="00005D94" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23960" Vartype="Double" Bytesize="8" OffsetHex="00005D98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23968" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005DA0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23984" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005DB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="23992" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005DB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24008" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005DC8" DisplayMethod="Hexadecimal"/>
        <Element Offset="24016" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005DD0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24044" Vartype="4 Bytes" Bytesize="4" OffsetHex="00005DEC" DisplayMethod="Hexadecimal"/>
        <Element Offset="24048" Vartype="Double" Bytesize="8" OffsetHex="00005DF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24056" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005DF8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24072" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005E08" DisplayMethod="Hexadecimal"/>
        <Element Offset="24080" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005E10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24096" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005E20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24104" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005E28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24132" Vartype="Float" Bytesize="4" OffsetHex="00005E44" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24136" Vartype="Double" Bytesize="8" OffsetHex="00005E48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24144" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005E50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24160" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005E60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24168" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005E68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24184" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005E78" DisplayMethod="Hexadecimal"/>
        <Element Offset="24192" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005E80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24220" Vartype="4 Bytes" Bytesize="4" OffsetHex="00005E9C" DisplayMethod="Hexadecimal"/>
        <Element Offset="24224" Vartype="Double" Bytesize="8" OffsetHex="00005EA0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24232" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005EA8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24248" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005EB8" DisplayMethod="Hexadecimal"/>
        <Element Offset="24256" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005EC0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24272" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005ED0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24280" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005ED8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24308" Vartype="Float" Bytesize="4" OffsetHex="00005EF4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24312" Vartype="Double" Bytesize="8" OffsetHex="00005EF8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24320" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005F00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24336" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005F10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24344" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005F18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24360" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005F28" DisplayMethod="Hexadecimal"/>
        <Element Offset="24368" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005F30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24396" Vartype="4 Bytes" Bytesize="4" OffsetHex="00005F4C" DisplayMethod="Hexadecimal"/>
        <Element Offset="24400" Vartype="Double" Bytesize="8" OffsetHex="00005F50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24408" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005F58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24424" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005F68" DisplayMethod="Hexadecimal"/>
        <Element Offset="24432" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005F70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24448" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005F80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24456" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005F88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24484" Vartype="Float" Bytesize="4" OffsetHex="00005FA4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24488" Vartype="Double" Bytesize="8" OffsetHex="00005FA8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24496" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005FB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24512" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00005FC0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24520" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00005FC8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24536" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00005FD8" DisplayMethod="Hexadecimal"/>
        <Element Offset="24544" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00005FE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24572" Vartype="4 Bytes" Bytesize="4" OffsetHex="00005FFC" DisplayMethod="Hexadecimal"/>
      </Elements>
    </Structure>
  </Structures>
  <LuaScript>function BGRToHex(blue, green, red)
GetAddressList().Control[0].BackgroundColor= (col)
 if(red &lt; 0 or red &gt; 255 or green &lt; 0 or green &gt; 255 or blue &lt; 0 or blue &gt; 255) then

 return nil
 end
 return string.format("0x%.2X%.2X%.2X", blue,green,red)
end

--======================================================--

--======================================================--
function colorMenuClick()
 fc = createForm()
 fc.Width = 300
 fc.Height = 300
 fc.Position = 'poScreenCenter'
 fc.Caption = 'Theme Picker'
 fc.Color = '0x00FFFFFF'

 p = createPanel(fc)
 p.top = 20
 p.height = 100
 p.width = 200
 p.left = math.floor((fc.width - p.width) / 2)
 p.color = '0x00000000'

 t1 = createTrackBar(fc)
 t1.left = 15
 t1.top = p.height + p.top + 20
 t1.width = fc.width - t1.left - 80
 t1.height = 30
 t1.Max = 255
 t1.Min = 0
 t1.position = 0
 t1.SelStart = 0
 t1.SelEnd = 0

 t2 = createTrackBar(fc)
 t2.left = 15
 t2.top = t1.height + t1.top + 10
 t2.width = fc.width - t2.left - 80
 t2.height = 30
 t2.Max = 255
 t2.Min = 0
 t2.position = 0
 t2.SelStart = 0
 t2.SelEnd = 0

 t3 = createTrackBar(fc)
 t3.left = 15
 t3.top = t2.height + t2.top + 10
 t3.width = fc.width - t3.left - 80
 t3.height = 30
 t3.Max = 255
 t3.Min = 0
 t3.position = 0
 t3.SelStart = 0
 t3.SelEnd = 0

 BLabel = createLabel(fc)
 BLabel.top = t1.top
 BLabel.left = t1.left + t1.width + 12
 BLabel.caption = 'B : 0'
 BLabel.font.color = '0x00FF2020'
 BLabel.font.style = 'fsBold'

 GLabel = createLabel(fc)
 GLabel.top = t2.top
 GLabel.left = t2.left + t2.width + 12
 GLabel.caption = 'G : 0'
 GLabel.font.color = '0x00009300'
 GLabel.font.style = 'fsBold'

 RLabel = createLabel(fc)
 RLabel.top = t3.top
 RLabel.left = t3.left + t3.width + 12
 RLabel.caption = 'R : 0'
 RLabel.font.color = '0x001717FF'
 RLabel.font.style = 'fsBold'


 HxLabel = createLabel(fc)
 HxLabel.top = t3.top + t3.height + 15
 HxLabel.left = t3.left


 Hx1Label = createLabel(fc)
 Hx1Label.top = t3.top + t3.height + 7
 Hx1Label.left = HxLabel.left + HxLabel.width
 Hx1Label.font.size = 14
 Hx1Label.font.style = 'fsBold'
 Hx1Label.caption = ' '

 ExamLabel = createLabel(fc)
 ExamLabel.top = HxLabel.top + HxLabel.height + 5
 ExamLabel.left = HxLabel.left
 ExamLabel.font.size = 8


 bgrLabel = createLabel(fc)
 bgrLabel.top = ExamLabel.top + ExamLabel.height + 3
 bgrLabel.left = ExamLabel.left
 bgrLabel.font.size = 8

 smpLabel = createLabel(fc)
 smpLabel.top = bgrLabel.top + bgrLabel.height + 13
 smpLabel.left = bgrLabel.left
 smpLabel.font.size = 8

 smp1Label = createLabel(fc)
 smp1Label.top = smpLabel.top + smpLabel.height + 13
 smp1Label.left = smpLabel.left
 smp1Label.font.size = 8



 fc.show()

 B = 0
 G = 0
 R = 0
 col = nil





 function btbChange(sender)

  B = t1.position
  G = t2.position
  R = t3.position
  BLabel.Caption = 'B :  '..tostring(t1.position)
  col = BGRToHex(B,G,R)
  p.color = col

 end




 function gtbChange(sender)

  B = t1.position
  G = t2.position
  R = t3.position
  GLabel.Caption = 'G :  '..tostring(t2.position)
 col = BGRToHex(B,G,R)
  p.color = col

 end

 function rtbChange(sender)

  B = t1.position
  G = t2.position
  R = t3.position
  RLabel.Caption = 'R :  '..tostring(t3.position)
  col = BGRToHex(B,G,R)
  p.color = col

 end

 t1.onChange = btbChange
 t2.onChange = gtbChange
 t3.onChange = rtbChange



end





local int = getInternet()
local ICO = int.getURL("https://cdn.discordapp.com/attachments/721278292019118102/867141796085628958/AtlasClientIcon64.png")
local IM = createStringStream(ICO)
int.Destroy()
local Pic = createPicture()
Pic.loadFromStream(IM)
local Bit = Pic.getBitmap()
getApplication().Icon = Bit

lastSpeed=1;

function checkKeys(timer)
  if (isKeyPressed(VK_R)) then
    if lastspeed ~= 3 then
      speedhack_setSpeed(3)
      lastSpeed=3
    end
  else
    if lastspeed ~= 1 then
      speedhack_setSpeed(1)
      lastSpeed=1
    end
  end

end

t=createTimer(nil)
timer_setInterval(t, 100)
timer_onTimer(t, checkKeys)
timer_setEnabled(t, true)

PROCESS_NAME = 'minecraft.windows.exe'

openProcess(PROCESS_NAME)

if getProcessIDFromProcessName(PROCESS_NAME) ~= nil then
showMessage("Automatically Connected To Game")

else

showMessage("Couldnt Automatically Connect To Game.\rConnect Manually")

end


function Dev()
 shellExecute('https://discord.com/users/430427104786644993/')
end

function UICredits()
showMessage("Thanks to fligger and His Project Genesis Table For the UI \rAnd Thanks to Corroder For his Lua Colour Picker")
end





function AttachProcess()
   openProcess(process_name)
if getProcessIDFromProcessName(PROCESS_NAME) ~= nil then
      openProcess(PROCESS_NAME)
	  Attach.ShowHint = true
	  Attach.Enabled = true
      Attach.Caption = 'Re-Attach!'
      Loaded.Visible = true
   else
      showMessage("Cant find Minecraft process.\rMake sure Minecraft is running!")
   end
end

function ArraylistToggle()
if ArraylistOnOff.Checked then
GetAddressList().Control[0].BackgroundColor=0000000


else
GetAddressList().Control[0].BackgroundColor=16777215

end
end
function GrayToggle()
if GrayOnOff.Checked then
GetAddressList().Control[0].BackgroundColor=5592405

else
GetAddressList().Control[0].BackgroundColor=16777215


end
end

PROCESS_NAME = 'minecraft.windows.exe'
:: here ::
Arraylist.setLayeredAttributes(0xFF00FF, 240, 1)
Arraylist.visible = false
--------------------
--
---- getMainForm()
--------------------
function cycleFullCompact(sender,force) local state = not(compactmenuitem.Caption == 'Compact View Mode'); if force~=nil then state = not force end; compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'; getMainForm().Splitter1.Visible = state; getMainForm().Panel4.Visible    = state; getMainForm().Panel5.Visible    = state; end; function addCompactMenu() if compactmenualreadyexists then return end; local parent = getMainForm().Menu.Items; compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem); compactmenuitem.Caption = 'Compact View Mode'; compactmenuitem.OnClick = cycleFullCompact; compactmenualreadyexists = 'yes'; end; addCompactMenu(); cycleFullCompact(nil,true)
getMainForm().caption = "AtlasClient by TitusHM#0016"


--------------------
--
---- Panel
--------------------
TheSplitter = createSplitter(getMainForm())
TheSplitter.Align = alRight


--------------------
--
---- Panel
--------------------
CEPanel1 = createPanel(getMainForm())
CEPanel1.Width = 180
CEPanel1.Align = alRight
CEPanel1.Caption = ''
--------------------
--
---- Download
--------------------
Download = createButton(CEPanel1)
Download.Left = 10
Download.Top = 170
Download.Width = 160
Download.Height = 25
Download.Caption = 'AtlasClient Dev'
Download.onClick = Dev

--------------------
Credits = createButton(CEPanel1)
Credits.Left = 10
Credits.Top = 200
Credits.Width = 160
Credits.Height = 25
Credits.Caption = 'Credits'
Credits.onClick = UICredits
--------------------
------

--------------------
Attach = createButton(CEPanel1)
Attach.Left = 15
Attach.Height = 80
Attach.Hint = 'Restart Cheat Engine\nto attach'
Attach.Top = 10
Attach.Width = 150
Attach.ShowHint = false
Attach.onClick = AttachProcess
Attach.Caption = 'Re-Attach!'



-------------
--------------------
--
---- Loaded
--------------------
Loaded = createLabel(CEPanel1)
Loaded.Left = 18
Loaded.Top = 95
Loaded.Visible = false
Loaded.Caption = ''
Loaded.Font.Color=0x008000
Loaded.Font.Size=10
--------------------
------------------------------
---- END FORM: getMainForm()
----

--------------------

---- Arraylist
--------------------

ArraylistOnOff = createCheckBox(CEPanel1)
ArraylistOnOff.Left = 15
ArraylistOnOff.Top = 100
ArraylistOnOff.Caption = 'Dark Theme'
ArraylistOnOff.Font.Size=10
ArraylistOnOff.Onchange=ArraylistToggle

--------------------
--------------------

GrayOnOff = createCheckBox(CEPanel1)
GrayOnOff.Left = 15
GrayOnOff.Top = 120
GrayOnOff.Caption = 'Dark Gray Theme'
GrayOnOff.Font.Size=10
GrayOnOff.Onchange=GrayToggle
------------------------------
---- END FORM: getMainForm()
----
--

local int = getInternet()
local ICO = int.getURL("https://cdn.discordapp.com/attachments/721278292019118102/867141796085628958/AtlasClientIcon64.png")
local IM = createStringStream(ICO)
int.Destroy()
local Pic = createPicture()
Pic.loadFromStream(IM)
local Bit = Pic.getBitmap()
getApplication().Icon = Bit


local mainForm = getMainForm()
local colorMenu = createMenuItem(mainForm)
colorMenu.Caption = Theme

colorMenu.onClick = colorMenuClick
mainForm.PopupMenu2.Items.insert(15,colorMenu)

local mainMenu = mainForm.Menu.Items
local miColor
--Find "Color" item in main menu. Create one if not found.
for i=0,mainMenu.Count-1 do
   if mainMenu[i].Name == 'miColor' then miExtra = mainMenu[i] end
end
if miColor == nil then
   miColor = createMenuItem(mainForm)
   miColor.Name = 'miColor'
   miColor.Caption = 'Theme'
   mainMenu.insert(mainMenu.Count-2,miColor)
end

--==============================================--
--Add "Check BGR Color" item to "Color" submenu
--==============================================--
local miCheckBGRcolor = createMenuItem(miColor)
miCheckBGRcolor.Caption = 'Custom Theme'
miCheckBGRcolor.onClick = colorMenuClick
miColor.add(miCheckBGRcolor)
----

</LuaScript>
</CheatTable>
